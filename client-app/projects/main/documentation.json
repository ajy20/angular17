{
    "pipes": [
        {
            "name": "HighlightPipe",
            "id": "pipe-HighlightPipe-081e7da7f9bed64c8261be91482d95673da24da425de436e661e26fcaa6003bfbf5550eae57dc563b3ba94a2b38944ceb51fe9a4eb7d113df9b50da17e58d127",
            "file": "projects/main/src/app/shared/highlight-pipe/highlight.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "highlight",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'highlight',\r\n  standalone: true\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (!args) {\r\n      return value;\r\n    }\r\n\r\n    if (!value)\r\n      return value;\r\n\r\n    // Convert value to string in case this is a number\r\n    const stringValue = '' + value;\r\n\r\n    // Match in a case insensitive maneer\r\n    const re = new RegExp(args, 'gi');\r\n    const match = stringValue.match(re);\r\n\r\n    // If there's no match, just return the original value.\r\n    if (!match) {\r\n      return stringValue;\r\n    }\r\n\r\n    const v = stringValue.replace(re, \"<mark>\" + match[0] + \"</mark>\")\r\n    return this.sanitizer.bypassSecurityTrustHtml(v);\r\n  }\r\n\r\n}\r\n"
        },
        {
            "name": "SecurePipe",
            "id": "pipe-SecurePipe-e407a0bfac3e6e211409d9bd7300f7b48582cb2d48f526b4ec484bc5ef8195e74cbe428338bd47f88b1ece489428f3994a0ea61d155e9038b8c002365eb4bcd7",
            "file": "projects/main/src/app/shared/secure-pipe/secure.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SafeUrl | null>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "secure",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { map, Observable, of } from 'rxjs';\r\n\r\n@Pipe({\r\n  name: 'secure',\r\n  standalone: true\r\n})\r\nexport class SecurePipe implements PipeTransform {\r\n\r\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) { }\r\n\r\n  transform(url: string): Observable<SafeUrl | null> {\r\n    if (!url) return of(null);\r\n    return this.http\r\n      .get(url, { responseType: 'blob' })\r\n      .pipe(map(val => this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(val))));\r\n  }\r\n}\r\n"
        },
        {
            "name": "ShortenPipe",
            "id": "pipe-ShortenPipe-77926d4cf763af2590ca94c94be52623317b3f5f6dc4f360588dbd779d7b6b06a7db09278f207a5205dea625a734519d8affaac98e4cc379a1184de831c122ee",
            "file": "projects/main/src/app/shared/shorten-pipe/shorten.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "shorten",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'shorten',\r\n  standalone: true\r\n})\r\nexport class ShortenPipe implements PipeTransform {\r\n\r\n  transform(value: string, length?: number): string {\r\n    return (value.length > (length || Infinity)) ? value.slice(0, length) + '.' : value;\r\n  }\r\n\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Anomaly",
            "id": "interface-Anomaly-ee09ac08bcd20f1a7ec29f88bcd720d567725c48bf92c9d35fea77dacd3a70ff964a447ced29a57b9800738c107c21570f337c15db8f3fe1e1d017eebf48d9c8",
            "file": "projects/main/src/app/features/products/shared/models/ticket/anomaly.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Anomaly {\r\n  type: string;\r\n  text: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Anomaly",
            "id": "interface-Anomaly-4f04de92b476264dca86ced912518c1b5e67ac538de7adfdaa1b392de73fba899fb5b11fc77e9dcebf7ef5f869aa565da755eff85ece740decde6e0bf71a5a6d-1",
            "file": "projects/main/src/app/features/products/shared/components/anomalies/model/anomaly.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Anomaly {\r\n    description: string;\r\n    cleaningPayload: any;\r\n}",
            "properties": [
                {
                    "name": "cleaningPayload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Anomaly-1"
        },
        {
            "name": "AuthenticatedUser",
            "id": "interface-AuthenticatedUser-cd7ab4bf46e392b60c0c529a8777398381bf6d5279558b159d0ff739efc7f1dd449c823b92b04897af39a47102acc652fe36709ee95979868612b8124a79bb46",
            "file": "projects/main/src/app/core/user/model/authenticated-user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthenticatedUser {\r\n  id: string;\r\n  userName: string;\r\n  name: string;\r\n  givenName: string;\r\n  surname: string;\r\n  email: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "givenName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "surname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BacklogTableOptions",
            "id": "interface-BacklogTableOptions-a768520bc0bae2cb33818ae5ceb92a792b61bd42a5aa01890dd9e094563ba31a757dc10043c5eefdb9b029908273c4d153429fee023235cdf5532c089c737865",
            "file": "projects/main/src/app/shared/backlog-table/model/backlog-table-options.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BacklogTableOptions {\r\n  favouriteProductLineIds: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "favouriteProductLineIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BacklogTableWorkItem",
            "id": "interface-BacklogTableWorkItem-88482d295d165e854006eb777b71c8ede9d8977e0e0dcdb8ad7d962231bcc1805e066841034af762397e3ce6566942f202c556756e2f0dd5fc9e8b372513f2ef",
            "file": "projects/main/src/app/shared/backlog-table/model/backlog-table-work-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BacklogTableWorkItem {\r\n  id: string;\r\n  name: string;\r\n  productLine: { id: string, name: string };\r\n  epic: { id: string, name: string };\r\n  feature: { id: string, name: string };\r\n  story: { id: string, name: string };\r\n  //effort: number;\r\n  //plannedCompletionDate: Date;\r\n  //actualCompletionDate: Date | null;\r\n}\r\n",
            "properties": [
                {
                    "name": "epic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "feature",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "productLine",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "story",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BaseDocument",
            "id": "interface-BaseDocument-b3233eda70c6d701272e4a16cece856290b3fcf200c4607fdcda13b0fcdec9e3cd4bd8ecd4b64ed7af46445dda4c6d964f5aed6c1389fa6dd588e7d13ad513e8",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/models/document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BaseVersionLite } from \"./version-lite.model\";\r\n\r\nexport interface BaseDocument {\r\n  id: string;\r\n  productId: string;\r\n  parentId: string;\r\n  name?: string;\r\n  reference?: string;\r\n  versionOffset: number;\r\n  admin: boolean;\r\n  versions: BaseVersionLite[];\r\n  lastModifiedBy: string;\r\n  lastModifiedOn: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "admin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lastModifiedBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lastModifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "parentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "reference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "versionOffset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "versions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BaseVersionLite[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BaseVersion",
            "id": "interface-BaseVersion-5c18817f79a02932177a7e27b16cf0291de6c88416e400db862d4fc0a22269b37439245bd501ac3f44d8fc23f9e2dfffb2f1b5c40f49ff1471a3a68d69abda5f",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/models/base-version.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseVersion {\r\n  id: string;\r\n  productId: string;\r\n  documentId: string;\r\n  documentName: string;\r\n  ticketId: string;\r\n  label: string;\r\n  branchedFromVersionId: string;\r\n  synchedWithVersionId: string;\r\n  deleted: boolean;\r\n  released: boolean;\r\n  isLatestPublished: boolean;\r\n  releaseDate: Date;\r\n  statuses: { [key: string]: string; };\r\n  lastModifiedOn: string;\r\n  variants?: any;\r\n  canResetWorkflow: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "branchedFromVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "canResetWorkflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "deleted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "documentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "documentName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isLatestPublished",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "lastModifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "released",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "releaseDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "statuses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "synchedWithVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "ticketId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "variants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BaseVersionChangeHistory",
            "id": "interface-BaseVersionChangeHistory-8fc7c4f07646bfb2596397de219903b97e4cbc2d621d972db8c91df20fcd91d4e7f53fdda6495c384fa1b45ea69322f94798939379d006a17286a887a715b4ce",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/models/version-change-history.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseVersionChangeHistory {\r\n  id: string;\r\n  changeItems: {\r\n    description: string, details: string, occurredOn: Date, changedBy: { id: string, abbreviatedName: string, fullName: string, viaProcessId: string }\r\n  }[];\r\n}\r\n",
            "properties": [
                {
                    "name": "changeItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BaseVersionComparison",
            "id": "interface-BaseVersionComparison-9a3f5c813a3f67162583ba434388184423d3360be3d6a2eeaae9914c062170351f21e5dc3f1ff2275b9cef8669578fb4296c0ee706de122d25220349e927fb2f",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/models/version-comparison.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseVersionComparison {\r\n  versionId1: string;\r\n  versionId2: string;\r\n  productId: string;\r\n  documentId: string;\r\n  documentName: string;\r\n  ticketId1: string;\r\n  ticketId2: string;\r\n  label1: string;\r\n  label2: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "documentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "documentName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "label2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "ticketId1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ticketId2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "versionId1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "versionId2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BehaviourOptions",
            "id": "interface-BehaviourOptions-1009eefd27c33b81afe42246f02e879ee0858f2d8fc761a85c8d7ca3674db1b7583c26c540fa3d0146753e50605b4ca4f892cd527f8001c9d9eb297f0505760f",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/models/behaviour-options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BehaviourOptions {\r\n  canRename: boolean;\r\n  canChangeReference: boolean;\r\n  // ...\r\n}\r\n",
            "properties": [
                {
                    "name": "canChangeReference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "canRename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Budget",
            "id": "interface-Budget-b207d183f31a0258ed188d23d0622c83f7f564fc550f64ed009eb3da70537881e37e0761db31b87a81129879d018395dfdceff3781355dd381886452dd668265",
            "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { faDollar, faFilter } from '@fortawesome/free-solid-svg-icons';\r\nimport { DataTableComponent } from '../../../../shared/data-table/data-table.component';\r\nimport { DataTableColumnDefinition } from '../../../../shared/data-table/model/data-table-column-definition.model';\r\nimport { DataTableSettings } from '../../../../shared/data-table/model/data-table-settings.model';\r\n \r\n\r\n\r\nexport interface Budget {\r\n  department: string;\r\n  region: string;\r\n  professionalServices: number;\r\n  developmentMaterial: number;\r\n  testHours: number;\r\n  engineeringHours: number;\r\n  designHours: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'csps-project-budget',\r\n  standalone: true,\r\n  imports: [DataTableComponent],\r\n  templateUrl: './project-budget.component.html',\r\n  styleUrl: './project-budget.component.scss'\r\n})\r\nexport class ProjectBudgetComponent implements OnInit {\r\n\r\n  d: Budget[] = [\r\n    { department: 'depart1', region: 'Europe', professionalServices: 24500, developmentMaterial: 41526, testHours: 250, engineeringHours: 30, designHours: 95 },\r\n    { department: 'depart1', region: 'Asia', professionalServices: 5265, developmentMaterial: 321, testHours: 0, engineeringHours: 12, designHours: 5 },\r\n    { department: 'depart2', region: 'North America', professionalServices: 454, developmentMaterial: 321, testHours: 0, engineeringHours: 30, designHours: 7 },\r\n    { department: 'depart2', region: 'Europe', professionalServices: 7853, developmentMaterial: 12, testHours: 25, engineeringHours: 8, designHours: 7 },\r\n  ]\r\n\r\n\r\n  settings!: DataTableSettings<Budget>;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.updateTable('department');\r\n  }\r\n\r\n  updateGroupBy(groupBy: string): () => void {\r\n    return () => {\r\n      this.updateTable(groupBy);\r\n    }\r\n  }\r\n\r\n  updateTable(groupBy: string): void {\r\n    this.settings = {\r\n      columnDefinitions: [\r\n        ...groupBy === 'department' ? [] : [{ id: '1', name: 'department', label: 'Department', type: 'text', visible: true, searchable: false, filterMode: 'none' } as DataTableColumnDefinition] ,\r\n        ...groupBy === 'region' ? [] : [{ id: '2', name: 'region', label: 'Region', type: 'text', visible: true, searchable: false, filterMode: 'none' } as DataTableColumnDefinition],\r\n        { id: '3', name: 'professionalServices', label: 'Prof. Srv.', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', name: 'developmentMaterial', label: 'Dev. Mat.', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '5', name: 'testHours', label: 'Test Hours', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '6', name: 'engineeringHours', label: 'Eng. Hours', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '7', name: 'designHours', label: 'Des. Hours', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      data: this.d,\r\n      toolBar: {\r\n        right: [\r\n          { name: 'My Budget', icon: faDollar, type: 'button', callback: () => alert('Show my budget') },\r\n          {\r\n            name: 'Group By', icon: faFilter, type: 'dropdown', callback: () => { }, controls: [\r\n              { name: 'Department', type: 'button', callback: this.updateGroupBy('department').bind(this) },\r\n              { name: 'Region', type: 'button', callback: this.updateGroupBy('region').bind(this) }\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      groupBy: [\r\n        {\r\n          property: groupBy, orderBy: [groupBy], columns: [\r\n            { name: groupBy, type: 'text', alignment: 'left', class: 'fw-bold', searchable: false, colspan: 7 },\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "department",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "designHours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "developmentMaterial",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "engineeringHours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "professionalServices",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "region",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "testHours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BurnDownChartOptions",
            "id": "interface-BurnDownChartOptions-9bfa4a021fedda58b400b425bb30b4e67dc3dfc7a27074d0ee6db5ab9fb9e214880828c283436ef626080514f11cddb161e020c834da3f618e6756b1b7887e11",
            "file": "projects/main/src/app/shared/burn-down-chart/model/burn-down-chart-options.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TimeUnit } from \"chart.js\";\r\n\r\nexport interface BurnDownChartOptions {\r\n  minDateISOString?: string;\r\n  maxDateISOString?: string;\r\n  minYValue?: number;\r\n  maxYValue?: number;\r\n  hideLegend?: boolean;\r\n  timeUnit?: TimeUnit\r\n}\r\n",
            "properties": [
                {
                    "name": "hideLegend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "maxDateISOString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "maxYValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "minDateISOString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "minYValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "timeUnit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeUnit",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BurnDownChartTask",
            "id": "interface-BurnDownChartTask-96bddbbe7292d89d1fd77aa30d34c1f93951cddfa0c7a73dff63ab5ecfcb0cc815e4703541185655630d5e5b198f056bf19150eab463dcad4c8e2c9aee00b184",
            "file": "projects/main/src/app/shared/burn-down-chart/model/burn-down-chart-task.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BurnDownChartTask {\r\n  id: string;\r\n  name: string;\r\n  effort: number;\r\n  plannedCompletionDate: Date;\r\n  actualCompletionDate: Date | null;\r\n}\r\n",
            "properties": [
                {
                    "name": "actualCompletionDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "effort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "plannedCompletionDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Button",
            "id": "interface-Button-905395d6547547f50caaacea90e5bb6ea9d5d70b8416e62e729f29c12945782121a0cf1a21f4f4188a503a8c327e4f66ad1d8e67c5d92980ad9f92ed2f25906c",
            "file": "projects/main/src/app/shared/dynamic-form/models/button.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Button {\r\n  label: string,\r\n  reason: string,\r\n  disabled?: boolean\r\n}\r\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "reason",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ChangeRequest",
            "id": "interface-ChangeRequest-ee2cc2d387ef7e39d2219a3ac7766cdd6acc5f3675adba0d8ef7dc8bacab38aae71064de0aaf36b56e6a1f6c4ee6651c41d09a5e266cc1aa016e8fb5809e6503",
            "file": "projects/main/src/app/features/work/change-management/shared/models/change-request.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ChangeRequest {\r\n  ID: string;\r\n  Number: string;\r\n  Name: string;\r\n  Context: { ID: string, Name: string }\r\n}\r\n",
            "properties": [
                {
                    "name": "Context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "Number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Colors",
            "id": "interface-Colors-dddb925ed2d2b034bb2b29eeca0280a8a95de62cd3e702c5008e227af4fe9f26aefa3951e6ea833c2da1c9921507f311f3c74950f24495fa3b79a8d6ab52ca0c",
            "file": "projects/main/src/app/shared/theme/model/colors.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Colors {\r\n  'blue': string,\r\n  'indigo': string,\r\n  'purple': string,\r\n  'pink': string,\r\n  'red': string,\r\n  'orange': string,\r\n  'yellow': string,\r\n  'green': string,\r\n  'teal': string,\r\n  'cyan': string,\r\n  'white': string,\r\n  'gray': string,\r\n  'gray-dark': string,\r\n  'primary': string,\r\n  'secondary': string,\r\n  'success': string,\r\n  'info': string,\r\n  'warning': string,\r\n  'danger': string,\r\n  'light': string,\r\n  'dark': string\r\n}\r\n",
            "properties": [
                {
                    "name": "blue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "cyan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "danger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "dark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "gray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "gray-dark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "green",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "indigo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "info",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "light",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "orange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "pink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "primary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "purple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "red",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "secondary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "teal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "warning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "white",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "yellow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataTableCell",
            "id": "interface-DataTableCell-25cea69e8deeb76c0e6d816652dab3104316393c2d7849f1ff234b5c363e93cd91d90db0674054814c7b0342f8f4abfca6d9fe5c8ba1d8c8c2cf4eaa08effb9e",
            "file": "projects/main/src/app/shared/data-table/model/data-table-cell.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTableCell {\r\n  value: any;\r\n  type: 'text' | 'icon' | 'picture' | 'button';\r\n  class: string;\r\n  alignment: 'left' | 'center' | 'right';\r\n  prop: string;\r\n  colspan: number;\r\n  canClick: boolean;\r\n  click: () => void;\r\n}\r\n",
            "properties": [
                {
                    "name": "alignment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"center\" | \"right\"",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "canClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "colspan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "prop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"icon\" | \"picture\" | \"button\"",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataTableColumn",
            "id": "interface-DataTableColumn-21eadd07660cdf4b06bbf50ca0edcbc644e6f772a33179f445974f78219a0561289b61277f3e6331bd6a6d7f6c59cdeb9a90164bf402bee25740cd6cc9d2bc45",
            "file": "projects/main/src/app/shared/data-table/model/data-table-column.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Subject } from \"rxjs\";\r\n\r\nexport interface DataTableColumn {\r\n  // The id of the column\r\n  id: string;\r\n  // The name of the property mapped to the column\r\n  name: string;\r\n  // The column header text\r\n  label: string;\r\n  // The type of data to show in the column\r\n  type: 'text' | 'icon' | 'picture' | 'button';\r\n  // The css class to apply to the column\r\n  columnClass?: string;\r\n  // The css class to apply to cells in the column\r\n  cellClass?: string | ((data: any) => string);\r\n  // The alignment of the cells in the column\r\n  cellAlignment?: 'left' | 'center' | 'right';\r\n  // The colspan for the column header\r\n  colspan?: number;\r\n  // Indicates whether the column is visible or not\r\n  visible: boolean;\r\n  // Indicates whether the column data can be searchable\r\n  searchable: boolean;\r\n  // The type of filter for the column\r\n  // select: show a dropdown with a list of all values in the column\r\n  // numeric: show an option form to filter based on typical numeric comparison: greater than, less than,...\r\n  // text: free field text\r\n  // icon: show a dropdown with a list of unique icons from the column\r\n  // none: the column cannot be filtered\r\n  filterMode: 'select' | 'numeric' | 'text' | 'icon' | 'none';\r\n  // Used only when filterMode = select. Holds the list of all unique values in the column\r\n  filterValues?: { value: string, selected: boolean }[];\r\n  // The text to show in the filter\r\n  filterText?: string;\r\n  // The observable holding the currently selected filter values\r\n  filterSubject$: Subject<string[]>;\r\n  // The filter status\r\n  filterStatus?: 'all' | 'indeterminate' | 'none';\r\n  // Callback when a cell is clicked on\r\n  click?: (data: any) => void;\r\n}\r\n",
            "properties": [
                {
                    "name": "cellAlignment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"center\" | \"right\"",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "cellClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | ",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "colspan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "columnClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "filterMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"select\" | \"numeric\" | \"text\" | \"icon\" | \"none\"",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "filterStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"all\" | \"indeterminate\" | \"none\"",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "filterSubject$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "filterText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "filterValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "searchable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"icon\" | \"picture\" | \"button\"",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataTableColumnDefinition",
            "id": "interface-DataTableColumnDefinition-c25890664fb33eaba438467eb3a67a991d4604ec176e17fbacd60fe151fae7b745de3a37dba071f42567a9d557c8fa66870b52cbda1f1568acb7e04318050d4a",
            "file": "projects/main/src/app/shared/data-table/model/data-table-column-definition.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTableColumnDefinition {\r\n  id: string;\r\n  name: string;\r\n  label: string;\r\n  excelLabel?: string;\r\n  type: 'text' | 'icon' | 'picture' | 'button';\r\n  columnClass?: string;\r\n  columnColspan?: number;\r\n  cellClass?: string | ((data: any) => string);\r\n  cellAlignment?: 'left' | 'center' | 'right';\r\n  visible: boolean;\r\n  searchable: boolean;\r\n  filterMode: 'select' | 'numeric' | 'text' | 'icon' | 'none';\r\n  excludeFromExcelExport?: boolean;\r\n  click?: (data: any) => void;\r\n}\r\n",
            "properties": [
                {
                    "name": "cellAlignment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"center\" | \"right\"",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "cellClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | ",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "columnClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "columnColspan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "excelLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "excludeFromExcelExport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "filterMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"select\" | \"numeric\" | \"text\" | \"icon\" | \"none\"",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "searchable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"icon\" | \"picture\" | \"button\"",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataTableGroupBy",
            "id": "interface-DataTableGroupBy-c8fbdfa63292e08da29067ec38fbf9fcc5404d7706393eb6978b0a5b5b1a7586f02b932564fbcd0a6bda8d770a07fad6409728f8ca081c2d5b01305d9bb5b0f7",
            "file": "projects/main/src/app/shared/data-table/model/data-table-group-by.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataTableGroupBy {\r\n  // The property used for grouping\r\n  property: string;\r\n  // The properties used for ordering the groups\r\n  orderBy: string[];\r\n  // Indicates whether to show the group if the groupBy property value is undefined\r\n  showUndefined?: boolean;\r\n  // The css class to apply to the group by row\r\n  rowClass?: string | ((data: any) => string);\r\n  // The mapping of group properties to data table columns\r\n  columns: {\r\n    name: string,\r\n    excelLabel?: string,\r\n    type: 'text' | 'icon' | 'picture' | 'button',\r\n    class?: string | ((data: any) => string),\r\n    alignment?: 'left' | 'center' | 'right',\r\n    colspan: number,\r\n    searchable?: boolean,\r\n    excludeFromExcelExport?: boolean;\r\n    click?: (data: any) => void;\r\n  }[];\r\n}\r\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "orderBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "rowClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | ",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "showUndefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataTableSettings",
            "id": "interface-DataTableSettings-cc06396d11330550e928c1d06996dcc4589e996c81fb9f4c0717bc453bff23ed083acc51a32d549184cbc9ac6a4a0b9ba95c69d3bcfdd62b15e088c17695be9d",
            "file": "projects/main/src/app/shared/data-table/model/data-table-settings.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataTableGroupBy } from \"./data-table-group-by.model\";\r\nimport { DataTableColumnDefinition } from \"./data-table-column-definition.model\";\r\nimport { DataTableToolbar } from \"./data-table-toolbar.model\";\r\n\r\nexport interface DataTableSettings<T> {\r\n  data: T[];\r\n  hideRow?: (row: any) => boolean;\r\n  columnDefinitions: DataTableColumnDefinition[];\r\n  toolBar?: DataTableToolbar;\r\n  selectableRows?: boolean;\r\n  cascadeParentSelectionToChildren?: boolean;\r\n  draggableRows?: boolean;\r\n  rowIdProperty?: string;\r\n  groupBy: DataTableGroupBy[];\r\n  defaultFilterValues?: string[][];\r\n}\r\n",
            "properties": [
                {
                    "name": "cascadeParentSelectionToChildren",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "columnDefinitions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumnDefinition[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "defaultFilterValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[][]",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "draggableRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "groupBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableGroupBy[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "hideRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "rowIdProperty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectableRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "toolBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableToolbar",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataTableToolbar",
            "id": "interface-DataTableToolbar-8f7f9bb6aa051be55a7c0c7abde10026178e53abfd5d6a7372a719d773d879983b559181ae5083ddc227d3d900fe15e5856c83d765bc3ce01af010a3a20db6ac",
            "file": "projects/main/src/app/shared/data-table/model/data-table-toolbar.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataTableToolbarControl } from './data-table-toolbar-control.model';\r\n\r\nexport interface DataTableToolbar {\r\n  left?: DataTableToolbarControl[];\r\n  right?: DataTableToolbarControl[];\r\n}\r\n",
            "properties": [
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableToolbarControl[]",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "right",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableToolbarControl[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataTableToolbarControl",
            "id": "interface-DataTableToolbarControl-e27c84204ed4242e1c1de68625b8287f103f188b7972ee6ac3318d23cec3b59e59bb0238eaab773a246275f80477f01f5675327adede020326a466e2b103930e",
            "file": "projects/main/src/app/shared/data-table/model/data-table-toolbar-control.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nexport interface DataTableToolbarControl {\r\n  type: 'button' | 'splitButton' | 'dropdown' | 'search' | 'filter' | 'excel' | 'pdf';\r\n  icon?: IconDefinition;\r\n  name: string;\r\n  controls?: DataTableToolbarControl[];\r\n  callback: (data?: any) => void;\r\n  preserveSelection?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "callback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "controls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableToolbarControl[]",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "preserveSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"button\" | \"splitButton\" | \"dropdown\" | \"search\" | \"filter\" | \"excel\" | \"pdf\"",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Dimension",
            "id": "interface-Dimension-a6d1496a820f16ef86212302c9a4d162e388a3878eeede4e03a5c040ecf358908816c09ab1e0df3667b92ca5d61eb034c290e1e50a19d65b8139bfa0d4cf1a88",
            "file": "projects/main/src/app/features/products/shared/models/dimensions/dimension.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Uom } from \"./uom.model\";\r\n\r\nexport interface Dimension {\r\n  id: string;\r\n  name: string;\r\n  metric: Uom;\r\n  english: Uom;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "english",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Uom",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "metric",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Uom",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DimensionList",
            "id": "interface-DimensionList-24ad93eafa6a3c9b46ee6e0d0df2843ded5d9449366303427c2c8f14e6d0ddd69205901a6f4de0532eb1f629dfd75ee516d65dff8d1b207c75fab04766dfa0cb",
            "file": "projects/main/src/app/features/products/shared/models/dimensions/dimension-list.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Dimension } from \"./dimension.model\";\r\n\r\nexport interface DimensionList {\r\n  dimensions: Dimension[];\r\n}\r\n",
            "properties": [
                {
                    "name": "dimensions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dimension[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Epic",
            "id": "interface-Epic-e9858c0ff6e559891b945d6d42c87c4cfe653d37c4143fef08234c97f3677fd261bc340a3dd29c9042c91b6f5c7f9288ef76ca7e096f2504c6d2e1d7c2657b95",
            "file": "projects/main/src/app/shared/feature-map/model/epic.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Feature } from \"./feature.model\";\r\n\r\nexport interface Epic {\r\n  id: string;\r\n  name: string;\r\n  features: Feature[];\r\n}\r\n",
            "properties": [
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Feature[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Factory",
            "id": "interface-Factory-f4b77de9284255cf556d6a82f56e9b117d8fdad06251a6661ebe5f16aa603c74bd266956dc7f94e05fb6bf7c5f597c10d5cec060b144f48eca34edf0f2bdd239",
            "file": "projects/main/src/app/features/products/shared/models/factory/factory.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Mrp } from \"./mrp.model\";\r\n\r\nexport interface Factory {\r\n  id: string;\r\n  name: string;\r\n  shortName: string;\r\n  abbreviation: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  mrpSystem: Mrp;\r\n  sapCode ?: string;\r\n  labOfficeCode ?: string;\r\n  favourite ?: boolean;\r\n  showErpTemplate ?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "abbreviation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "favourite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "labOfficeCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "latitude",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "longitude",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "mrpSystem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Mrp",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sapCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "shortName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "showErpTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Feature",
            "id": "interface-Feature-2157a33bb0d2b85474c46f560c4bd38f11ab61ecb9e1c943d4a0896787a5561ec45f072b8f26123b58eb806f17372c220960094a4ac852cfab57197bc44dec20",
            "file": "projects/main/src/app/shared/feature-map/model/feature.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Feature {\r\n  id: string;\r\n  name: string;\r\n  targetProgramIncrementId?: string;\r\n }\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "targetProgramIncrementId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FeatureComparison",
            "id": "interface-FeatureComparison-9746908b309f3400cbe3b886f43059dd309081bad8a55c01fe71910762604c293c1bce715a6c32e3e068131bd09678620298af103f0112cb1eea6d6a9852a2d9",
            "file": "projects/main/src/app/features/products/shared/components/feature-comparer/models/feature-comparison.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FeatureComparison {\r\n  id: string;\r\n  // category: FeatureCategoryComparison;\r\n  // name: string;\r\n  // description: string;\r\n  // rank: string;\r\n  // dimensionId: string;\r\n  // isNumeric: boolean;\r\n  // isFreeText: boolean;\r\n  // options: FeatureOptionComparison[];\r\n  // styleRestrictions: string[];\r\n  // notes: string;\r\n  // isArray: boolean;\r\n  // added: boolean;\r\n  // modified: boolean;\r\n  // deleted: boolean;\r\n  // differences: Difference[];\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FeatureFactoryList",
            "id": "interface-FeatureFactoryList-b37fba2050c0d2a88b01b101ae08e6a31aad922b5dc1666c4332593bc44f58b8e13c0f78622dc12382dc48ec73a7d7c5885f7e49670ed8154e1fcaa4c56ef4c2",
            "file": "projects/main/src/app/features/products/features/shared/models/feature-factory-list.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FeatureFactoryList {\r\n  finalAssemblyFactoryIds: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "finalAssemblyFactoryIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FeatureListFactory",
            "id": "interface-FeatureListFactory-8786937aae0d467c4f01676598bc27027688da12f512aad99314df6bba7ada433f158da6d9b242ae0bc41704446a7516852b9c7fb2e5376d9ac8610e59d9874b",
            "file": "projects/main/src/app/features/products/features/shared/models/feature-list-factory.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FeatureListFactory {\r\n  id: string;\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FeatureListVersion",
            "id": "interface-FeatureListVersion-393f31454381fd2037a3061c033976d96fa4dd4093f54ed46255b961c4b21d3255f850fb2c2725deaa682c4abcf38d979acb44f3c9b48890291150a7b636f73d",
            "file": "projects/main/src/app/features/products/features/shared/models/feature-list-version.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BaseVersion } from '../../../shared/components/version-page-template/models/base-version.model';\r\nimport { ProductFeatureListTableFeature } from '../product-feature-list-table/model/product-feature-list-table-feature.model';\r\n\r\nexport interface FeatureListVersion extends BaseVersion {\r\n  features: ProductFeatureListTableFeature[];\r\n  canReleaseWithRestrictions: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "canReleaseWithRestrictions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductFeatureListTableFeature[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "BaseVersion"
            ]
        },
        {
            "name": "FeatureListVersionComparison",
            "id": "interface-FeatureListVersionComparison-3dcf15f803aa0127ecf746821dd9dfb14761426a554904d64fe48396d49cdd5e32e8fa9547640ec1cff2d55201891375fa78b513588d4b0e36cbf0b250f42f48",
            "file": "projects/main/src/app/features/products/shared/components/feature-comparer/models/feature-list-version-comparison.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BaseVersionComparison } from '../../version-page-template/models/version-comparison.model';\r\nimport { FeatureComparison } from './feature-comparison.model';\r\n\r\nexport interface FeatureListVersionComparison extends BaseVersionComparison {\r\n  featureComparisons: FeatureComparison[];\r\n}\r\n",
            "properties": [
                {
                    "name": "featureComparisons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FeatureComparison[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "BaseVersionComparison"
            ]
        },
        {
            "name": "FeatureRuleSet",
            "id": "interface-FeatureRuleSet-c30edf4f884b991cc97d4d684a7e35e1b9185688a431850eb728748349fd5bc400c9be933188831f4d9f06fdc8a94f9c0069ea5c2ece61e28b55000274bd70c3",
            "file": "projects/main/src/app/features/products/features/shared/models/feature-ruleset.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FeatureRuleSet {\r\n  id: string;\r\n  rules: {optionIds: string[]}[];\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "rules",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Field",
            "id": "interface-Field-71e30d9e1fe86169e6eae82cad8baa5427e8997cc576319d508a063c7567c81175212d1d8bc0c0c2e0777780aa431e32d834509b5b18190884e17db9746bba33",
            "file": "projects/main/src/app/shared/dynamic-form/models/field.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FormGroup } from '@angular/forms';\r\nimport { FieldConfig } from './field-config.interface';\r\n\r\nexport interface Field {\r\n  config: FieldConfig,\r\n  group: FormGroup\r\n}\r\n",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FieldConfig",
            "id": "interface-FieldConfig-e17287df5bb10bc0d5056c1545dd744ade9979f98e2ea228724bbf54826441995f259edc481f08e2991c481c9a9b852bf2356c729f2e9eb541f8263007d6a1e9",
            "file": "projects/main/src/app/shared/dynamic-form/models/field-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ModalConfig } from './modal-config.interface';\r\n\r\nexport interface FieldConfig {\r\n  name: string,\r\n  type: 'button' | 'input' | 'number' | 'select' | 'multiSelect' | 'multiSelectList' | 'checkbox' | 'checkboxList' | 'file' | 'static' | 'staticArea' | 'date' | 'area' | 'datetime' | 'image' | 'password',\r\n  label?: string,\r\n  placeholder?: string,\r\n  value?: any,\r\n  disabled?: boolean,\r\n  options?: { key: any, value: string }[],\r\n  sortOptions?: 'asc' | 'desc' | 'none',\r\n  validation?: ValidatorFn[],\r\n  prepend?: any,\r\n  prependConfig?: ModalConfig,\r\n  append?: any,\r\n  appendConfig?: ModalConfig,\r\n  labelSize?: number,\r\n  typeAhead?: (text$: Observable<string>) => Observable<any>,\r\n  formatter?: (x: any) => string,\r\n  // Indicates when the value change event is emitted. Should be 'change' for all controls, except those where user needs to key in value, in which case blur should be used\r\n  updateOn?: 'change' | 'blur',\r\n  checkboxes?: FieldConfig[],  // What is that ?\r\n}\r\n",
            "properties": [
                {
                    "name": "append",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "appendConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalConfig",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "checkboxes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig[]",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "formatter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "labelSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "prepend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "prependConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalConfig",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sortOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\" | \"none\"",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"button\" | \"input\" | \"number\" | \"select\" | \"multiSelect\" | \"multiSelectList\" | \"checkbox\" | \"checkboxList\" | \"file\" | \"static\" | \"staticArea\" | \"date\" | \"area\" | \"datetime\" | \"image\" | \"password\"",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "typeAhead",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "updateOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"change\" | \"blur\"",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "validation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Language",
            "id": "interface-Language-51b6e2934b2164620bba7590b2b08f83ad7a8c5cfe05849f5cf184825a95471d84d9c56c48ebe5475c038a37a84b826c2607b30914ca189b3429c9a483577442",
            "file": "projects/main/src/app/core/translation/language.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Language {\r\n  code: string;\r\n  name: string;\r\n  flag: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "flag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "MemoizePayload",
            "id": "interface-MemoizePayload-c86d872cedb31be537f561937a4a1d662d0d2327be633d9ac37a7e15df15ccf689a363b07275ce5102b78b1c9700587fd08007f68b68e2318a2066556621ae86",
            "file": "projects/main/src/app/shared/memoize/memoize-payload.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MemoizePayload {\r\n  // Determine a unique id for the provided arguments set\r\n  extractUniqueId: (...args: any[]) => any;\r\n  // Set timeout to clear it content of the map\r\n  clearCacheTimeout?: number;\r\n  // For debug purposes you can pass an extra function for logging all actions\r\n  debugReporter?: (message: string, state?: Map<any, unknown> | unknown) => void;\r\n}\r\n",
            "properties": [
                {
                    "name": "clearCacheTimeout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "debugReporter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "extractUniqueId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "MenuItem",
            "id": "interface-MenuItem-9d89aa8dc98182557777cb73c1719e4e250adcbdbb3ebf05a47572828468810c7260031d18ded2e4a36ca8dabd7c1f19249dc326ed0672e8bf5df372f657eca2",
            "file": "projects/main/src/app/shared/side-bar/model/menu-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport interface MenuItem {\r\n  id: string;\r\n  label: string;\r\n  active?: boolean;\r\n  icon?: IconDefinition;\r\n  onClick?: (e: MenuItem) => void;\r\n  route?: string[];\r\n  children?: MenuItem[];\r\n  badges?: { name: string, color: string }[];\r\n  stickyBottom?: boolean;\r\n  collpaseOnClick?: boolean;\r\n  contextMenu?: { text: string, callback: (menuItem: MenuItem) => void }[];\r\n  data?: any;\r\n  meta?: { [key: string]: string | string[] };\r\n}\r\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "badges",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "collpaseOnClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "meta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "stickyBottom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ModalConfig",
            "id": "interface-ModalConfig-b0ce137f326a9cca0ecc623a4926b2ccd8d657dd6a5a937afe06b79a9fdba05e874b8269c4d5ea39871a6e446fe0314ce29d0e020ef2cadaa863cd3f49463ec1",
            "file": "projects/main/src/app/shared/dynamic-form/models/modal-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FieldConfig } from './field-config.interface';\r\nimport { Button } from './button.interface';\r\n\r\nexport interface ModalConfig {\r\n  headerText?: string,\r\n  submitText?: string,\r\n  closeText?: string,\r\n  hideCloseButton?: boolean,\r\n  size?: NgbModalOptions['size'],\r\n  backdrop?: NgbModalOptions['backdrop'],\r\n  windowClass?: NgbModalOptions['windowClass'],\r\n  fields: FieldConfig[],\r\n  extraButtons?: Button[],\r\n  labelSize?: number,\r\n  hidePasteArea?: boolean,\r\n  hideAddRowOption?: boolean,\r\n  hideDeleteOption?: boolean,\r\n  presetRows?: [],\r\n  onSubmit?: (e: any) => void,\r\n  onDismiss?: (e: any) => void\r\n}\r\n",
            "properties": [
                {
                    "name": "backdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "closeText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "extraButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Button[]",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "headerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "hideAddRowOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "hideCloseButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "hideDeleteOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "hidePasteArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "labelSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "onDismiss",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "onSubmit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "presetRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "submitText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "windowClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Mrp",
            "id": "interface-Mrp-a1c0c16ab12ce789c7c17cf5548aad44f6a8b4461bf2a75de9a602386380d33fccccc27965ec50ccc8c0a715d4db4f2db62c9f965f5ed2cd723299a2380fe054",
            "file": "projects/main/src/app/features/products/shared/models/factory/mrp.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Mrp {\r\n  id: string;\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "NotificationConfig",
            "id": "interface-NotificationConfig-74b5209c152629b442adbabc19f2cfda2e1610a32fe1d1070f554903fd1dcc0db061ec9c03f216413baa42db38b0a46af35b6fee8b7ddfca80e5e35fb1c00384",
            "file": "projects/main/src/app/shared/dynamic-form/models/notification-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Button } from './button.interface';\r\n\r\n\r\nexport interface NotificationConfig {\r\n  headerText?: string,\r\n  submitText?: string,\r\n  closeText?: string,\r\n  hideCloseButton?: boolean,\r\n  size?: NgbModalOptions['size'],\r\n  backdrop?: NgbModalOptions['backdrop']\r\n  windowClass?: NgbModalOptions['windowClass']\r\n  notifications: string[],\r\n  extraButtons?: Button[],\r\n  onSubmit?: (e: any) => void,\r\n  onDismiss?: (e: any) => void\r\n}\r\n",
            "properties": [
                {
                    "name": "backdrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "closeText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "extraButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Button[]",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "headerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "hideCloseButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "notifications",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "onDismiss",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "onSubmit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "submitText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "windowClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "OData",
            "id": "interface-OData-6afa0dd33e67acc6f5fd7866faacd33b9f4723aa931b3049cceff103344a8d66bed7b3a36dc2f797abca92b0327722ebdafcbf8c4d05d63fdfbad41430aa0814",
            "file": "projects/main/src/app/features/work/change-management/shared/plm.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, expand, map, Observable, reduce, takeWhile, tap } from 'rxjs';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { memoize } from '../../../../shared/memoize/memoize.decorator';\r\nimport { ChangeRequest } from './models/change-request.model';\r\nimport { WorkItem } from './models/work-item.model';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Basic Y3NlaWduYzpKY2lmcmFuY2VAMjAyMyE=' })\r\n};\r\n\r\n\r\nexport interface OData<T> {\r\n  value: T[];\r\n  '@odata.nextLink'?: string,\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PLMService {\r\n  // Resource url\r\n  private plmChangeManagementUrl = environment.basePLMUrl + 'ChangeMgmt';\r\n  private plmWorkflowManagementUrl = environment.basePLMUrl + 'Workflow';\r\n\r\n  // The list of change requests\r\n  changeRequests$: BehaviorSubject<ChangeRequest[]> = new BehaviorSubject<ChangeRequest[]>([]);\r\n\r\n  // The list of work items\r\n  workItems$: BehaviorSubject<WorkItem[]> = new BehaviorSubject<WorkItem[]>([]);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private fetch<T>(url: string): Observable<OData<T>> {\r\n    return this.http.get<OData<T>>(url, httpOptions)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // Get the list of change requests\r\n\r\n  // http://<Windchill_Host>/Windchill/servlet/odata/ChangeMgmt/ChangeRequests\r\n\r\n  getChangeRequests(): Observable<ChangeRequest[]> {\r\n\r\n    const contexts = [\r\n      'MFG-Reynosa',\r\n      'MFG-Juarez',\r\n      //'Valves and Actuators - Controls',\r\n      //'Controllers - SMZ - JCH',\r\n      //'Unit - SMZ - JCH'\r\n    ];\r\n\r\n    const predicate = contexts.map(c => `Context/Name eq '${c}'`).join(' or ');\r\n\r\n    const url = `${this.plmChangeManagementUrl}/ChangeRequests?$count=true&$select=Name,Number,ID,State,CreatedOn&$filter=State/Value ne 'RESOLVED' and (${predicate})&$expand=Context,ProcessObjects($filter=(contains(ID,'WTChangeOrder2'));$select=Number,Name,ID)`\r\n\r\n\r\n    return this.fetch<ChangeRequest>(url).pipe(\r\n      expand(response => this.fetch<ChangeRequest>(response['@odata.nextLink'] || '')),\r\n      takeWhile(response => !!response['@odata.nextLink'], true),\r\n      reduce((all, response) => all.concat(response.value), [] as ChangeRequest[]),\r\n      tap(changeRequests => { console.log(changeRequests); this.changeRequests$.next(changeRequests); })\r\n    )\r\n  }\r\n\r\n\r\n  getWorkItems(): Observable<WorkItem[]> {\r\n    const url = `${this.plmWorkflowManagementUrl}/WorkItems?$count=true&$expand=Subject,Activity,Owner,CompletedBy`\r\n\r\n\r\n    return this.fetch<WorkItem>(url).pipe(\r\n      expand(response => this.fetch<WorkItem>(response['@odata.nextLink'] || '')),\r\n      takeWhile(response => !!response['@odata.nextLink'], true),\r\n      reduce((all, response) => all.concat(response.value), [] as WorkItem[]),\r\n      tap(workItems => { console.log(workItems); this.workItems$.next(workItems); })\r\n    )\r\n  }\r\n\r\n\r\n  openChangeRequestInPLM(changeRequest: ChangeRequest): void {\r\n\r\n    const link = `https://plm-train.johnsoncontrols.com/Windchill/app/#ptc1/tcomp/infoPage?ContainerOid=${changeRequest.Context.ID}&oid=${changeRequest.ID}&u8=1`;\r\n    window.open(link, \"_blank\");\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "@odata.nextLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "optionLookupMap",
            "id": "interface-optionLookupMap-5e57448c574e6c950f52aa0fb1e619ac7265a4ba4245e60be0725c115cdff11a6f7a0f9ad965f738d2209bc3b05a7c7b64bc5ce55fdf10fbb91de65f7f695b6f",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faBalanceScale, faCheck, faCircle as faCircleSolid, faDotCircle, faEdit, faExclamationCircle, faEye, faFilter, faList, faPlus, faSearch, faStickyNote, faTrash, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { BehaviorSubject, combineLatest, Subject, takeUntil } from 'rxjs';\r\nimport { constants } from '../../../../../shared/constants/constants';\r\nimport { DataTableComponent } from '../../../../../shared/data-table/data-table.component';\r\nimport { DataTableColumnDefinition } from '../../../../../shared/data-table/model/data-table-column-definition.model';\r\nimport { DataTableColumn } from '../../../../../shared/data-table/model/data-table-column.model'; import { DataTableSettings } from '../../../../../shared/data-table/model/data-table-settings.model';\r\nimport { DataTableToolbarControl } from '../../../../../shared/data-table/model/data-table-toolbar-control.model';\r\nimport { NotificationConfig } from '../../../../../shared/dynamic-form/models/notification-config.interface';\r\nimport { DynamicFormService } from '../../../../../shared/dynamic-form/services/dynamic-form.service';\r\nimport { LexicalRankService } from '../../../../../shared/lexical-rank/lexical-rank.service';\r\nimport { Dimension } from '../../../shared/models/dimensions/dimension.model';\r\nimport { ProductFeatureListTableFactory } from './model/product-feature-list-table-factory.model';\r\nimport { ProductFeatureListTableFeature } from './model/product-feature-list-table-feature.model';\r\nimport { ProductFeatureListTableOption } from './model/product-feature-list-table-option.model';\r\nimport { ProductFeatureListTableOptions } from './model/product-feature-list-table-options.model';\r\nimport { ProductFeatureListTableStyle } from './model/product-feature-list-table-style.model';\r\n\r\nexport interface optionLookupMap {\r\n  [key: string]: ProductFeatureListTableOption & { feature: ProductFeatureListTableFeature }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'csps-product-feature-list-table',\r\n  standalone: true,\r\n  imports: [DataTableComponent, FontAwesomeModule],\r\n  templateUrl: './product-feature-list-table.component.html',\r\n  styleUrl: './product-feature-list-table.component.scss'\r\n})\r\nexport class ProductFeatureListTableComponent implements OnInit, OnChanges, OnDestroy {\r\n  // The list of features\r\n  @Input() features!: ProductFeatureListTableFeature[];\r\n\r\n  // The list of factories\r\n  @Input() factories!: ProductFeatureListTableFactory[];\r\n\r\n  // The list of dimensions\r\n  @Input() dimensions!: Dimension[];\r\n\r\n  // The list of styles\r\n  @Input() styles!: ProductFeatureListTableStyle[];\r\n\r\n  // The optional feature list table options\r\n  @Input() tableOptions?: ProductFeatureListTableOptions;\r\n\r\n  // Emits whenever a feature is moved\r\n  @Output() featureMoved: EventEmitter<{ id: string, rank: string }> = new EventEmitter<{ id: string, rank: string }>();\r\n\r\n  // Emits whenever an option is moved\r\n  @Output() optionMoved: EventEmitter<{ featureId: string, id: string, rank: string }> = new EventEmitter<{ featureId: string, id: string, rank: string }>();\r\n\r\n  // Emits whenever a feature is deleted\r\n  @Output() featureDeleted: EventEmitter<{ id: string }> = new EventEmitter<{ id: string }>();\r\n\r\n  // Emits whenever an option is deleted\r\n  @Output() optionDeleted: EventEmitter<{ featureId: string, id: string }> = new EventEmitter<{ featureId: string, id: string }>();\r\n\r\n  // Emits whenever an option is activated\r\n  @Output() optionsActivated: EventEmitter<{ featureId: string, optionId: string }[]> = new EventEmitter<{ featureId: string, optionId: string }[]>();\r\n\r\n  // Emits whenever an option is deactivated\r\n  @Output() optionsDeactivated: EventEmitter<{ featureId: string, optionId: string }[]> = new EventEmitter<{ featureId: string, optionId: string }[]>();\r\n\r\n  // Emits whenever an option is released to a factory\r\n  @Output() optionsReleasedToFactory: EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }> = new EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }>();\r\n\r\n  // Emits whenever an option is unreleased from a factory\r\n  @Output() optionsUnreleasedFromFactory: EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }> = new EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }>();\r\n\r\n  // Emits whenever the feature analyzer is opened\r\n  @Output() featureAnalyzerOpened: EventEmitter<null> = new EventEmitter<null>();\r\n\r\n  // Emits whenever the feature importer is opened\r\n  @Output() featureImporterOpened: EventEmitter<null> = new EventEmitter<null>();\r\n\r\n  // Emits whenever the option importer is opened\r\n  @Output() optionImporterOpened: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // The datatable settings\r\n  settings!: DataTableSettings<ProductFeatureListTableFeature>\r\n\r\n  // The selected style filter\r\n  styleFilter$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\r\n\r\n  // Used for cleaning subscriptions\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private dynamicFormService: DynamicFormService, private lexicalRankService: LexicalRankService) { }\r\n\r\n  ngOnInit(): void {\r\n    const observables = [\r\n      //this.data$.pipe(takeUntil(this.unsubscribe)),\r\n      this.styleFilter$.pipe(takeUntil(this.unsubscribe))\r\n    ];\r\n\r\n    combineLatest(...observables).pipe(takeUntil(this.unsubscribe)).subscribe(([data, styleIdFilter]) => {\r\n      // TODO\r\n      // Filter based on style filter\r\n      //this.generateDataTableSettings(data);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    // Create an option lookup\r\n    const optionLookup: optionLookupMap = this.features.reduce((acc, f) => {\r\n      f.options.forEach(o => {\r\n        acc[o.id] = { ...o, feature: f };\r\n      });\r\n      return acc;\r\n    }, {} as optionLookupMap);\r\n\r\n\r\n    // Enrich list of features\r\n    const data = this.features\r\n      //.filter(f => !f.styleRestrictions || !f.styleRestrictions.length || !styleIdFilter || f.styleRestrictions.includes(styleIdFilter))\r\n      .sort(this.lexicalRankService.lexicalRankSorter())\r\n      .reduce((acc, f) => {\r\n        const featureMetaData = {\r\n          addIcon: f.isNumeric || f.isFreeText || f.isAutoGenerated ? null : faPlus,\r\n          editIcon: f.isAutoGenerated ? null : faEdit,\r\n          deleteIcon: f.isAutoGenerated ? null : faTrash,\r\n          warning:\r\n            !this.factories.every(factory => f.options.some(o => o.releases.some(r => r.factoryId === factory.id))) ||\r\n              (f.isArray && f.arraySize?.featureId === constants.emptyGuid && f.arraySize?.size === 0) ||\r\n              f.options.some(o => o.releases.some(r => r.asSQ && !r.sqRules?.rules?.length && !r.unavailableRules?.rules?.length && !r.contractRules?.rules?.length)) ?\r\n              faExclamationCircle : '',\r\n          fullName: `${f.name} - ${f.description} ${f.isArray ? (' (Array Feature' + (f.arraySize?.featureId !== constants.emptyGuid && f.arraySize?.featureId?.length ? ' - size constrained by ' + this.features.find(g => g.id === f.arraySize?.featureId)?.name : '') + (f.arraySize?.size ? ' - ' + f.arraySize.size + ' elements max' : '')) + ')' : ''}`,\r\n          dimension: this.dimensions.find(d => d.id === f.dimensionId),\r\n          typeIcon: f.isNumeric ? faBalanceScale : (f.isFreeText ? faEdit : faList),\r\n          restrictionIcon: f.styleRestrictions?.length ? faEye : null,\r\n          restrictedStyles: this.styles.filter(s => f.styleRestrictions?.includes(s.id)).map(s => s.name).join(', '),\r\n          noteIcon: faStickyNote\r\n        };\r\n        if (!f.options?.length)\r\n          acc.push({ isPlaceholder: true, feature: { ...f, ...featureMetaData } });\r\n        else {\r\n          const { options, ...cleanedFeature } = f;\r\n          const opts = f.options.sort(this.lexicalRankService.lexicalRankSorter()).map(o => ({ ...o, feature: { ...cleanedFeature, ...featureMetaData } }));\r\n          acc.push(...opts);\r\n        }\r\n        return acc;\r\n      }, new Array());\r\n\r\n    //this.data$.next(data);\r\n    this.generateDataTableSettings(data);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  generateDataTableSettings(data:any[]): void {\r\n    this.settings = {\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      draggableRows: true,\r\n      data: data.map(o =>\r\n      ({\r\n        ...o,\r\n        fullName: o.feature.isNumeric ? `${o.feature.dimension.name} (${o.feature.dimension.metric.symbol} | ${o.feature.dimension.english.symbol})` :\r\n          o.feature.isFreeText ? `Free text` : `${o.name} - ${o.description}`,\r\n        type: o.feature.typeIcon,\r\n        activeIcon: o.isActive ? faCircleSolid : faCircle,\r\n        ...this.factories.reduce((acc, f) => {\r\n          var release = o.releases?.find((r:any) => r.factoryId === f.id);\r\n          acc[f.id] = !release ? faCircle : (release.asSQ ? faDotCircle : faCircleSolid);\r\n          return acc;\r\n        }, {} as { [key: string]: IconDefinition }),\r\n        deleteIcon: o.feature.isNumeric || o.feature.isFreeText || o.isAutoGenerated ? null : faTrash,\r\n        editIcon: o.feature.isNumeric || o.feature.isFreeText || o.isAutoGenerated ? null : faEdit\r\n      })\r\n      ), \r\n      hideRow: (row: any) => row.isPlaceholder,\r\n      columnDefinitions: [\r\n        { id: '1', name: '', label: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', name: '', label: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2.1', name: '', label: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', name: 'type', label: '', type: 'icon', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', name: 'fullName', label: '', type: 'text', cellAlignment: 'left', visible: true, searchable: true, filterMode: 'text' },\r\n        { id: '5', name: 'restrictionIcon', label: '', type: 'icon', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '6', name: 'restrictedStyles', label: 'Style Restriction', type: 'text', columnClass: 'w-15', cellAlignment: 'left', visible: true, searchable: false, filterMode: 'text' },\r\n        { id: '7', name: 'activeIcon', label: 'Active', type: 'icon', columnClass: 'w-5', cellClass: this.iconColor.bind(this, 'active'), visible: true, searchable: false, filterMode: 'none', click: this.viewActivationStatus.bind(this) },\r\n        ...this.factories.map((x, i) => ({ id: '8.' + (i + 1), label: x.abbreviation, type: 'icon', name: x.id, cellClass: this.iconColor.bind(this, x.id), columnClass: 'w-5', visible: true, searchable: false, filterMode: 'none', click: this.viewReleaseStatus.bind(this, x.id) }) as DataTableColumnDefinition),\r\n        { id: '9', name: 'deleteIcon', label: 'Delete', type: 'icon', columnClass: 'w-5', visible: true, searchable: false, filterMode: 'none', click: this.deleteOption.bind(this) },\r\n        { id: '10', name: 'editIcon', label: 'Edit', type: 'icon', columnClass: 'w-5', visible: true, searchable: false, filterMode: 'none', click: this.editOption.bind(this) }\r\n      ],\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Activate options', type: 'button', icon: faCheck, callback: this.activateOptions.bind(this), preserveSelection: true },\r\n          { name: 'Deactivate options', type: 'button', icon: faCheck, callback: this.deactivateOptions.bind(this), preserveSelection: true },\r\n          ...this.factories.map((f) => ({\r\n            name: f.name, type: 'dropdown', icon: faCheck, callback: () => { }, controls: [\r\n              { name: 'Activate', type: 'button', callback: (rows) => this.releaseOptionsToFactory(rows, f.id, false), preserveSelection: true } as DataTableToolbarControl,\r\n              ...this.tableOptions?.canReleaseWithRestrictions ? [{ name: 'Activate with restrictions', type: 'button', callback: (rows) => this.releaseOptionsToFactory(rows, f.id, true), preserveSelection: true } as DataTableToolbarControl] : [],\r\n              { name: 'Deactivate', type: 'button', callback: (rows) => this.unreleaseOptionsFromFactory(rows, f.id), preserveSelection: true } as DataTableToolbarControl,\r\n            ]\r\n          } as DataTableToolbarControl))\r\n        ],\r\n        right: [\r\n          { name: 'Search', type: 'search', callback: () => { } },\r\n          { name: 'Feature Analyzer', type: 'button', icon: faSearch, callback: this.showFeatureAnalyzer.bind(this) },\r\n          {\r\n            name: 'Filter Styles', type: 'dropdown', icon: faFilter, controls: [\r\n              { name: 'Clear Filter', type: 'button', callback: this.clearStyleFilter.bind(this) },\r\n              ... this.styles.map(s => ({ name: s.name, type: 'button', callback: this.filterStyles(s) } as DataTableToolbarControl))]\r\n          } as DataTableToolbarControl,\r\n          { name: 'Add Feature(s)', type: 'button', icon: faPlus, callback: this.addFeatures.bind(this) }\r\n        ]\r\n      },\r\n      groupBy: [\r\n        {\r\n          property: 'feature.category.name',\r\n          orderBy: ['feature.category.name'],\r\n          rowClass: 'blue-50-background',\r\n          columns: [\r\n            { name: 'feature.category.name', type: 'text', class: 'text-uppercase font-weight-bold', colspan: 10 + this.factories.length, searchable: true, alignment: 'left' },\r\n          ]\r\n        },\r\n        {\r\n          property: 'feature.id',\r\n          orderBy: ['feature.rank'],\r\n          columns: [\r\n            { name: 'feature.addIcon', type: 'icon', class: 'gray-text', colspan: 1, click: this.addOption.bind(this) }, //...!this.readOnlyMode ?   : []\r\n            { name: 'feature.warning', type: 'icon', class: 'red-text', colspan: 1, click: this.showFeatureWarning.bind(this) }, //...!this.readOnlyMode ?   : []\r\n            { name: 'feature.noteIcon', type: 'icon', class: this.iconColor.bind(this, 'notes'), searchable: false, colspan: 1, click: this.editFeatureNotes.bind(this) }, // trigger modal w/ text area (+ eventually feature comments)\r\n            { name: 'feature.fullName', type: 'text', class: 'blue-text font-weight-bold', searchable: true, alignment: 'left', colspan: 2 },\r\n            { name: 'feature.restrictionIcon', type: 'icon', class: 'blue-text font-weight-bold', searchable: false, alignment: 'left', colspan: 1 },\r\n            { name: 'feature.restrictedStyles', type: 'text', class: 'blue-text font-weight-bold', searchable: false, alignment: 'left', colspan: 2 + this.factories.length },\r\n            { name: 'feature.deleteIcon', type: 'icon', searchable: false, colspan: 1, click: this.deleteFeature.bind(this) },\r\n            { name: 'feature.editIcon', type: 'icon', searchable: false, colspan: 1, click: this.editFeature.bind(this) }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  private iconColor(column: string, data: any): string {\r\n    if (column === 'active')\r\n      return data.isActive ? 'green-text' : '';\r\n    else if (column === 'notes') {\r\n      const feature = this.features.find(f => f.id === data.feature.id);\r\n      return feature?.notes?.trim().length ? 'blue-text' : 'gray-text';\r\n    }\r\n    else {\r\n      // Locate release for corresponding factory\r\n      const release = data.releases.find((r: any) => r.factoryId === column);\r\n\r\n      return !release ? '' :  // No release\r\n        !release.asSQ ? 'green-text' :   // Fully released\r\n          release.sqRules?.rules?.length || release.unavailableRules?.rules?.length || release.contractRules?.rules?.length ? 'orange-text' : // Released with  restrictions\r\n            'gray-text';  // Error (missing rules) is caught in the warning\r\n    }\r\n  }\r\n\r\n  // Set the style filter\r\n  filterStyles(style: { id: string, name: string }): () => void {\r\n    return () => {\r\n      this.styleFilter$.next(style.id);\r\n    }\r\n  }\r\n\r\n  // Clear the style filter\r\n  clearStyleFilter(): void {\r\n    this.styleFilter$.next(null);\r\n  }\r\n\r\n  // Add features\r\n  addFeatures(): void {\r\n\r\n  }\r\n\r\n  // Edit a feature \r\n  editFeature(rowData: any): void {\r\n\r\n  }\r\n\r\n  // Edit the feature notes\r\n  editFeatureNotes(rowData: any): void {\r\n\r\n  }\r\n\r\n  showFeatureWarning(rowData: any): void {\r\n\r\n  }\r\n\r\n  manageStyleRestriction(featureData: ProductFeatureListTableFeature): void {\r\n\r\n  }\r\n\r\n  // Delete a feature\r\n  deleteFeature(rowData: any): void {\r\n    // Retrieve the full data about the feature\r\n    const featureData = this.features.find(f => f.id === rowData.feature.id);\r\n\r\n    if (featureData) {\r\n      const config: NotificationConfig = {\r\n        headerText: `Delete feature ${featureData.name}`,\r\n        submitText: 'Delete',\r\n        closeText: 'Cancel',\r\n        onSubmit: () => this.featureDeleted.emit({ id: featureData.id }),\r\n        notifications: [\r\n          `Are you sure you want to delete feature ${featureData.name}?`,\r\n          ...featureData.options.length ? [`This will also delete the ${featureData.options.length} option(s) belonging to this feature.`] : [],\r\n          `This operation is irreversible and cannot be undone.`\r\n        ]\r\n      };\r\n\r\n      this.dynamicFormService.popNotification(config);\r\n    }\r\n  }\r\n\r\n  // Add options\r\n  addOption(rowData: any): void {\r\n\r\n  }\r\n\r\n  // Update option properties\r\n  editOption(rowData: any): void {\r\n\r\n  }\r\n\r\n  // View option activation\r\n  viewActivationStatus(rowData: any): void {\r\n\r\n  }\r\n\r\n  // View the option release status\r\n  viewReleaseStatus(factoryId: string, rowData: any): void {\r\n\r\n  }\r\n\r\n  // Delete option\r\n  deleteOption(rowData: any): void {\r\n    const config: NotificationConfig = {\r\n      headerText: `Delete option ${rowData.name}`,\r\n      submitText: 'Delete',\r\n      closeText: 'Cancel',\r\n      onSubmit: () => this.optionDeleted.emit({ featureId: rowData.feature.id, id: rowData.id }),\r\n      notifications: [\r\n        `Are you sure you want to delete option ${rowData.name}?`,\r\n        `This operation is irreversible and cannot be undone.`,\r\n      ]\r\n    };\r\n\r\n    this.dynamicFormService.popNotification(config);\r\n  }\r\n\r\n  // Activate a set of options\r\n  activateOptions(rows: any[]): void {\r\n    // Retrieve all options to be activated\r\n    const optionsToActivate = rows.filter(x => x.level === 3 && !x.data?.isActive);\r\n\r\n    if (optionsToActivate?.length)\r\n      this.optionsActivated.emit(optionsToActivate.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id })));\r\n  }\r\n\r\n  // Deactivate a set of options\r\n  deactivateOptions(rows: any[]): void {\r\n    // Retrieve all options to be activated\r\n    const optionsToDeactivate = rows.filter(x => x.level === 3 && x.data?.isActive);\r\n\r\n    if (optionsToDeactivate?.length)\r\n      this.optionsDeactivated.emit(optionsToDeactivate.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id })));\r\n  }\r\n\r\n  // Release a set of options to a factory\r\n  releaseOptionsToFactory(rows: any[], factoryId: string, sq: boolean): void {\r\n    // Retrieve all options to release\r\n    const optionsToRelease = rows.filter(x => x.level === 3 && !x.data?.releases.some((r: any) => r.factoryId === factoryId));\r\n\r\n    if (optionsToRelease?.length)\r\n      this.optionsReleasedToFactory.emit({ options: optionsToRelease.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id, asSQ: sq })), factoryId: factoryId });\r\n  }\r\n\r\n  // Unrelease a set of options from a factory\r\n  unreleaseOptionsFromFactory(rows: any[], factoryId: string): void {\r\n    // Retrieve all options to release\r\n    const optionsToUnrelease = rows.filter(x => x.level === 3 && x.data?.releases.some((r: any) => r.factoryId === factoryId));\r\n\r\n    if (optionsToUnrelease?.length)\r\n      this.optionsUnreleasedFromFactory.emit({ options: optionsToUnrelease.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id })), factoryId: factoryId });\r\n  }\r\n\r\n  // Update option SQ Rules\r\n  updateOptionSqRules(rowData: any, factoryId: string): void {\r\n    // Retrieve the full data about the option\r\n    //const optionRelease = rowData?.releases.find(r => r.factoryId === factoryId);\r\n    //this.dynamicFormService.popModal(ConditionTableBuilderModalComponent, {\r\n    //  title: 'Condition Table Builder',\r\n    //  features: this.selectedVersion.features.filter(x => x.id !== rowData?.feature.id),\r\n    //  rules: this.rules,\r\n    //  values: optionRelease?.sqRules?.rules?.map(r => ({ value: true, conditions: r.map(o => ({ optionId: o })) })) || [],\r\n    //  readOnly: false,\r\n    //  renderer: 'check',\r\n    //  onSubmit: (data: { conditions: { optionId: string }[], value: any }[]) => {\r\n    //    const rules = data.map(x => x.conditions.map(o => o.optionId));\r\n    //    this.featureListService.updateOptionReleaseSqRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, rules).pipe(take(1)).subscribe();\r\n    //  },\r\n    //  onDismiss: (e: string) => {\r\n    //    if (e === 'Clear')\r\n    //      this.featureListService.updateOptionReleaseSqRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, []).pipe(take(1)).subscribe();\r\n    //  }\r\n    //});\r\n  }\r\n\r\n  // Update option unavailable Rules\r\n  updateOptionUnavailableRules(rowData: any, factoryId: string): void {\r\n    // Retrieve the full data about the option\r\n    //const optionRelease = rowData?.releases.find(r => r.factoryId === factoryId);\r\n    //this.dynamicFormService.popModal(ConditionTableBuilderModalComponent, {\r\n    //  title: 'Condition Table Builder',\r\n    //  features: this.selectedVersion.features.filter(x => x.id !== rowData?.feature.id),\r\n    //  rules: this.rules,\r\n    //  values: optionRelease?.unavailableRules?.rules?.map(r => ({ value: true, conditions: r.map(o => ({ optionId: o })) })) || [],\r\n    //  readOnly: false,\r\n    //  renderer: 'check',\r\n    //  onSubmit: (data: { conditions: { optionId: string }[], value: any }[]) => {\r\n    //    const rules = data.map(x => x.conditions.map(o => o.optionId));\r\n    //    this.featureListService.updateOptionReleaseUnavailableRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, rules).pipe(take(1)).subscribe();\r\n    //  },\r\n    //  onDismiss: (e: string) => {\r\n    //    if (e === 'Clear')\r\n    //      this.featureListService.updateOptionReleaseUnavailableRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, []).pipe(take(1)).subscribe();\r\n    //  }\r\n    //});\r\n  }\r\n\r\n  // Update option contract Rules\r\n  updateOptionContractRules(rowData: any, factoryId: string): void {\r\n    // Retrieve the full data about the option\r\n    //const optionRelease = rowData?.releases.find(r => r.factoryId === factoryId);\r\n    //this.dynamicFormService.popModal(ConditionTableBuilderModalComponent, {\r\n    //  title: 'Condition Table Builder',\r\n    //  features: this.selectedVersion.features.filter(x => x.id !== rowData?.feature.id),\r\n    //  rules: this.rules,\r\n    //  values: optionRelease?.contractRules?.rules?.map(r => ({ value: true, conditions: r.map(o => ({ optionId: o })) })) || [],\r\n    //  readOnly: false,\r\n    //  renderer: 'check',\r\n    //  onSubmit: (data: { conditions: { optionId: string }[], value: any }[]) => {\r\n    //    const rules = data.map(x => x.conditions.map(o => o.optionId));\r\n    //    this.featureListService.updateOptionReleaseContractRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, rules).pipe(take(1)).subscribe();\r\n    //  },\r\n    //  onDismiss: (e: string) => {\r\n    //    if (e === 'Clear')\r\n    //      this.featureListService.updateOptionReleaseContractRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, []).pipe(take(1)).subscribe();\r\n    //  }\r\n    //});\r\n  }\r\n\r\n  // Move category, feature or option\r\n  moveItem(event: any): void {\r\n    const props = ['category', 'feature', 'option'];\r\n    const level = event.data.level;\r\n    const id = level === 3 ? event.data.id : event.data[props[level - 1]].id;\r\n\r\n    // Get min and max ranks (if after / before undefined => moved to bottom / top)\r\n    const rankBefore = event.movedAfterSibling ? (level === 3 ? event.movedAfterSibling.rank : event.movedAfterSibling[props[level - 1]].rank) : this.lexicalRankService.getMinRank();\r\n    const rankAfter = event.movedBeforeSibling ? (level === 3 ? event.movedBeforeSibling.rank : event.movedBeforeSibling[props[level - 1]].rank) : this.lexicalRankService.getMaxRank();\r\n\r\n    // Get new rank from lexical rank service\r\n    const newRank = this.lexicalRankService.getRankBetween(rankBefore, rankAfter);\r\n\r\n    // Test if move within same parent\r\n    const parentId = event.data.parent?.[props[level - 2]]?.id;\r\n    const newParentId = event.newParentData?.[props[level - 2]]?.id;\r\n\r\n    if (level === 1) {\r\n      //this.categoryMoved(event.data.section.id, newRank);\r\n    }\r\n    else if (level === 2) {\r\n      this.featureMoved.emit({ id, rank: newRank });\r\n    } else {\r\n      this.optionMoved.emit({ featureId: parentId, id, rank: newRank });\r\n    }\r\n  }\r\n\r\n  // Open the feature import manager\r\n  openFeatureImportManager(): void {\r\n    this.featureImporterOpened.emit();\r\n  }\r\n\r\n  // Open the option import manager\r\n  openOptionImportManager(destinationFeatureId: string): void {\r\n    this.optionImporterOpened.emit(destinationFeatureId);\r\n  }\r\n\r\n  // Open the feature analyzer\r\n  showFeatureAnalyzer(): void {\r\n    this.featureAnalyzerOpened.emit();\r\n  }\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-5e57448c574e6c950f52aa0fb1e619ac7265a4ba4245e60be0725c115cdff11a6f7a0f9ad965f738d2209bc3b05a7c7b64bc5ce55fdf10fbb91de65f7f695b6f",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "",
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": []
        },
        {
            "name": "Precision",
            "id": "interface-Precision-f0ca57aa5e80f7d5c485a1378309009c43043099a6c07da8d04dbb8d87a1a17b58bae418f772875fe6de06e6016c8033124dc8a5ed8d129722cf1a45dcb23f80",
            "file": "projects/main/src/app/features/products/shared/models/dimensions/precision.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Precision {\r\n  // 1 for decimal places; 2 for significant digits\r\n  type: 1 | 2;\r\n  digits: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "digits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"1\" | \"2\"",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Product",
            "id": "interface-Product-ebabe6a4c4213bd3a123ba72a538d0ccee4a4568a25c8e6a85aa523748150f77aac0d1138b349d06773b9836d81f8411a0c92ae1923e8a496d03a0731aaac47e",
            "file": "projects/main/src/app/features/products/shared/models/product/product.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProductStyle } from \"./product-style.model\";\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  type: { id: string, name: string };\r\n  favourite?: boolean;\r\n  defaultPictureUrl: string;\r\n  styles: ProductStyle[];\r\n}\r\n",
            "properties": [
                {
                    "name": "defaultPictureUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "favourite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "styles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductStyle[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductFeatureListTableArraySize",
            "id": "interface-ProductFeatureListTableArraySize-79203cfa1e367afca420a91f9063f1499ff4ca53c65602ee2a296a10df0741a68eaa017b79ab6c5303541e7e4a2c6c6fba0706a6dde57f24ff345ca1abcc6368",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-array-size.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductFeatureListTableArraySize {\r\n  featureId: string;\r\n  size: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductFeatureListTableCategory",
            "id": "interface-ProductFeatureListTableCategory-f5bb4b6398494d9909eee6de00233dbce398ce1760ab2148cd4bad3897a766ff3e44d2e9098305d2c3c64a3b634efefbbb14f427ad389249eb0801cfbc909a0c",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-category.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductFeatureListTableCategory {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductFeatureListTableFactory",
            "id": "interface-ProductFeatureListTableFactory-b201e374d0ebfa99fef7d5b9b7202f42a0b1cc5fb41326a1f462729fb97f66b45f3531190716a32f76eda3c06f93e1604daa80700edc5763127c7bfd6078126b",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-factory.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductFeatureListTableFactory {\r\n  id: string;\r\n  name: string;\r\n  abbreviation: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "abbreviation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductFeatureListTableFeature",
            "id": "interface-ProductFeatureListTableFeature-e4770611f2ec598765dc6f53afa70c9353d4e9ebe1e9c78bada8213ff5e178bbf189ed40d650aae3b48706e7eb331cc5ab063a699ebf6137b70ddac443b9a2e6",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-feature.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProductFeatureListTableArraySize } from \"./product-feature-list-table-array-size.model\";\r\nimport { ProductFeatureListTableCategory } from \"./product-feature-list-table-category.model\";\r\nimport { ProductFeatureListTableOption } from \"./product-feature-list-table-option.model\";\r\n\r\nexport interface ProductFeatureListTableFeature {\r\n  id: string;\r\n  category: ProductFeatureListTableCategory;\r\n  name: string;\r\n  description: string;\r\n  rank: string;\r\n  dimensionId?: string;\r\n  isNumeric?: boolean;\r\n  isFreeText?: boolean;\r\n  options: ProductFeatureListTableOption[];\r\n  styleRestrictions?: string[];\r\n  notes?: string;\r\n  isArray?: boolean;\r\n  arraySize?: ProductFeatureListTableArraySize;\r\n  isAutoGenerated?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "arraySize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductFeatureListTableArraySize",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductFeatureListTableCategory",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "dimensionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isAutoGenerated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isFreeText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isNumeric",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductFeatureListTableOption[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "rank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "styleRestrictions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductFeatureListTableOption",
            "id": "interface-ProductFeatureListTableOption-fef08d777313e6a043666c793477d8bad1cccaec7e96e4f3b50a68792f752d354ed3380d9f731f9e0588a358680243e1a5f58f06a9304abccb3b491c83fa3f34",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-option.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductFeatureListTableOption {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  rank: string;\r\n  isActive: boolean;\r\n  releases: {\r\n    factoryId: string,\r\n    asSQ: boolean,\r\n    sqRules?: { rules: string[][] },\r\n    unavailableRules?: { rules: string[][] },\r\n    contractRules?: { rules: string[][] }\r\n  }[];\r\n  isAutoGenerated: boolean;\r\n  featureId?: string\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "featureId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isAutoGenerated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "rank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "releases",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductFeatureListTableOptions",
            "id": "interface-ProductFeatureListTableOptions-9463bb0be3e99ae8bc608497b7bdbc510864b04fb5d2329054eacbf91edebe7472980562218a7cf658034a037d7dc11be836553d972e8542d7ed7a614b676c21",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-options.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductFeatureListTableOptions {\r\n  canReleaseWithRestrictions: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "canReleaseWithRestrictions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductFeatureListTableStyle",
            "id": "interface-ProductFeatureListTableStyle-198f43a2eddb852d58b902cd056e6d853bd5f501c2e11a82586cae6a442d8fc96e355c999f27aa5337c61f9826f0d8ce4f473d97488766675b5ac9e889889699",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-style.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductFeatureListTableStyle {\r\n  id: string;\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductMenuItem",
            "id": "interface-ProductMenuItem-75c58a0438639e1520932c7e9e98260c065b947e16a113fe57d40b9247b5e0721968b46829a3190b6f1674662b0f97b015c79786183816985f05c4d68cc27e71",
            "file": "projects/main/src/app/features/products/shared/models/menu/product-menu-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductMenuItem {\r\n  name: string;\r\n  routeArgs: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "routeArgs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductModLevel",
            "id": "interface-ProductModLevel-4a1a62c5d825f00900c6d4018dd899f3de06dcbaa2d974ebdc5302d233f1eec94d20d85739891e6dedf38d77c5969763dfb20952efca9122651dffc49f503929",
            "file": "projects/main/src/app/features/products/shared/models/product/product-mod-level.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProductModLevel {\r\n  id: string;\r\n  styleId: string;\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "styleId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProductStyle",
            "id": "interface-ProductStyle-46bde19903dfa1085060d935be90e3c7cc5f3ddb4e042322d078fc406fe3326ab94138d08006db2646c52ce770074dff132d10078e22629b1b4d372a909d2f2e",
            "file": "projects/main/src/app/features/products/shared/models/product/product-style.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProductModLevel } from \"./product-mod-level.model\";\r\n\r\nexport interface ProductStyle {\r\n  id: string;\r\n  name: string;\r\n  modLevels: ProductModLevel[];\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "modLevels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductModLevel[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProgramIncrement",
            "id": "interface-ProgramIncrement-d59785f912182f360ccdf4fc7d30abd8844a08c2821c0088e766fac3b2e51f61340a0108431bc5974e5c763460ee4ded2c8f3f8df920300e6d09f5ff74662d59",
            "file": "projects/main/src/app/shared/feature-map/model/program-increment.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProgramIncrement {\r\n  id: string;\r\n  name: string;\r\n  }\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Project",
            "id": "interface-Project-73fceb9d44e02e3e808922e67d901644249563cc9d73716aed063a38d11f50d6b3b301e5669e5a40cb64a11f60e26bad0510efd66cd0cd213b2e819edcac5ed3",
            "file": "projects/main/src/app/features/work/shared/project.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Project {\r\n  id: string;\r\n  name: string;\r\n  prop1: string;\r\n  prop2: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "prop1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "prop2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Project",
            "id": "interface-Project-71a70c28a1fa4535ead477c9483aa018ffd214a6f80ae9e1e2fea0e91f9ba61e1873a44cf2ecfe457bed4015839cde6fe720f5386c02b25fd13f8614d543fda7-1",
            "file": "projects/main/src/app/features/work/projects/project/project.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CdkDrag, CdkDropList, CdkDropListGroup } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SubMenuItem } from '../../../../shared/page-template/model/sub-menu-item.model';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\nimport { PageWrapperComponent } from '../../../../shared/page-wrapper/page-wrapper.component';\r\nimport { WorldMapContinent } from '../../../../shared/world-map/model/world-map-continent.model';\r\nimport { WorldMapCoordinate } from '../../../../shared/world-map/model/world-map-coordinate.model';\r\n\r\n\r\nexport interface Project {\r\n  name: string;\r\n  impactedContinents: WorldMapContinent[],\r\n  impactedFactories: WorldMapCoordinate[]\r\n}\r\n\r\nconst DEMOPROJECT: Project = {\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'csps-project',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, PageWrapperComponent, PageTemplateComponent, CdkDropListGroup, CdkDropList, CdkDrag, TranslateModule],\r\n  templateUrl: './project.component.html',\r\n  styleUrl: './project.component.scss'\r\n})\r\nexport class ProjectComponent {\r\n  constructor() { }\r\n\r\n  project: Project = DEMOPROJECT;\r\n\r\n  subMenu: SubMenuItem[] = [\r\n    { name: 'Preview', route: ['./preview'] },\r\n    { name: 'Budget', route: ['./budget'] },\r\n    { name: 'Forecast', route: ['./forecast'] },\r\n    { name: 'Schedule', route: ['./schedule'] },\r\n    { name: 'Design', route: ['./design'] },\r\n    { name: 'Etc...', route: ['./etc'] }\r\n  ];\r\n\r\n  pop(item: any) {\r\n    alert('pop' + item.id);\r\n  }\r\n\r\n  childNodeActionClicked(data: any) {\r\n    console.log(data);\r\n  }\r\n  parentNodeActionClicked(data: any) {\r\n    console.log(data);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "impactedContinents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WorldMapContinent[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "impactedFactories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WorldMapCoordinate[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Project-1"
        },
        {
            "name": "Project",
            "id": "interface-Project-c36cfeb0a9c3edc193abe926e06e9aadd33625dfe8f3f66f7e71321f2170f04d12500ecbdeadb07389526aca25ff4775a4980adc5b95970262b11bb8896fc7e0-2",
            "file": "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ThemeService } from '../../../../shared/theme/theme.service';\r\nimport { WorldMapContinent } from '../../../../shared/world-map/model/world-map-continent.model';\r\nimport { WorldMapCoordinate } from '../../../../shared/world-map/model/world-map-coordinate.model';\r\nimport { WorldMapComponent } from '../../../../shared/world-map/world-map.component';\r\n \r\nexport interface Project {\r\n  name: string;\r\n  impactedContinents: WorldMapContinent[],\r\n  impactedFactories: WorldMapCoordinate[]\r\n}\r\n\r\nconst DEMOPROJECT: Project = {\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'csps-project-preview',\r\n  standalone: true,\r\n  imports: [WorldMapComponent],\r\n  templateUrl: './project-preview.component.html',\r\n  styleUrl: './project-preview.component.scss'\r\n})\r\nexport class ProjectPreviewComponent {\r\n  constructor(private themeService: ThemeService) { }\r\n\r\n  project: Project = DEMOPROJECT;\r\n\r\n  impactedFactories: WorldMapCoordinate[] = DEMOPROJECT.impactedFactories;\r\n\r\n  impactedRegions: Map<WorldMapContinent, { color: string }> = DEMOPROJECT.impactedContinents.reduce((acc, c) => {\r\n    acc.set(c, { color: this.themeService.colors.primary })\r\n    return acc;\r\n  }, new Map<WorldMapContinent, { color: string }>())\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "impactedContinents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WorldMapContinent[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "impactedFactories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WorldMapCoordinate[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Project-2"
        },
        {
            "name": "QuickLink",
            "id": "interface-QuickLink-ae2045b9c8aaef1c5c4ec38e5c8b6cba27cbc8cf66d07faad83fb10888bf856cf6fa7864dfa66084058c2096bc37e62483fdcd7a03a803039d2775a5a13e35d1",
            "file": "projects/main/src/app/shared/side-bar/model/quick-link.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface QuickLink {\r\n  label: string;\r\n  abbreviation: string;\r\n  active?: boolean;\r\n  onClick?: (e: QuickLink) => void;\r\n  data: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "abbreviation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SubMenuItem",
            "id": "interface-SubMenuItem-0a0686e2826c342b7f8f8b2b687b859105bc71f61fc9096df0485ee0d6d0f19873fa6e0a318d9b46ccf1ac8b40a26be137a9c1ed126e498d6be747738d0bdd6d",
            "file": "projects/main/src/app/shared/page-template/model/sub-menu-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SubMenuItem {\r\n  name: string;\r\n  route: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TestData",
            "id": "interface-TestData-bcc75b2e225172a96cb61b981cbdbec02c0537b0f84fb49610346891c5d18feac7fff2846b9dd09f083c76df79c73ed72c059bc4dad13220b1ba8661ef8c6224",
            "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { faGear, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { action } from '@storybook/addon-actions';\r\nimport type { Meta, StoryObj } from '@storybook/angular';\r\nimport { argsToTemplate, componentWrapperDecorator } from '@storybook/angular';\r\nimport { DataTableComponent } from './data-table.component';\r\nimport { DataTableToolbarControl } from './model/data-table-toolbar-control.model';\r\n\r\nexport interface TestData {\r\n  id: number;\r\n  name: string;\r\n  prop1: string;\r\n  prop2: string;\r\n}\r\n\r\nexport const actionsData = {\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n};\r\n\r\nconst meta: Meta<DataTableComponent<TestData>> = {\r\n  title: 'DataTable',\r\n  component: DataTableComponent<TestData>,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Rich data table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: DataTableComponent<TestData>) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-data-table ${argsToTemplate(args)}></csps-data-table>`,\r\n  }),\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<DataTableComponent<TestData>>;\r\n\r\n/**\r\n * Default usage of the data table\r\n */\r\nexport const Default: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1), icon:faUser })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '5', label: 'Icon', name: 'icon', type: 'icon', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      groupBy: []\r\n    }\r\n  },\r\n};\r\n\r\n/**\r\n * TODO\r\n */\r\nexport const SelectableRows: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      groupBy: []\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * TODO\r\n */\r\nexport const DraggableRows: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * TODO\r\n */\r\nexport const SelectableAndDraggableRows: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * TODO\r\n */\r\nexport const FilterableRows: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'numeric' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'select' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'filter' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n};\r\n\r\n//export const ErrorRows: Story = {\r\n//  args: {\r\n//    settings: {\r\n//      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1),  })),\r\n//      columnDefinitions: [\r\n//        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'numeric' },\r\n//        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n//        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'select' },\r\n//        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n//      ],\r\n//      selectableRows: false,\r\n//      toolBar: {\r\n//        right: [\r\n//          { type: 'search' } as DataTableToolbarControl,\r\n//          { type: 'filter' } as DataTableToolbarControl,\r\n//          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n//        ]\r\n//      },\r\n//      draggableRows: true,\r\n//      groupBy: []\r\n//    }\r\n//  }\r\n//};\r\n\r\n/**\r\n * TODO\r\n */\r\nexport const VirtualScrolling: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 1000 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * TODO\r\n */\r\nexport const SingleLevelGrouping: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i % 2), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: [\r\n        {\r\n          property: 'prop1', orderBy: ['prop1'], columns: [\r\n            { name: 'prop1', type: 'text', alignment: 'left', class: 'red-background', colspan: 4 }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * TODO\r\n */\r\nexport const MultiLevelGrouping: Story = {\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i % 2), prop2: 'prop2 - ' + (i % 3) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: [\r\n        {\r\n          property: 'prop1', orderBy: ['prop1'], columns: [\r\n            { name: 'prop1', type: 'text', alignment: 'left', class: 'red-background', colspan: 4 }\r\n          ]\r\n        },\r\n        {\r\n          property: 'prop2', orderBy: ['prop2'], columns: [\r\n            { name: '', type: 'text', alignment: 'left', class: 'blue-50-background', colspan: 1 },\r\n            { name: 'prop2', type: 'text', alignment: 'left', class: 'blue-50-background', colspan: 3 }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "prop1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "prop2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TestData",
            "id": "interface-TestData-1adaf1480ef3b00c4ff542771a012811ce5579cfa9e72db8f4a5f0fce17eec26c25e0acca0bc792446accd144ac8440a3b8c212f0f71326f46b9afabf4622928-1",
            "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { APP_INITIALIZER } from '@angular/core';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\r\nimport { argsToTemplate, componentWrapperDecorator } from '@storybook/angular';\r\nimport { ThemeService } from '../theme/theme.service';\r\nimport { WorldMapComponent } from './world-map.component';\r\n\r\nexport interface TestData {\r\n  id: number;\r\n  name: string;\r\n  prop1: string;\r\n  prop2: string;\r\n}\r\n\r\nexport const actionsData = {\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n};\r\n\r\nconst meta: Meta<WorldMapComponent> = {\r\n  title: 'World Map',\r\n  component: WorldMapComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'An interactive world map',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`),\r\n  ],\r\n  render: (args: WorldMapComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n    template: `<csps-world-map ${argsToTemplate(args)}></csps-world-map>`,\r\n  }),\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<WorldMapComponent>;\r\n\r\n/**\r\n * Default usage of the world map\r\n */\r\nexport const Default: Story = {\r\n  args: {\r\n    coordinates: [\r\n      { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#123456', click: () => { alert('You selected Paris'); } },\r\n      { id: '2', city: 'New York', lat: 40.730610, long: - 73.935242, color: '#ca2339', click: () => { alert('You selected New York'); } },\r\n    ],\r\n    flows: [],\r\n    selectedContinents: new Map([\r\n      ['Europe', { color: '#ff0000' }],\r\n      ['North America', { color: '#0000ff' }],\r\n      ['Africa', { color: '#f000ff' }],\r\n      ['Middle East', { color: '#000fff' }],\r\n      ['Latin America', { color: '#00ff00' }],\r\n      ['Asia', { color: '#a2f2a2' }],\r\n      ['Oceania', { color: '#aa88aa' }],\r\n    ])\r\n  },\r\n};\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "prop1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "prop2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TestData-1"
        },
        {
            "name": "TestData",
            "id": "interface-TestData-3d2eefb3d3c48c076e94bf341ded29aabcbe96595743d625a8c8b91789e8a0a685a03d3e19e3196ca838b175ba6a89aa2d3ed729251ed20537dcb9ef17ec2352-2",
            "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { faFutbol, faGear, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { action } from '@storybook/addon-actions';\r\nimport type { Meta, StoryObj } from '@storybook/angular';\r\nimport { argsToTemplate, componentWrapperDecorator } from '@storybook/angular';\r\nimport { ProjectBudgetComponent } from './project-budget.component';\r\n \r\nexport interface TestData {\r\n  id: number;\r\n  name: string;\r\n  prop1: string;\r\n  prop2: string;\r\n}\r\n\r\nexport const actionsData = {\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n};\r\n\r\nconst meta: Meta<ProjectBudgetComponent> = {\r\n  title: 'Project Budget ',\r\n  component: ProjectBudgetComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Rich data table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: ProjectBudgetComponent) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-project-budget ${argsToTemplate(args)}></csps-project-budget>`,\r\n  }),\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<ProjectBudgetComponent>;\r\n\r\n/**\r\n * Default usage of the data table\r\n */\r\nexport const Default: Story = {\r\n  args: {\r\n    \r\n  },\r\n};\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "prop1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "prop2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "TestData-2"
        },
        {
            "name": "TestData",
            "id": "interface-TestData-8aac80f722830421043daa7c61f9a06a0e0b0a239d15ae1b087b749d74137db7b08338fdab801500b1214dedacf50b87302bc76679a54fb6c75736df12388fbd-3",
            "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { action } from '@storybook/addon-actions';\r\nimport type { Meta, StoryObj } from '@storybook/angular';\r\nimport { argsToTemplate, componentWrapperDecorator } from '@storybook/angular';\r\nimport { DynamicFormModalComponent } from './dynamic-form-modal.component';\r\nimport { CustomValidators } from '../../custom-validators/custom-validators';\r\nimport { catchError, debounceTime, distinctUntilChanged, Observable, of, switchMap, tap } from 'rxjs';\r\n\r\nexport interface TestData {\r\n  id: number;\r\n  name: string;\r\n  prop1: string;\r\n  prop2: string;\r\n}\r\n\r\nexport const actionsData = {\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n};\r\n\r\nconst meta: Meta<DynamicFormModalComponent> = {\r\n  title: 'Dynamic Form Modal',\r\n  component: DynamicFormModalComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Dynamic Form Modal',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: DynamicFormModalComponent) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-dynamic-form-modal ${argsToTemplate(args)}></csps-dynamic-form-modal>`,\r\n  }),\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<DynamicFormModalComponent>;\r\n\r\n/**\r\n * Default usage of the data table\r\n */\r\nexport const Default: Story = {\r\n  args: {\r\n    config:{\r\n        headerText: 'Add a new area',\r\n        submitText: 'Add',\r\n        closeText: 'Cancel',\r\n        labelSize: 3,\r\n        onSubmit: (e: any) => { alert(e); },\r\n        onDismiss: (e: any) => { },\r\n        fields: [\r\n          {\r\n            type: 'input',\r\n            label: 'Id',\r\n            name: 'id',\r\n            validation: [\r\n              CustomValidators.required('Area id is required')\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n  },\r\n};\r\n\r\n// Input & Number\r\nexport const InputAndNumber: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Input',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input',\r\n                    placeholder: 'Enter Input Value',\r\n                    name: 'id',\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input with Prefilled data',\r\n                    name: 'id1',\r\n                    value: 'Test Data',\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input with TypeAhead (Auto Suggestion)',\r\n                    name: 'id2',\r\n                    // While using the type ahead verify the filter you want to have and update accordingly\r\n                    // Update the data as per your requirement\r\n                    // Specify the property you want to use to filter out the data in formatter & typeAhead\r\n                    typeAhead: (text$: Observable<string>) =>\r\n                        text$.pipe(\r\n                          debounceTime(300),\r\n                          distinctUntilChanged(),\r\n                            switchMap(term => of([{ id: 1, name: 'Test 1' }, { id: 2, name: 'Test ABC' }, { id: 3, name: 'input' }].filter(z => z.name.startsWith(term))).pipe(    \r\n                            tap(() => { }),\r\n                            catchError(() => {\r\n                              return of([]);\r\n                            }))\r\n                          ),\r\n                        ),   \r\n                    formatter: (x) => x.name != undefined ? x.name : x,\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'number',\r\n                    label: 'Numeric',\r\n                    name: 'number',\r\n                    validation: [\r\n                        CustomValidators.required('Field Name required')\r\n                    ]\r\n                }\r\n            ]\r\n\r\n        }\r\n    },\r\n};\r\n\r\n// Password\r\nexport const Password: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Password',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'password',\r\n                    label: 'Password',\r\n                    placeholder: 'Enter Password',\r\n                    name: 'id',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n// Select, MultiSelect & MultiSelect List\r\nexport const Select: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Select - MultiSelect - MultiSelect List',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'select',\r\n                    label: 'Select Field',\r\n                    name: 'id1',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'select',\r\n                    label: 'Select Field With Pre Selected',\r\n                    name: 'id2',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value:'3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelect',\r\n                    label: 'MultiSelect',\r\n                    name: 'id3',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelect',\r\n                    label: 'MultiSelect with Prefilled Data',\r\n                    name: 'id4',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value: '3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelectList',\r\n                    label: 'MultiSelect List',\r\n                    name: 'id5',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelectList',\r\n                    label: 'MultiSelect List with Prefilled data',\r\n                    name: 'id6',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value: [['2', '3'], ['4']] || [[]]\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n// Checkbox - Checkbox list\r\nexport const Checkbox: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Checkbox - Checkbox List',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'checkbox',\r\n                    label: 'CheckBox',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'checkbox',\r\n                    label: 'CheckBox with Prefilled Value',\r\n                    name: 'id2',\r\n                    value: true\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'checkboxList',\r\n                    label: 'CheckBox List',\r\n                    name: 'id3',\r\n                    checkboxes:[\r\n                        { name: '1', label: 'Box 1', type: 'checkbox' },\r\n                        { name: '2', label: 'Box 2', type: 'checkbox' },\r\n                        { name: '3', label: 'Box 3', type: 'checkbox' },\r\n                    ]\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n// File upload\r\nexport const File: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'File',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'file',\r\n                    label: 'File',\r\n                    placeholder: 'Upload file',\r\n                    name: 'id',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n// Static & Static Area\r\nexport const StaticArea: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Static - Static Area',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'static',\r\n                    label: 'Static',\r\n                    name: 'id1',\r\n                    value:'Static Data'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'staticArea',\r\n                    label: 'Static Area',\r\n                    name: 'id2',\r\n                    value:'Static Area'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'area',\r\n                    label: 'Area',\r\n                    name: 'id3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n// Date & DateTime\r\nexport const Date: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Static - Static Area',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'date',\r\n                    label: 'Date',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'date',\r\n                    label: 'Date Prefilled',\r\n                    name: 'id2',\r\n                    value:'2024-08-02'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'datetime',\r\n                    label: 'Date Time',\r\n                    name: 'id3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'datetime',\r\n                    label: 'Date Time Prefilled',\r\n                    name: 'id4',\r\n                    value:'2024-08-02T16:48'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n// ImagePreview\r\nexport const ImagePreview: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Image Preview',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'image',\r\n                    label: 'Image Preview',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n// Form Button\r\nexport const FormButton: Story = {\r\n    args: {\r\n        config: {\r\n            headerText: 'Form Button',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'button',\r\n                    label: 'Button1',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n};\r\n\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "prop1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "prop2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "TestData-3"
        },
        {
            "name": "Ticket",
            "id": "interface-Ticket-3103c37b0fc59a246648b56bf084955f9ffdcd837eade3b3192f346aa8561c56d21fa3e875ab9b20a5c3937d4260bf94f6844af3168a35e8497ff5e44a7704cc",
            "file": "projects/main/src/app/features/products/shared/models/ticket/ticket.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TicketDocumentVersion } from './ticket-document-version.model';\r\n\r\nexport interface Ticket {\r\n  id: string;\r\n  productId: string;\r\n  title: string;\r\n  documentVersions: TicketDocumentVersion[];\r\n  validationId: string;\r\n  released: boolean;\r\n  ecn: string;\r\n  releaseDate: Date | null;\r\n  createdOn: Date;\r\n}\r\n",
            "properties": [
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "documentVersions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TicketDocumentVersion[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ecn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "released",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "releaseDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "validationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketDashboardOptions",
            "id": "interface-TicketDashboardOptions-ccb3f2e393a2fbd08a2e993826adf1cf7bd91398b21a1aa9da16ae79bc3c01bae1aa942834897495f804440d0f429e718dadec7eb75f2f9a61c9228f1ae2e307",
            "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/model/ticket-dashboard-options.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TicketDashboardOptions {\r\n  // TODO: Include display / configuration options\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketDashboardTicket",
            "id": "interface-TicketDashboardTicket-c96db9e62ceafe4894d3be40bacfc8d9be18c005be6cdc220d8dc2a39992fe9fa7062a65b15650a1c7a75131a27e64913e675bf6bf7d2940fbcbca70b259dff1",
            "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/model/ticket-dashboard-ticket.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TicketDashboardTicket {\r\n  id: string;\r\n  productLine: { id: string, name: string };\r\n  name: string;\r\n  ecn?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "ecn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "productLine",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketDocumentVersion",
            "id": "interface-TicketDocumentVersion-e783d88ff62bccd53749a4077f99005a3e62fe15ff7de1b349c023ab4c43a5686fcbd862356efb895c1357215a609e3a283a3b2c134bf53ab771787be51effab",
            "file": "projects/main/src/app/features/products/shared/models/ticket/ticket-document-version.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TicketDocumentVersion {\r\n  versionId: string;\r\n  productId: string;\r\n  documentId: string;\r\n  documentLabel: string;\r\n  ticketId: string;\r\n  versionLabel: string;\r\n  deleted: boolean;\r\n  released: boolean;\r\n  workflowId: string;\r\n  statuses: { [key: string]: string; };\r\n  type: string;\r\n  isNestedDocument: boolean;\r\n  lastModifiedOn: Date;\r\n  nestedVersions: TicketDocumentVersion[];\r\n  variants: { id: string, name: string }[];\r\n}\r\n",
            "properties": [
                {
                    "name": "deleted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "documentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "documentLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isNestedDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "lastModifiedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "nestedVersions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TicketDocumentVersion[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "released",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "statuses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "ticketId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "variants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "versionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "versionLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "workflowId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketList",
            "id": "interface-TicketList-674eceedc9dcd864f4b1caa8c9972e07320ae95c1f34246f63a652a7c7fbe18c79b920d598f1806cf184487a03ce8dd5c5e3bca066544578350729161a9ffdcd",
            "file": "projects/main/src/app/features/products/shared/models/ticket/ticket-list.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TicketLite } from './ticket-lite.model';\r\n\r\nexport interface TicketList {\r\n  id: string;\r\n  productId: string;\r\n  tickets: TicketLite[];\r\n  canAuthor: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "canAuthor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "tickets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TicketLite[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketLite",
            "id": "interface-TicketLite-d3e74b7b3b2e937f418d859cee858c2342a6f744a3cce4574d7177d9cd527882f6835a66fb21a839dccd055cd6e8a48d683aac9f84c62fa37a400bd24872cec7",
            "file": "projects/main/src/app/features/products/shared/models/ticket/ticket-lite.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TicketLite {\r\n  id: string;\r\n  productId: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  released: boolean;\r\n  ecn: string;\r\n  releaseDate: Date | null;\r\n  validationId: string;\r\n  createdOn: Date;\r\n}\r\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "createdOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "ecn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "released",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "releaseDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "validationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketValidation",
            "id": "interface-TicketValidation-ee5be756b1777d87985f65cb634d3e59c93fa57f733e440655d2383faa41f9031866a521e2b7085bf537639b6458c1908fdefd6a2b2305458e406f79d16fab6b",
            "file": "projects/main/src/app/features/products/shared/models/ticket/ticket-validation.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TicketValidationStatus } from \"./ticket-validation-status.model\";\r\n\r\nexport interface TicketValidation {\r\n  instanceId: string;\r\n  runTimeStatus: string;\r\n  createdTime: Date;\r\n  lastUpdateTime: Date\r\n  customStatus: TicketValidationStatus[];\r\n}\r\n",
            "properties": [
                {
                    "name": "createdTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "customStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TicketValidationStatus[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "instanceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lastUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "runTimeStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketValidationReport",
            "id": "interface-TicketValidationReport-a349303aec0865b212d8a50d424096d6f5e1103c81b14ab587ad9e85a02cebfe72f63ef2cb9130eaa7046920314d333e852b8b879710fa0cdd670659caebc6f1",
            "file": "projects/main/src/app/features/products/shared/models/ticket/ticket-validation-report.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Anomaly } from \"./anomaly.model\";\r\n\r\nexport interface TicketValidationReport {\r\n  aggregateId: string;\r\n  report: string;\r\n  anomalies: Anomaly[]\r\n}\r\n",
            "properties": [
                {
                    "name": "aggregateId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "anomalies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Anomaly[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "report",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TicketValidationStatus",
            "id": "interface-TicketValidationStatus-dd0e5f171bfd527b5fc6e4059a1c8b3b0e23c18dec66955353b5bb810575357684df4718bdfdefcc7421f7330d6bf5284a31b5c5c7a19b72c95d0c07d7cfa902",
            "file": "projects/main/src/app/features/products/shared/models/ticket/ticket-validation-status.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TicketValidationReport } from \"./ticket-validation-report.model\";\r\n\r\nexport interface TicketValidationStatus {\r\n  number: number;\r\n  text: string;\r\n  function: string;\r\n  model: string;\r\n  status: number;\r\n  report: TicketValidationReport;\r\n}\r\n",
            "properties": [
                {
                    "name": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "report",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TicketValidationReport",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Uom",
            "id": "interface-Uom-06f7780234475e54dfdac384faaa2afae13bacc7ed6b5d9f6f91369bbf3f55882d0c0bd3393a0aafcdc05a5a4190db816951c736cf4fd01aa28476ca5582c246",
            "file": "projects/main/src/app/features/products/shared/models/dimensions/uom.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Precision } from \"./precision.model\";\r\n\r\nexport interface Uom {\r\n  symbol: string;\r\n  numerator: number;\r\n  denominator: number;\r\n  constant: number;\r\n  inverse: boolean;\r\n  precision: Precision;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "constant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "denominator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "inverse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "numerator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "precision",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Precision",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "projects/main/src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "WorkItem",
            "id": "interface-WorkItem-717c4cb85420bc10f8267effa35c9084cd67c582a90b44b88eb3ee02b10ddfdffb48d3d52ba3dcca5e992207aa0a7ccc213a1974c866306337366b639d1af62b",
            "file": "projects/main/src/app/features/work/change-management/shared/models/work-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface WorkItem {\r\n  ID: string;\r\n  Description: string;\r\n  CreatedOn: Date;\r\n  Status: any;\r\n  TaskName: string;\r\n  Subject: any;\r\n  Activity: any;\r\n  Owner: any;\r\n  CompletedBy: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "Activity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "CompletedBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "CreatedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "Owner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "Subject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "TaskName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "WorldMapCoordinate",
            "id": "interface-WorldMapCoordinate-4f6c0553cd5b4537c1d0443faaa17439544376a49e012ec4b75aae20432be98639635376e9377d8a9f07d33ec7ce3026fa229b5c3050f64776a561d19dac6473",
            "file": "projects/main/src/app/shared/world-map/model/world-map-coordinate.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface WorldMapCoordinate {\r\n  id: string,\r\n  city: string,\r\n  lat: number,\r\n  long: number,\r\n  color: string,\r\n  click: () => void\r\n}\r\n",
            "properties": [
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "long",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "WorldMapCountry",
            "id": "interface-WorldMapCountry-ba1be357af5f1f4619e04e318294d7efb9b282de218f569814e222fd44bd96d1ce8c9aa0bbbb562866278d3b35fd0f0ce1089c8dd7baf5cd03161ff2313b5de8",
            "file": "projects/main/src/app/shared/world-map/model/world-map-country.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { WorldMapContinent } from \"./world-map-continent.model\";\r\n\r\nexport interface WorldMapCountry {\r\n  id: string,\r\n  name: string,\r\n  continent: WorldMapContinent\r\n}\r\n",
            "properties": [
                {
                    "name": "continent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WorldMapContinent",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "WorldMapFlow",
            "id": "interface-WorldMapFlow-c2894cd7bacfea9e1e52b36d08a995f486c11f76da3d153521a1dbcf38e14721cc26ad9158147b4ecc4b3327280e57fd477c6d336729bf7fbcefd1f7bdc05f48",
            "file": "projects/main/src/app/shared/world-map/model/world-map-flow.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface WorldMapFlow {\r\n  id: string,\r\n  sourceId: string,\r\n  destinationId: string,\r\n  color: string,\r\n  click: () => void\r\n}\r\n",
            "properties": [
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "destinationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "sourceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "BrowserStorageServerService",
            "id": "injectable-BrowserStorageServerService-8536567b9e811ccf4afdecf81e366a9286f55167e22879915e2635c145c13e95073f5baa7eeba9fae64db34ffcf93f5f55123d1813c00a63a069237e238abcbe",
            "file": "projects/main/src/app/core/browser-storage/browser-storage-server.service.ts",
            "properties": [
                {
                    "name": "storage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Storage",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "BROWSER_STORAGE"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "inheritance": {
                        "file": "BrowserStorageService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BrowserStorageService"
                    }
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BrowserStorageService"
                    }
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BrowserStorageService"
                    }
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BrowserStorageService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BrowserStorageService } from './browser-storage.service';\r\n\r\n@Injectable()\r\nexport class BrowserStorageServerService extends BrowserStorageService {\r\n  constructor() {\r\n    super({\r\n      clear: () => { },\r\n      getItem: (key: string) => JSON.stringify({ key }),\r\n      setItem: (key: string, value: string) => JSON.stringify({ [key]: value }),\r\n      key: (index: number) => index.toString(),\r\n      length: 0,\r\n      removeItem: (key: string) => JSON.stringify({ key }),\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "extends": [
                "BrowserStorageService"
            ],
            "type": "injectable"
        },
        {
            "name": "BrowserStorageService",
            "id": "injectable-BrowserStorageService-db031ee5d05d2b96f7291107cb842a3d4a70845911afb923cde31d0dbd1e13db2864fabd1728cd98daf92313d44e6ae79b2ee480ac71e25036c354c7d6f26b10",
            "file": "projects/main/src/app/core/browser-storage/browser-storage.service.ts",
            "properties": [
                {
                    "name": "storage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Storage",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "BROWSER_STORAGE"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, InjectionToken } from '@angular/core';\r\n\r\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\r\n  providedIn: 'root',\r\n  factory: () => localStorage,\r\n});\r\n\r\n@Injectable()\r\nexport class BrowserStorageService {\r\n  constructor(@Inject(BROWSER_STORAGE) public storage: Storage) { }\r\n\r\n  get(key: string) {\r\n    return this.storage.getItem(key);\r\n  }\r\n\r\n  set(key: string, value: string) {\r\n    this.storage.setItem(key, value);\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.storage.removeItem(key);\r\n  }\r\n\r\n  clear() {\r\n    this.storage.clear();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "storage",
                        "type": "Storage",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "storage",
                        "type": "Storage",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DimensionService",
            "id": "injectable-DimensionService-763e8298dcabb4658d3174adf29b62fee536dfe1628f11bc773e5317863c19fc285bb0fbdd634fbaf98a838e687b85c7a26d5536cd360bcaeafdbaf3324b76ca",
            "file": "projects/main/src/app/features/products/shared/dimension.service.ts",
            "properties": [
                {
                    "name": "dimensions$",
                    "defaultValue": "new BehaviorSubject<Dimension[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Dimension[]>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "dimensionUrl",
                    "defaultValue": "environment.baseUrl + 'dimensions'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDimensions",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<DimensionList>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendGetDimensionsRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<DimensionList>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "memoize",
                            "stringifiedArguments": "{extractUniqueId: args => , clearCacheTimeout: undefined}"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { memoize } from '../../../shared/memoize/memoize.decorator';\r\nimport { DimensionList } from './models/dimensions/dimension-list.model';\r\nimport { Dimension } from './models/dimensions/dimension.model';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DimensionService {\r\n  // Resource url\r\n  private dimensionUrl = environment.baseUrl + 'dimensions';\r\n\r\n  // The list of dimensions\r\n  dimensions$: BehaviorSubject<Dimension[]> = new BehaviorSubject<Dimension[]>([]);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get the list of dimensions\r\n  getDimensions(): Observable<DimensionList> {\r\n    return this.sendGetDimensionsRequest().pipe(\r\n      tap(list => { this.dimensions$.next(list?.dimensions); })\r\n    );\r\n  }\r\n\r\n  @memoize({ extractUniqueId: (args) => args?.[0], clearCacheTimeout: environment.memoizeTimeOut })\r\n  private sendGetDimensionsRequest(): Observable<DimensionList> {\r\n    return this.http.get<DimensionList>(this.dimensionUrl, httpOptions);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DynamicFormService",
            "id": "injectable-DynamicFormService-478d4c5e9bf2ee6fe92b15a3a783f364da96775b29f12ac22e54a9c7fcb6e2ae9eafa114dc3db47b7d913ca045d878c60ff8820a4da1001d7bb28fc8ec4ce79c",
            "file": "projects/main/src/app/shared/dynamic-form/services/dynamic-form.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "popDynamicFormModal",
                    "args": [
                        {
                            "name": "config",
                            "type": "ModalConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "ModalConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "popDynamicFormTableModal",
                    "args": [
                        {
                            "name": "config",
                            "type": "ModalConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "ModalConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "popModal",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "popNotification",
                    "args": [
                        {
                            "name": "config",
                            "type": "NotificationConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "NotificationConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DynamicFormModalComponent } from '../containers/dynamic-form-modal/dynamic-form-modal.component';\r\nimport { DynamicFormNotificationModalComponent } from '../containers/dynamic-form-notification-modal/dynamic-form-notification-modal.component';\r\nimport { DynamicFormTableModalComponent } from '../containers/dynamic-form-table-modal/dynamic-form-table-modal.component';\r\nimport { ModalConfig } from '../models/modal-config.interface';\r\nimport { NotificationConfig } from '../models/notification-config.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicFormService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  popDynamicFormModal(config: ModalConfig) {\r\n    config.size = config.size || 'lg'; // Default to large modal\r\n    config.backdrop = config.backdrop || 'static'; // Default to static background\r\n    config.windowClass = config.windowClass || '';\r\n\r\n    const modalRef = this.modalService.open(DynamicFormModalComponent, { size: config.size, backdrop: config.backdrop, windowClass: config.windowClass });\r\n    modalRef.componentInstance.config = config;\r\n    modalRef.componentInstance.submitted.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onSubmit)\r\n        config.onSubmit($e);\r\n    })\r\n    modalRef.componentInstance.dismissed.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onDismiss)\r\n        config.onDismiss($e);\r\n    })\r\n  }\r\n\r\n  popDynamicFormTableModal(config: ModalConfig) {\r\n    config.size = config.size || 'lg'; // Default to large modal\r\n    config.backdrop = config.backdrop || 'static'; // Default to static background\r\n    config.windowClass = config.windowClass || '';\r\n\r\n    const modalRef = this.modalService.open(DynamicFormTableModalComponent, { size: config.size, backdrop: config.backdrop, windowClass: config.windowClass });\r\n    modalRef.componentInstance.config = config;\r\n    modalRef.componentInstance.submitted.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onSubmit)\r\n        config.onSubmit($e);\r\n    })\r\n    modalRef.componentInstance.dismissed.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onDismiss)\r\n        config.onDismiss($e);\r\n    })\r\n  }\r\n\r\n  popNotification(config: NotificationConfig) {\r\n    config.size = config.size || 'lg'; // Default to large modal\r\n    config.backdrop = config.backdrop || 'static'; // Default to static background\r\n    config.windowClass = config.windowClass || '';\r\n\r\n    const modalRef = this.modalService.open(DynamicFormNotificationModalComponent, { size: config.size, backdrop: config.backdrop, windowClass: config.windowClass });\r\n    modalRef.componentInstance.config = config;\r\n    modalRef.componentInstance.submitted.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onSubmit)\r\n        config.onSubmit($e);\r\n    })\r\n    modalRef.componentInstance.dismissed.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onDismiss)\r\n        config.onDismiss($e);\r\n    })\r\n  }\r\n\r\n  popModal(component: any, config: any) {\r\n    config.size = config.size || 'lg'; // Default to large modal\r\n    config.backdrop = config.backdrop || 'static'; // Default to static background\r\n    config.windowClass = config.windowClass || '';\r\n\r\n    const modalRef = this.modalService.open(component, { size: config.size, backdrop: config.backdrop, windowClass: config.windowClass });\r\n    modalRef.componentInstance.config = config;\r\n    modalRef.componentInstance.submitted.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onSubmit)\r\n        config.onSubmit($e);\r\n    })\r\n    modalRef.componentInstance.dismissed.subscribe(($e: any) => {\r\n      modalRef.close();\r\n      if (config.onDismiss)\r\n        config.onDismiss($e);\r\n    })\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FactoryService",
            "id": "injectable-FactoryService-0c2c20f2eed1b8352f9eed02b23e0d714bcf519660016c81be5387e7f0ec8c517922105d98878a5d6d91e295acf854359b836d8938f15cab7898ed778b95ec98",
            "file": "projects/main/src/app/features/products/shared/factory.service.ts",
            "properties": [
                {
                    "name": "factories$",
                    "defaultValue": "new BehaviorSubject<Factory[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Factory[]>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "factoryUrl",
                    "defaultValue": "environment.baseUrl + 'factories'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "LOCAL_STORAGE_KEY",
                    "defaultValue": "'FAVOURITE-FACTORY'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "clearFavourite",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFactories",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Factory[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFavouriteFactoryId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "markFavourite",
                    "args": [
                        {
                            "name": "factory",
                            "type": "Factory",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "factory",
                            "type": "Factory",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendGetFactoriesRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Factory[]>",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "memoize",
                            "stringifiedArguments": "{extractUniqueId: args => , clearCacheTimeout: undefined}"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, map, Observable, tap } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { BrowserStorageService } from '../../../core/browser-storage/browser-storage.service';\r\nimport { memoize } from '../../../shared/memoize/memoize.decorator';\r\nimport { Factory } from './models/factory/factory.model';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FactoryService {\r\n\r\n  // Resource url\r\n  private factoryUrl = environment.baseUrl + 'factories';\r\n\r\n  // The local storage key for preferences\r\n  LOCAL_STORAGE_KEY = 'FAVOURITE-FACTORY';\r\n\r\n  // The list of factories\r\n  factories$: BehaviorSubject<Factory[]> = new BehaviorSubject<Factory[]>([]);\r\n\r\n  constructor(private http: HttpClient, private browserStorageService: BrowserStorageService) { }\r\n\r\n  // Get the list of factories\r\n  getFactories(): Observable<Factory[]> {\r\n    // Retrieve the favourite factory\r\n    const favouriteFactoryId = this.getFavouriteFactoryId();\r\n    return this.sendGetFactoriesRequest().pipe(\r\n      map(factories => factories.map(f => ({ ...f, favourite: favouriteFactoryId === f.id }))),\r\n      tap(factories => { this.factories$.next(factories); })\r\n    );\r\n  }\r\n\r\n  // Mark the specified factory as the favourite factory\r\n  markFavourite(factory: Factory) {\r\n    // Retrieve the factory from the current list of factories\r\n    const factories = this.factories$.getValue();\r\n    const fact = factories.find(x => x.id === factory.id);\r\n\r\n    // Exit if factory is not to be found\r\n    if (!fact)\r\n      return;\r\n\r\n    // Update the favourite factory in local storage\r\n    this.browserStorageService.set(this.LOCAL_STORAGE_KEY, JSON.stringify(fact.id));\r\n\r\n    // Update the list of factories\r\n    factories.forEach(x => { x.favourite = false; });\r\n    fact.favourite = true;\r\n\r\n    // Emit new list of factories\r\n    this.factories$.next(factories);\r\n  }\r\n\r\n  // Clear the favourite factory\r\n  clearFavourite() {\r\n    // Retrieve the factory from the current list of factories\r\n    const factories = this.factories$.getValue();\r\n\r\n    // Update the favourite factory in local storage\r\n    this.browserStorageService.set(this.LOCAL_STORAGE_KEY, JSON.stringify(''));\r\n\r\n    // Update the list of factories\r\n    factories.forEach(x => { x.favourite = false; });\r\n\r\n    // Emit new list of factories\r\n    this.factories$.next(factories);\r\n  }\r\n\r\n  // Retrieve the favourite factory from the local storage\r\n  private getFavouriteFactoryId(): string {\r\n    const pref = JSON.parse(this.browserStorageService.get(this.LOCAL_STORAGE_KEY) || '\"\"');\r\n    return pref;\r\n  }\r\n\r\n  @memoize({ extractUniqueId: (args) => args?.[0], clearCacheTimeout: environment.memoizeTimeOut })\r\n  private sendGetFactoriesRequest(): Observable<Factory[]> {\r\n    return this.http.get<Factory[]>(this.factoryUrl, httpOptions);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "browserStorageService",
                        "type": "BrowserStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "browserStorageService",
                        "type": "BrowserStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FeatureListService",
            "id": "injectable-FeatureListService-408fc1813e8bacc9a915c6fbc139d37a18928b449ebbabb74edcfd32c9ca1c20b5dceb5f92ab631b2bdf62b31971c3442907d9ee0716efcceaa413896fcbe5cb",
            "file": "projects/main/src/app/features/products/features/shared/feature-list.service.ts",
            "properties": [
                {
                    "name": "factoryList$",
                    "defaultValue": "new BehaviorSubject<FeatureFactoryList | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<FeatureFactoryList | null>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "ruleSet$",
                    "defaultValue": "new BehaviorSubject<FeatureRuleSet | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<FeatureRuleSet | null>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "cleanningAnomalies$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "creatingVersion$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "document$",
                    "defaultValue": "new BehaviorSubject<BaseDocument | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<BaseDocument | null>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "documentCreated$",
                    "defaultValue": "new Subject<BaseDocument>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<BaseDocument>",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "documentReferenceUpdated$",
                    "defaultValue": "new Subject<{ id: string, reference: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "documentRenamed$",
                    "defaultValue": "new Subject<{ id: string, name: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "documentUrl",
                    "defaultValue": "environment.baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "importableDocument$",
                    "defaultValue": "new BehaviorSubject<BaseDocument | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<BaseDocument | null>",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "importableVersion$",
                    "defaultValue": "new BehaviorSubject<TVersion | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TVersion | null>",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "importableVersions$",
                    "defaultValue": "new BehaviorSubject<BaseVersionLite[] | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<[] | null>",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "NAVIGATION_MODE_DATA",
                    "defaultValue": "'NAVIGATIONMODEDATA'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "version$",
                    "defaultValue": "new BehaviorSubject<TVersion | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TVersion | null>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "versionComparison$",
                    "defaultValue": "new BehaviorSubject<TVersionComparison | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TVersionComparison | null>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "versionRenamed$",
                    "defaultValue": "new Subject<{ documentId: string, id: string, label: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "versions$",
                    "defaultValue": "new BehaviorSubject<TVersion[] | []>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<[] | >",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "versionUrl",
                    "defaultValue": "environment.baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "activateOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addFeatures",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "features",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "features",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addFeaturesAndOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "features",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 372,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "features",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "deactivateOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 268,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteFeatures",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureIds",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureIds",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteOptions",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllProductsReleasedFeaturesAndOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<FeatureListVersion[]>",
                    "typeParameters": [],
                    "line": 434,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFactories",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FeatureFactoryList | null>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeatureListDocumentByProductId",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<BaseDocument | null>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeatureListVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FeatureListVersion | null>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getImportableFeatureListVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FeatureListVersion | null>",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRuleSet",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FeatureRuleSet | null>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveFeature",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rank",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rank",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveOption",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rank",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rank",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "releaseOptionsToFactory",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unreleaseFeatureOptionsFromFactory",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 305,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFeature",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "notes",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "categoryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arraySizeFeatureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notes",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "categoryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arraySizeFeatureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOption",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOptionReleaseContractRules",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rules",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 355,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rules",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOptionReleaseSqRules",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rules",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rules",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOptionReleaseUnavailableRules",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rules",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 339,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "optionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rules",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateStyleRestriction",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "styleIds",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "featureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "styleIds",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateRevisionLevel",
                    "args": [
                        {
                            "name": "document",
                            "type": "BaseDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "releaseDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isPublished",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 516,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "document",
                            "type": "BaseDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "releaseDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isPublished",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "cloneValues",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sourceVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sourceVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "cloneVersion",
                    "args": [
                        {
                            "name": "sourceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 290,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sourceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "compareVersions",
                    "args": [
                        {
                            "name": "versionId1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionId2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TVersionComparison | null>",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "versionId1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionId2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "computeVersionId",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 373,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "convertRevisionLevelToLetter",
                    "args": [
                        {
                            "name": "revisionLevel",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 525,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "revisionLevel",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "createDocument",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "createDocumentAndVersion",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionLabel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "documentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "documentReference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionLabel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "documentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "documentReference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "createVersion",
                    "args": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getAllVersions",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<[] | >",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getCurrentStatusFromWorkflow",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 431,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getDocumentById",
                    "args": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | null>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getDocumentByProductId",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | null>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getDocumentByProductIdAndName",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | null>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [
                        {
                            "name": "helpInfoKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type | undefined>",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "helpInfoKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getImportableVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TVersion | null>",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getValues",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TVersion | null>",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getVersionChangeHistory",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<BaseVersionChangeHistory>",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "getVersionsByProductId",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<[] | null>",
                    "typeParameters": [],
                    "line": 458,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "pollForMatchingValues",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 334,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "reassignTicket",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 481,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "renameDocument",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "renameVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 502,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "resetWorkflow",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "setVersionOffset",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionOffset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 468,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionOffset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "setVersionStatuses",
                    "args": [
                        {
                            "name": "variantsStatus",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 419,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "variantsStatus",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "synchronizeWithVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "synchWithVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 406,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "synchWithVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                },
                {
                    "name": "updateDocumentReference",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "VersionPageService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map, mergeMap, tap } from 'rxjs/operators';\r\nimport { VersionPageService } from '../../shared/components/version-page-template/services/version-page.service';\r\nimport { FeatureListVersion } from './models/feature-list-version.model';\r\nimport { FeatureListVersionComparison } from '../../shared/components/feature-comparer/models/feature-list-version-comparison.model';\r\nimport { FeatureFactoryList } from './models/feature-factory-list.model';\r\nimport { FeatureRuleSet } from './models/feature-ruleset.model';\r\nimport { BaseDocument } from '../../shared/components/version-page-template/models/document.model';\r\nimport { constants } from '../../../../shared/constants/constants';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeatureListService extends VersionPageService<FeatureListVersion, FeatureListVersionComparison> {\r\n  // Factories\r\n  factoryList$: BehaviorSubject<FeatureFactoryList | null> = new BehaviorSubject<FeatureFactoryList | null>(null);\r\n\r\n  // The list of rules\r\n  ruleSet$: BehaviorSubject<FeatureRuleSet | null> = new BehaviorSubject<FeatureRuleSet | null>(null);\r\n\r\n  constructor(protected override http: HttpClient) {\r\n    super(http, 'product-feature-list')\r\n  }\r\n\r\n  clearData() {\r\n    this.version$.next(null);\r\n    this.factoryList$.next(null);\r\n  }\r\n\r\n  getFeatureListDocumentByProductId(productId: string): Observable<BaseDocument | null> {\r\n    return this.getDocumentByProductId<BaseDocument>(productId);\r\n  }\r\n\r\n  getFeatureListVersion(id: string): Observable<FeatureListVersion | null> {\r\n    return this.getVersion(id);\r\n  }\r\n\r\n  getImportableFeatureListVersion(id: string): Observable<FeatureListVersion | null> {\r\n    return this.getImportableVersion(id);\r\n  }\r\n\r\n  // Get factories for the feature list version (from feature list version id)\r\n  getFactories(id: string): Observable<FeatureFactoryList | null> {\r\n    // Compute the version Id\r\n    const computedId = this.computeVersionId(id);\r\n\r\n    if (!computedId)\r\n      return of(null).pipe(tap(x => { this.factoryList$.next(null); }));\r\n\r\n    const url = `${this.versionUrl}/${computedId}/factories`;\r\n    return this.http.get<FeatureFactoryList>(url).pipe(tap(x => {\r\n      this.factoryList$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Get ruleset for the screen version\r\n  getRuleSet(id: string): Observable<FeatureRuleSet | null> {\r\n    // Compute the version Id\r\n    const computedId = this.computeVersionId(id);\r\n\r\n    if (!computedId)\r\n      return of(null).pipe(tap(x => { this.ruleSet$.next(null); }));\r\n\r\n    const url = `${this.versionUrl}/${computedId}/rules`;\r\n    return this.http.get<FeatureRuleSet>(url).pipe(tap(x => {\r\n      this.ruleSet$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Add Features\r\n  addFeatures(id: string, features: { name: string, description: string, category: string, dimensionId: string, isNumeric: boolean, isFreeText: boolean, isArray: boolean, rank: string, isAutoGenerated: boolean }[]): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/features/add-multiple`;\r\n    const payload = { features };\r\n\r\n    return this.http.post(url, payload, httpOptions).pipe(\r\n      map((ids: any) => features.map((f, i) => ({ ...f, id: ids[i], options: [], styleRestrictions: [], notes: '', category: { name: f.category.toUpperCase() }, arraySize: { featureId: constants.emptyGuid, size: 0 } }))),\r\n      // Add all features to current feature list version\r\n      tap(feats => {\r\n        const version = this.version$.getValue();\r\n        if (version) {\r\n          version.features = version.features || [];\r\n          version.features.push(...feats)\r\n          this.version$.next(version);\r\n        }\r\n      }),\r\n      // Create default option for numeric features\r\n      mergeMap(feats => {\r\n        const numericFeatures = feats.filter(f => f.isNumeric);\r\n        const numericOptions = numericFeatures.map(f => ({ featureId: f.id, name: 'NUM', description: 'Numeric value', rank: 'aaa', isAutoGenerated: true }));\r\n        const freeTextFeatures = feats.filter(f => f.isFreeText);\r\n        const freeTextOptions = freeTextFeatures.map(f => ({ featureId: f.id, name: 'TXT', description: 'Free Text', rank: 'aaa', isAutoGenerated: true }));\r\n        const optionsToCreate = [...numericOptions, ...freeTextOptions];\r\n        return optionsToCreate.length ? this.addOptions(id, optionsToCreate).pipe(map(() => feats)) : of(feats);\r\n      })\r\n    )\r\n  }\r\n\r\n  // Move a feature\r\n  moveFeature(id: string, featureId: string, rank: string): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/features/${featureId}/move`;\r\n    const payload = { rank };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      if (feature) {\r\n        feature.rank = rank;\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Delete features\r\n  deleteFeatures(id: string, featureIds: string[]): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/features/remove-multiple`;\r\n    const payload = { ids: featureIds };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      if (version)\r\n        version.features = version.features.filter(f => !featureIds.includes(f.id))\r\n      this.version$.next(version);\r\n    }));\r\n  }\r\n\r\n  // Update a feature\r\n  updateFeature(id: string, featureId: string, name: string, description: string, notes: string, categoryName: string, arraySizeFeatureId: string, size: number): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/features/${featureId}/update-properties`;\r\n    const payload = { name, description, notes, categoryName, arraySizeFeatureId, size: isNaN(size) ? 0 : size };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      if (feature) {\r\n        if (name?.length)\r\n          feature.name = name;\r\n\r\n        if (description?.length)\r\n          feature.description = description;\r\n\r\n        if (notes?.length)\r\n          feature.notes = notes;\r\n\r\n        if (categoryName?.length)\r\n          feature.category.name = categoryName.toUpperCase();\r\n\r\n        if (arraySizeFeatureId !== constants.emptyGuid && feature.arraySize) {\r\n          feature.arraySize.featureId = arraySizeFeatureId;\r\n          feature.arraySize.size = 0;\r\n        }\r\n\r\n        if (size > 0 && arraySizeFeatureId === constants.emptyGuid && feature.arraySize) {\r\n          feature.arraySize.size = size;\r\n          feature.arraySize.featureId = constants.emptyGuid;\r\n        }\r\n\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Update style restriction\r\n  updateStyleRestriction(id: string, featureId: string, styleIds: any): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/features/${featureId}/update-style-restrictions`;\r\n    const payload = { styleIds };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      if (feature) {\r\n        feature.styleRestrictions = styleIds;\r\n\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Options ----------\r\n  addOptions(id: string, options: { featureId: string, name: string, description: string, rank: string, isAutoGenerated: boolean }[]): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/options/add-multiple`;\r\n    const payload = { options };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap((ids: any) => {\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        options.forEach((o, i) => {\r\n          const feature = version.features?.find(s => s.id === o.featureId);\r\n          if (feature) {\r\n            feature.options = feature.options || [];\r\n            feature.options.push({ ...o, id: ids[i], isActive: false, releases: [] });\r\n          }\r\n        });\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  moveOption(id: string, featureId: string, optionId: string, rank: string): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/options/${optionId}/move`;\r\n    const payload = { rank };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      const option = feature?.options?.find(s => s.id === optionId);\r\n      if (option) {\r\n        option.rank = rank;\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  deleteOptions(id: string, options: { featureId: string, optionId: string }[]): Observable<any> {\r\n    const ids = options.map(o => o.optionId);\r\n    const url = `${this.versionUrl}/${id}/options/remove-multiple`;\r\n    const payload = { ids };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        options.forEach(o => {\r\n          const feature = version.features?.find(s => s.id === o.featureId);\r\n          if (feature)\r\n            feature.options = feature.options.filter(x => x.id !== o.optionId);\r\n        });\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  updateOption(id: string, featureId: string, optionId: string, name: string, description: string): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/options/${optionId}/update-properties`;\r\n    const payload = { name, description };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      const option = feature?.options?.find(s => s.id === optionId);\r\n      if (option) {\r\n        if (name?.length)\r\n          option.name = name;\r\n\r\n        if (description?.length)\r\n          option.description = description;\r\n\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  activateOptions(id: string, options: { featureId: string, optionId: string }[]): Observable<any> {\r\n    const ids = options.map(o => o.optionId);\r\n    const url = `${this.versionUrl}/${id}/options/activate-multiple`;\r\n    const payload = { ids };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        options.forEach(o => {\r\n          const feature = version.features?.find(s => s.id === o.featureId);\r\n          const option = feature?.options?.find(s => s.id === o.optionId);\r\n          if (option) {\r\n            option.isActive = true;\r\n          }\r\n        });\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  deactivateOptions(id: string, options: { featureId: string, optionId: string }[]): Observable<any> {\r\n    const ids = options.map(o => o.optionId);\r\n    const url = `${this.versionUrl}/${id}/options/deactivate-multiple`;\r\n    const payload = { ids };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        options.forEach(o => {\r\n          const feature = version.features?.find(s => s.id === o.featureId);\r\n          const option = feature?.options?.find(s => s.id === o.optionId);\r\n          if (option) {\r\n            option.isActive = false;\r\n            option.releases = [];\r\n          }\r\n        });\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  releaseOptionsToFactory(id: string, options: { featureId: string, optionId: string, asSQ: boolean }[], factoryId: string) {\r\n    const url = `${this.versionUrl}/${id}/options/release-multiple`;\r\n    const payload = { options, factoryId };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        options.forEach(o => {\r\n          const feature = version.features?.find(s => s.id === o.featureId);\r\n          const option = feature?.options?.find(s => s.id === o.optionId);\r\n          if (option)\r\n            option.releases.push({ factoryId, asSQ: o.asSQ });\r\n        });\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  unreleaseFeatureOptionsFromFactory(id: string, options: { featureId: string, optionId: string }[], factoryId: string): Observable<any> {\r\n    const optionIds = options.map(o => o.optionId);\r\n    const url = `${this.versionUrl}/${id}/options/unrelease-multiple`;\r\n    const payload = { optionIds, factoryId };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        options.forEach(o => {\r\n          const feature = version.features?.find(s => s.id === o.featureId);\r\n          const option = feature?.options?.find(s => s.id === o.optionId);\r\n          if (option)\r\n            option.releases = option.releases.filter(r => r.factoryId !== factoryId);\r\n        });\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  updateOptionReleaseSqRules(id: string, featureId: string, optionId: string, factoryId: string, rules: string[][]): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/options/${optionId}/update-sq-rules`;\r\n    const payload = { factoryId, rules };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      const option = feature?.options?.find(s => s.id === optionId);\r\n      if (option) {\r\n        const release = option.releases?.find(r => r.factoryId === factoryId);\r\n        if (release)\r\n          release.sqRules = rules?.length ? { rules: rules } : undefined;\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  updateOptionReleaseUnavailableRules(id: string, featureId: string, optionId: string, factoryId: string, rules: string[][]): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/options/${optionId}/update-unavailable-rules`;\r\n    const payload = { factoryId, rules };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      const option = feature?.options?.find(s => s.id === optionId);\r\n      if (option) {\r\n        const release = option.releases?.find(r => r.factoryId === factoryId);\r\n        if (release)\r\n          release.unavailableRules = rules?.length ? { rules: rules } : undefined;\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  updateOptionReleaseContractRules(id: string, featureId: string, optionId: string, factoryId: string, rules: string[][]): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/options/${optionId}/update-contract-rules`;\r\n    const payload = { factoryId, rules };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      const feature = version?.features?.find(s => s.id === featureId);\r\n      const option = feature?.options?.find(s => s.id === optionId);\r\n      if (option) {\r\n        const release = option.releases?.find(r => r.factoryId === factoryId);\r\n        if (release)\r\n          release.contractRules = rules?.length ? { rules: rules } : undefined;\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Add multiple features and options to a feature list version\r\n  addFeaturesAndOptions(id: string,\r\n    features: { name: string, description: string, category: string, dimensionId: string, isNumeric: boolean, isFreeText: boolean, isArray: boolean, rank: string }[],\r\n    options: { featureName: string, name: string, description: string, rank: string }[]): Observable<any> {\r\n    // Url and payload for features\r\n    const featuresUrl = `${this.versionUrl}/${id}/features/add-multiple`;\r\n    const featuresPayload = { features };\r\n\r\n    // Url and payload for options\r\n    const optionsUrl = `${this.versionUrl}/${id}/options/add-multiple`;\r\n\r\n    return this.http.post(featuresUrl, featuresPayload, httpOptions).pipe(\r\n      map((ids: any) => features.map((f, i) => ({ ...f, id: ids[i], options: [], styleRestrictions: [], notes: '', category: { name: f.category.toUpperCase() }, arraySize: { featureId: constants.emptyGuid, size: 0 }, isAutoGenerated: false }))),\r\n      // Add all features to current feature list version\r\n      tap(feats => {\r\n        const version = this.version$.getValue();\r\n        if (version) {\r\n          version.features = version.features || [];\r\n          version.features.push(...feats);\r\n          this.version$.next(version);\r\n        }\r\n      }),\r\n      // Create default option for numeric features\r\n      mergeMap(feats => {\r\n        // Auto-generated options\r\n        const numericFeatures = feats.filter(f => f.isNumeric);\r\n        const numericOptions = numericFeatures.map(f => ({ featureId: f.id, name: 'NUM', description: 'Numeric value', rank: 'aaa', isAutoGenerated: true, featureName: f.name }));\r\n        const freeTextFeatures = feats.filter(f => f.isFreeText);\r\n        const freeTextOptions = freeTextFeatures.map(f => ({ featureId: f.id, name: 'TXT', description: 'Free Text', rank: 'aaa', isAutoGenerated: true, featureName: f.name }));\r\n\r\n        // Update options from input with features ids\r\n        const inputOptions = options.map(o => ({\r\n          ...o,\r\n          featureId: feats.find(y => y.name === o.featureName)?.id,\r\n          isAutoGenerated: false\r\n        }));\r\n\r\n        // Merge auto-generated and input options and create\r\n        const optionsToCreate = [...numericOptions, ...freeTextOptions, ...inputOptions];\r\n\r\n        if (optionsToCreate.length) {\r\n          return this.http.post(optionsUrl, { options: optionsToCreate }, httpOptions).pipe(\r\n            tap((ids: any) => {\r\n              const version = this.version$.getValue();\r\n              if (version) {\r\n                optionsToCreate.forEach((o, i) => {\r\n                  const feature = version.features?.find(s => s.id === o.featureId);\r\n                  if (feature) {\r\n                    feature.options = feature.options || [];\r\n                    feature.options.push({ ...o, id: ids[i], featureId: feature.id, isActive: false, releases: [] });\r\n                  }\r\n                });\r\n                this.version$.next(version);\r\n              }\r\n            }),\r\n            map(() => feats)\r\n          )\r\n        }\r\n        else return of(feats);\r\n      })\r\n    );\r\n  }\r\n\r\n  getAllProductsReleasedFeaturesAndOptions(): Observable<FeatureListVersion[]> {\r\n    return this.http.get<FeatureListVersion[]>(this.versionUrl, httpOptions);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "VersionPageService"
            ],
            "type": "injectable"
        },
        {
            "name": "LexicalRankService",
            "id": "injectable-LexicalRankService-66c1b3e92c23d5c8dc0b4e5da5415a97d23bb9d4c5d2eb750477c6de2707c7d49468b2be7d208f7128df8b756fe33b49b7d015f46060576801d7bbb103491044",
            "file": "projects/main/src/app/shared/lexical-rank/lexical-rank.service.ts",
            "properties": [
                {
                    "name": "alphabetSize",
                    "defaultValue": "58",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "maxRank",
                    "defaultValue": "'zzz'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "minRank",
                    "defaultValue": "'AAA'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "findMaxRank",
                    "args": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rankProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 204,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rankProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findMinRank",
                    "args": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rankProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rankProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMaxRank",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getMinRank",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getRankBetween",
                    "args": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRanksBetween",
                    "args": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRanksBetweenOptimized",
                    "args": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "first",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "second",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "lexicalRankSorter",
                    "args": [
                        {
                            "name": "rankProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'rank'"
                        }
                    ],
                    "optional": false,
                    "returnType": "\"1\" |  | \"0\"",
                    "typeParameters": [],
                    "line": 240,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rankProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'rank'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LexicalRankService {\r\n\r\n  private minRank = 'AAA';\r\n  private maxRank = 'zzz';\r\n  private alphabetSize = 58; // 26 upper case letters [A-Z], 6 special characters ([ \\ ] ^ _ `) and  26 lower case letters [a-z]\r\n\r\n  getMinRank() { return this.minRank; }\r\n  getMaxRank() { return this.maxRank; }\r\n\r\n  // Return a new rank value for an item to be ranked between 'first' and 'second' ranks\r\n  getRankBetween(first: string, second: string): string {\r\n    // Ensure that the first rank is lower than the second rank\r\n    if (second < first)\r\n      throw 'First rank must be lower than second rank';\r\n\r\n    // Normalize the sizes of the first and second ranks\r\n    while (first.length != second.length) {\r\n      if (first.length > second.length)\r\n        second += 'A'\r\n      else\r\n        first += 'A'\r\n    }\r\n\r\n    // Extract character codes for each characters of the ranks\r\n    const firstCodes = [...first].map(x => x.charCodeAt(0));\r\n    const secondCodes = [...second].map(x => x.charCodeAt(0));\r\n\r\n    // Compute difference between first and second\r\n    // The difference is the number of character between first and second\r\n    let difference = 0;\r\n\r\n    for (var i = firstCodes.length - 1; i >= 0; i--) {\r\n      let firstCode = firstCodes[i];\r\n      let secondCode = secondCodes[i];\r\n\r\n      // Adjust \r\n      if (secondCode < firstCode) {\r\n        secondCode += this.alphabetSize;\r\n        secondCodes[i - 1] -= 1;\r\n      }\r\n\r\n      // Increment difference\r\n      difference += (secondCode - firstCode) * (this.alphabetSize ** (first.length - i - 1))\r\n    }\r\n\r\n    // Generate the new rank\r\n    let newRank = '';\r\n\r\n    if (difference <= 1) {\r\n      // Simply add the middle character from the alphabet to the first rank\r\n      newRank = first + String.fromCharCode('A'.charCodeAt(0) + Math.floor(this.alphabetSize / 2));\r\n    } else {\r\n      // Add half of the difference to the first rank\r\n      difference = Math.floor(difference / 2);\r\n\r\n      // Intialize offet\r\n      let offset = 0;\r\n\r\n      for (var i = 0; i < firstCodes.length; i++) {\r\n        const characterDiff = Math.floor(difference / (this.alphabetSize ** i)) % this.alphabetSize;\r\n\r\n        let newCharacterCode = first.charCodeAt(first.length - i - 1) + characterDiff + offset;\r\n\r\n        // Reset the offset\r\n        offset = 0;\r\n\r\n        // Adjust if new character  is greater than 'Z'\r\n        if (newCharacterCode > 'z'.charCodeAt(0)) {\r\n          offset++;\r\n          newCharacterCode -= this.alphabetSize;\r\n        }\r\n\r\n        newRank += String.fromCharCode(newCharacterCode);\r\n      }\r\n\r\n      // Reverse the rank characters\r\n      newRank = newRank.split('').reverse().join('');\r\n    }\r\n\r\n    // Return\r\n    return newRank;\r\n  }\r\n\r\n  // Return N new rank values for N items to be ranked between 'first' and 'second' ranks\r\n  // This is not generating an optimized distribution of ranks\r\n  getRanksBetween(first: string, second: string, number: number): string[] {\r\n    const ret: string[] = [];\r\n    let smaller: string = first;\r\n    for (var i = 0; i < number; i++) {\r\n      smaller = this.getRankBetween(smaller, second);\r\n      ret.push(smaller);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Return N new rank values for N items to be ranked between 'first' and 'second' ranks\r\n  // This method generates an optimized distribution of ranks\r\n  getRanksBetweenOptimized(first: string, second: string, number: number): string[] {\r\n    // Ensure that the first rank is lower than the second rank\r\n    if (second < first)\r\n      throw 'First rank must be lower than second rank';\r\n\r\n    // Cannot request more rank values than the size of the alphabet\r\n    // Split the problem with recursion\r\n    if (number > this.alphabetSize) {\r\n      // Find the middle rank\r\n      const middleRank = this.getRankBetween(first, second);\r\n      // Distribue the number of rank either side of the middle Rank\r\n      const leftCount = Math.floor(number / 2);\r\n      const rightCount = number - leftCount;\r\n      // Compute the rank values for both ranges\r\n      return [...this.getRanksBetweenOptimized(first, middleRank, leftCount), ... this.getRanksBetweenOptimized(middleRank, second, rightCount)];\r\n    }\r\n\r\n    // Normalize the sizes of the first and second ranks\r\n    while (first.length != second.length) {\r\n      if (first.length > second.length)\r\n        second += 'A'\r\n      else\r\n        first += 'A'\r\n    }\r\n\r\n    // Extract character codes for each characters of the ranks\r\n    const firstCodes = [...first].map(x => x.charCodeAt(0));\r\n    const secondCodes = [...second].map(x => x.charCodeAt(0));\r\n\r\n    // Compute difference between first and second\r\n    // The difference is the number of character between first and second\r\n    let difference = 0;\r\n\r\n    for (var i = firstCodes.length - 1; i >= 0; i--) {\r\n      let firstCode = firstCodes[i];\r\n      let secondCode = secondCodes[i];\r\n\r\n      // Adjust \r\n      if (secondCode < firstCode) {\r\n        secondCode += this.alphabetSize;\r\n        secondCodes[i - 1] -= 1;\r\n      }\r\n\r\n      // Increment difference\r\n      difference += (secondCode - firstCode) * (this.alphabetSize ** (first.length - i - 1))\r\n    }\r\n\r\n    // Generate the new ranks\r\n    const newRanks: string[] = [];\r\n\r\n    if (difference <= number) {\r\n      // Simply add the middle character from the alphabet to the first rank\r\n      // TODO: Does not use well the available space in between first and second.\r\n      newRanks.push(...Array(number).fill(null).map((x, i) => first + String.fromCharCode('A'.charCodeAt(0) + Math.floor(this.alphabetSize / (number + 1) * (i + 1)))));\r\n    }\r\n    else {\r\n      // Distribute the difference over the number and add to the first rank\r\n      difference = Math.floor(difference / (number + 1));\r\n\r\n      for (var k = 0; k < number; k++) {\r\n        // Intialize offet\r\n        let offset = 0;\r\n\r\n        // Initialize loop difference\r\n        let diff = difference * (k + 1);\r\n\r\n        // Initialize loop new Rank\r\n        let newRank = '';\r\n\r\n        for (var i = 0; i < firstCodes.length; i++) {\r\n          const characterDiff = Math.floor(diff / (this.alphabetSize ** i)) % this.alphabetSize;\r\n\r\n          let newCharacterCode = first.charCodeAt(first.length - i - 1) + characterDiff + offset;\r\n\r\n          // Reset the offset\r\n          offset = 0;\r\n\r\n          // Adjust if new character  is greater than 'Z'\r\n          if (newCharacterCode > 'z'.charCodeAt(0)) {\r\n            offset++;\r\n            newCharacterCode -= this.alphabetSize;\r\n          }\r\n\r\n          newRank += String.fromCharCode(newCharacterCode);\r\n        }\r\n\r\n        // Reverse the rank characters\r\n        newRank = newRank.split('').reverse().join('');\r\n\r\n        // Add the response\r\n        newRanks.push(newRank);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    // Return\r\n    return newRanks;\r\n  }\r\n\r\n  // Retrieve the max rank in a list of items\r\n  findMaxRank(items: any[], rankProperty?: string): string {\r\n    // Generate a default rankProperty if not provided\r\n    rankProperty = rankProperty || 'rank';\r\n\r\n    // Initialize the maxRank at the minimum possible value \r\n    let maxRank = this.getMinRank();\r\n\r\n    // Traverse the list of items and update the max rank if greater than the currently stored maxRank\r\n    for (var i = 0; i < items.length; i++) {\r\n      if (items[i] && items[i][rankProperty] && items[i][rankProperty] > maxRank)\r\n        maxRank = items[i][rankProperty];\r\n    }\r\n\r\n    // Return the max rank\r\n    return maxRank;\r\n  }\r\n\r\n  // Retrieve the min rank in a list of items\r\n  findMinRank(items: any[], rankProperty?: string): string {\r\n    // Generate a default rankProperty if not provided\r\n    rankProperty = rankProperty || 'rank';\r\n\r\n    // Initialize the minRank at the maximum possible value \r\n    let minRank = this.getMaxRank();\r\n\r\n    // Traverse the list of items and update the min rank if smaller than the currently stored minRank\r\n    for (var i = 0; i < items.length; i++) {\r\n      if (items[i] && items[i][rankProperty] && items[i][rankProperty] < minRank)\r\n        minRank = items[i][rankProperty];\r\n    }\r\n\r\n    // Return the min rank\r\n    return minRank;\r\n  }\r\n\r\n  // Sort an array of objects based on their ranks\r\n  lexicalRankSorter(rankProperty: string = 'rank'): (a: any, b: any) => 1 | -1 | 0 {\r\n    // Create sorter function\r\n    const sorter = (a: any, b: any) => {\r\n      if (!a[rankProperty]) return -1;\r\n      if (!b[rankProperty]) return 1;\r\n      return a[rankProperty] < b[rankProperty] ? -1 : (a[rankProperty] > b[rankProperty] ? 1 : 0);\r\n    }\r\n    return sorter;\r\n  }\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "PlanningMenuService",
            "id": "injectable-PlanningMenuService-183a08ee3d7f50487b33f67e354db8ee90a2f8579514996886c1cf9c316e6cfa4acb08d3525463cea50430630387a204e50769d6703bd30ca4bb1400daa3af93",
            "file": "projects/main/src/app/features/work/planning/shared/planning-menu.service.ts",
            "properties": [
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    {\r\n      id: '1', label: 'Backlog', icon: faList, children: [\r\n        { id: '11', label: 'Backlog', icon: faClipboardList, route: ['backlog'] },\r\n        { id: '13', label: 'Priorities', icon: faSortAmountDown, route: ['priorities'] },\r\n        { id: '14', label: 'Dependencies', icon: faPeopleCarry, route: ['efforts'] }, // TODO\r\n      ]\r\n    },\r\n    {\r\n      id: '1a', label: 'Team (to be updated)', icon: faList, children: [\r\n        { id: '11', label: 'Team Backlog', icon: faClipboardList, route: ['backlog'] },\r\n        { id: '14', label: 'Efforts', icon: faPeopleCarry, route: ['efforts'] },\r\n      ]\r\n    },\r\n    {\r\n      id: '2', label: 'Planning', icon: faCalendar, children: [\r\n        { id: '21', label: 'Planning Scenarios', icon: faCopy, route: ['scenarios'] },\r\n        { id: '22', label: 'Team Capacity', icon: faUsers, route: ['capacity'] },\r\n      ]\r\n    },\r\n\r\n    {\r\n      id: '3', label: 'Execution', icon: faCogs, children: [\r\n        { id: '31', label: 'PI Commitment Summary', icon: faFileAlt, route: ['commitment'] },\r\n        { id: '32', label: 'Retrospective', icon: faRecycle, route: ['retrospective'] },\r\n      ]\r\n    },\r\n\r\n    {\r\n      id: '4', label: 'Charts', icon: faChartLine, children: [\r\n        { id: '41', label: 'PI Stats', icon: faChartBar, route: ['stats'] },\r\n      ]\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "quickLinks",
                    "defaultValue": "[\r\n    { abbreviation: 'Q1', label: 'Label1', onClick: () => { }, active: false, data: {} },\r\n    { abbreviation: 'Q2', label: 'Label2', onClick: () => { }, active: false, data: {} },\r\n    { abbreviation: 'Q3', label: 'Label3', onClick: () => { }, active: false, data: {} }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuickLink[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { faCalendar, faChartBar, faChartLine, faClipboardList, faCogs, faCopy, faFileAlt, faHome, faList, faPeopleCarry, faRecycle, faSortAmountDown, faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport { MenuItem } from '../../../../shared/side-bar/model/menu-item.model';\r\nimport { QuickLink } from '../../../../shared/side-bar/model/quick-link.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanningMenuService {\r\n\r\n  constructor() { }\r\n\r\n  quickLinks: QuickLink[] = [\r\n    { abbreviation: 'Q1', label: 'Label1', onClick: () => { }, active: false, data: {} },\r\n    { abbreviation: 'Q2', label: 'Label2', onClick: () => { }, active: false, data: {} },\r\n    { abbreviation: 'Q3', label: 'Label3', onClick: () => { }, active: false, data: {} }\r\n  ]\r\n\r\n\r\n  menuItems: MenuItem[] = [\r\n    {\r\n      id: '1', label: 'Backlog', icon: faList, children: [\r\n        { id: '11', label: 'Backlog', icon: faClipboardList, route: ['backlog'] },\r\n        { id: '13', label: 'Priorities', icon: faSortAmountDown, route: ['priorities'] },\r\n        { id: '14', label: 'Dependencies', icon: faPeopleCarry, route: ['efforts'] }, // TODO\r\n      ]\r\n    },\r\n    {\r\n      id: '1a', label: 'Team (to be updated)', icon: faList, children: [\r\n        { id: '11', label: 'Team Backlog', icon: faClipboardList, route: ['backlog'] },\r\n        { id: '14', label: 'Efforts', icon: faPeopleCarry, route: ['efforts'] },\r\n      ]\r\n    },\r\n    {\r\n      id: '2', label: 'Planning', icon: faCalendar, children: [\r\n        { id: '21', label: 'Planning Scenarios', icon: faCopy, route: ['scenarios'] },\r\n        { id: '22', label: 'Team Capacity', icon: faUsers, route: ['capacity'] },\r\n      ]\r\n    },\r\n\r\n    {\r\n      id: '3', label: 'Execution', icon: faCogs, children: [\r\n        { id: '31', label: 'PI Commitment Summary', icon: faFileAlt, route: ['commitment'] },\r\n        { id: '32', label: 'Retrospective', icon: faRecycle, route: ['retrospective'] },\r\n      ]\r\n    },\r\n\r\n    {\r\n      id: '4', label: 'Charts', icon: faChartLine, children: [\r\n        { id: '41', label: 'PI Stats', icon: faChartBar, route: ['stats'] },\r\n      ]\r\n    },\r\n  ];\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "PLMService",
            "id": "injectable-PLMService-6afa0dd33e67acc6f5fd7866faacd33b9f4723aa931b3049cceff103344a8d66bed7b3a36dc2f797abca92b0327722ebdafcbf8c4d05d63fdfbad41430aa0814",
            "file": "projects/main/src/app/features/work/change-management/shared/plm.service.ts",
            "properties": [
                {
                    "name": "changeRequests$",
                    "defaultValue": "new BehaviorSubject<ChangeRequest[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<ChangeRequest[]>",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "plmChangeManagementUrl",
                    "defaultValue": "environment.basePLMUrl + 'ChangeMgmt'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "plmWorkflowManagementUrl",
                    "defaultValue": "environment.basePLMUrl + 'Workflow'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "workItems$",
                    "defaultValue": "new BehaviorSubject<WorkItem[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<WorkItem[]>",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methods": [
                {
                    "name": "fetch",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<OData<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getChangeRequests",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ChangeRequest[]>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getWorkItems",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<WorkItem[]>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openChangeRequestInPLM",
                    "args": [
                        {
                            "name": "changeRequest",
                            "type": "ChangeRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changeRequest",
                            "type": "ChangeRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, expand, map, Observable, reduce, takeWhile, tap } from 'rxjs';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { memoize } from '../../../../shared/memoize/memoize.decorator';\r\nimport { ChangeRequest } from './models/change-request.model';\r\nimport { WorkItem } from './models/work-item.model';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Basic Y3NlaWduYzpKY2lmcmFuY2VAMjAyMyE=' })\r\n};\r\n\r\n\r\nexport interface OData<T> {\r\n  value: T[];\r\n  '@odata.nextLink'?: string,\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PLMService {\r\n  // Resource url\r\n  private plmChangeManagementUrl = environment.basePLMUrl + 'ChangeMgmt';\r\n  private plmWorkflowManagementUrl = environment.basePLMUrl + 'Workflow';\r\n\r\n  // The list of change requests\r\n  changeRequests$: BehaviorSubject<ChangeRequest[]> = new BehaviorSubject<ChangeRequest[]>([]);\r\n\r\n  // The list of work items\r\n  workItems$: BehaviorSubject<WorkItem[]> = new BehaviorSubject<WorkItem[]>([]);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private fetch<T>(url: string): Observable<OData<T>> {\r\n    return this.http.get<OData<T>>(url, httpOptions)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // Get the list of change requests\r\n\r\n  // http://<Windchill_Host>/Windchill/servlet/odata/ChangeMgmt/ChangeRequests\r\n\r\n  getChangeRequests(): Observable<ChangeRequest[]> {\r\n\r\n    const contexts = [\r\n      'MFG-Reynosa',\r\n      'MFG-Juarez',\r\n      //'Valves and Actuators - Controls',\r\n      //'Controllers - SMZ - JCH',\r\n      //'Unit - SMZ - JCH'\r\n    ];\r\n\r\n    const predicate = contexts.map(c => `Context/Name eq '${c}'`).join(' or ');\r\n\r\n    const url = `${this.plmChangeManagementUrl}/ChangeRequests?$count=true&$select=Name,Number,ID,State,CreatedOn&$filter=State/Value ne 'RESOLVED' and (${predicate})&$expand=Context,ProcessObjects($filter=(contains(ID,'WTChangeOrder2'));$select=Number,Name,ID)`\r\n\r\n\r\n    return this.fetch<ChangeRequest>(url).pipe(\r\n      expand(response => this.fetch<ChangeRequest>(response['@odata.nextLink'] || '')),\r\n      takeWhile(response => !!response['@odata.nextLink'], true),\r\n      reduce((all, response) => all.concat(response.value), [] as ChangeRequest[]),\r\n      tap(changeRequests => { console.log(changeRequests); this.changeRequests$.next(changeRequests); })\r\n    )\r\n  }\r\n\r\n\r\n  getWorkItems(): Observable<WorkItem[]> {\r\n    const url = `${this.plmWorkflowManagementUrl}/WorkItems?$count=true&$expand=Subject,Activity,Owner,CompletedBy`\r\n\r\n\r\n    return this.fetch<WorkItem>(url).pipe(\r\n      expand(response => this.fetch<WorkItem>(response['@odata.nextLink'] || '')),\r\n      takeWhile(response => !!response['@odata.nextLink'], true),\r\n      reduce((all, response) => all.concat(response.value), [] as WorkItem[]),\r\n      tap(workItems => { console.log(workItems); this.workItems$.next(workItems); })\r\n    )\r\n  }\r\n\r\n\r\n  openChangeRequestInPLM(changeRequest: ChangeRequest): void {\r\n\r\n    const link = `https://plm-train.johnsoncontrols.com/Windchill/app/#ptc1/tcomp/infoPage?ContainerOid=${changeRequest.Context.ID}&oid=${changeRequest.ID}&u8=1`;\r\n    window.open(link, \"_blank\");\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ProductMenuService",
            "id": "injectable-ProductMenuService-b18604fbb1676a4a95904d72cf6482c4fd97e7a32abf3a5920bc445916fe76a2ea6ac5dafe71a1b0c186039f52b2a4619292ad5270bd26aaf1c8f146f2ebee9f",
            "file": "projects/main/src/app/features/products/shared/product-menu.service.ts",
            "properties": [
                {
                    "name": "menuUrl",
                    "defaultValue": "environment.baseUrl + 'menu'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productMenuItems$",
                    "defaultValue": "new BehaviorSubject<{ [key: string]: ProductMenuItem[] } | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<literal type | null>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "getMenu",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendGetMenuRequest",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "memoize",
                            "stringifiedArguments": "{extractUniqueId: args => , clearCacheTimeout: undefined}"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { memoize } from '../../../shared/memoize/memoize.decorator';\r\nimport { ProductMenuItem } from './models/menu/product-menu-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductMenuService {\r\n  private menuUrl = environment.baseUrl + 'menu';\r\n\r\n  // The selected product menu items\r\n  productMenuItems$: BehaviorSubject<{ [key: string]: ProductMenuItem[] } | null> = new BehaviorSubject<{ [key: string]: ProductMenuItem[] } | null>(null);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get the menu for the selected product\r\n  getMenu(productId: string): Observable<{ [key: string]: ProductMenuItem[] }> {\r\n    return this.sendGetMenuRequest(productId).pipe(\r\n      tap(x => { this.productMenuItems$.next(x); })\r\n    );\r\n  }\r\n\r\n  @memoize({ extractUniqueId: (args) => args?.[0], clearCacheTimeout: environment.memoizeTimeOut })\r\n  private sendGetMenuRequest(productId: string): Observable<{ [key: string]: ProductMenuItem[] }> {\r\n    const url = `${this.menuUrl}/products?productId=${productId}`;\r\n    return this.http.get<{ [key: string]: ProductMenuItem[] }>(url);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ProductService",
            "id": "injectable-ProductService-f549a58b02b26f90bf2a8fa20d0475d0dfe13f861666c2dd4d1e9e18a2a87455c19e9203f55a3ca579a054494917524834816189f2a499fad4051fbf8f07cce7",
            "file": "projects/main/src/app/features/products/shared/product.service.ts",
            "properties": [
                {
                    "name": "LOCAL_STORAGE_KEY",
                    "defaultValue": "'FAVOURITE-PRODUCTS'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "product$",
                    "defaultValue": "new BehaviorSubject<Product | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Product | null>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "products$",
                    "defaultValue": "new BehaviorSubject<Product[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Product[]>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "productUrl",
                    "defaultValue": "environment.baseUrl + 'products'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addProductModLevel",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addProductStyle",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProductModLevel",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "modLevelId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modLevelId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProductStyle",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFavouriteProductIds",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "markFavourite",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renameProductModLevel",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "modLevelId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modLevelId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renameProductStyle",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "styleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendGetProductRequest",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "memoize",
                            "stringifiedArguments": "{extractUniqueId: args => , clearCacheTimeout: undefined}"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendGetProductsRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "memoize",
                            "stringifiedArguments": "{extractUniqueId: args => , clearCacheTimeout: undefined}"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                },
                {
                    "name": "unmarkFavourite",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, map, Observable, tap } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Product } from './models/product/product.model';\r\nimport { memoize } from '../../../shared/memoize/memoize.decorator';\r\nimport { BrowserStorageService } from '../../../core/browser-storage/browser-storage.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  // Resource url\r\n  private productUrl = environment.baseUrl + 'products';\r\n\r\n  // The local storage key for preferences\r\n  LOCAL_STORAGE_KEY = 'FAVOURITE-PRODUCTS';\r\n\r\n  // The list of products\r\n  products$: BehaviorSubject<Product[]> = new BehaviorSubject<Product[]>([]);\r\n\r\n  // The selected product\r\n  product$: BehaviorSubject<Product | null> = new BehaviorSubject<Product | null>(null);\r\n\r\n  constructor(private http: HttpClient, private browserStorageService: BrowserStorageService) { }\r\n\r\n  // Get the list of products\r\n  getProducts(): Observable<Product[]> {\r\n    // Retrieve the favourite products\r\n    const favouriteProductIds = this.getFavouriteProductIds();\r\n    return this.sendGetProductsRequest().pipe(\r\n      map(products => products.map(p => ({ ...p, favourite: favouriteProductIds.includes(p.id), defaultPictureUrl: `${this.productUrl}/${p.id}/pictures/default` }))),\r\n      tap(products => { this.products$.next(products); })\r\n    );\r\n  }\r\n\r\n  // Get a single product\r\n  getProduct(id: string): Observable<Product> {\r\n    return this.sendGetProductRequest(id).pipe(\r\n      map(product => ({ ...product, defaultPictureUrl: `${this.productUrl}/${product.id}/pictures/default` })),\r\n      tap(product => { this.product$.next(product); })\r\n    );\r\n  }\r\n\r\n  // Add style\r\n  addProductStyle(id: string, name: string) {\r\n    const url = `${this.productUrl}/${id}/styles`;\r\n    const payload = { name };\r\n    return this.http.post<string>(url, payload, httpOptions).pipe(tap(x => {\r\n      const product = this.product$.getValue();\r\n      if (product) {\r\n        product.styles.push({ id: x, name: name, modLevels: [] });\r\n        this.product$.next(product);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Rename style\r\n  renameProductStyle(id: string, styleId: string, name: string) {\r\n    const url = `${this.productUrl}/${id}/styles/${styleId}/change-name`;\r\n    const payload = { name };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const product = this.product$.getValue();\r\n      if (product) {\r\n        const style = product.styles.find(y => y.id === styleId);\r\n        if (style) {\r\n          style.name = name;\r\n          this.product$.next(product);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Delete style\r\n  deleteProductStyle(id: string, styleId: string) {\r\n    const url = `${this.productUrl}/${id}/styles/${styleId}`;\r\n    return this.http.delete<string>(url).pipe(tap(x => {\r\n      const product = this.product$.getValue();\r\n      if (product) {\r\n        const idx = product.styles.findIndex(y => y.id === styleId);\r\n        if (idx > -1) {\r\n          product.styles.splice(idx, 1);\r\n          this.product$.next(product);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Add mod level\r\n  addProductModLevel(id: string, styleId: string, name: string) {\r\n    const url = `${this.productUrl}/${id}/styles/${styleId}/mod-levels`;\r\n    const payload = { name };\r\n    return this.http.post<string>(url, payload, httpOptions).pipe(tap(x => {\r\n      const product = this.product$.getValue();\r\n      const style = product?.styles.find(s => s.id === styleId);\r\n\r\n      if (style) {\r\n        style.modLevels.push({ id: x, name: name, styleId });\r\n        this.product$.next(product);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Rename mod level\r\n  renameProductModLevel(id: string, styleId: string, modLevelId: string, name: string) {\r\n    const url = `${this.productUrl}/${id}/styles/${styleId}/mod-levels/${modLevelId}/change-name`;\r\n    const payload = { name };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      const product = this.product$.getValue();\r\n      const style = product?.styles.find(s => s.id === styleId);\r\n      const modLevel = style?.modLevels.find(m => m.id === modLevelId);\r\n      if (modLevel) {\r\n        modLevel.name = name;\r\n        this.product$.next(product);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Delete mod level\r\n  deleteProductModLevel(id: string, styleId: string, modLevelId: string) {\r\n    const url = `${this.productUrl}/${id}/styles/${styleId}/mod-levels/${modLevelId}`;\r\n    return this.http.delete<string>(url).pipe(tap(x => {\r\n      const product = this.product$.getValue();\r\n      const style = product?.styles.find(s => s.id === styleId);\r\n      if (style) {\r\n        const idx = style?.modLevels.findIndex(m => m.id === modLevelId);\r\n        if (idx > -1) {\r\n          style.modLevels.splice(idx, 1);\r\n          this.product$.next(product);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Mark the specified product as a favourite product\r\n  markFavourite(product: Product) {\r\n    // Retrieve the product from the current list of products\r\n    const products = this.products$.getValue();\r\n    const prod = products.find(x => x.id === product.id);\r\n\r\n    // Exit if product is not to be found\r\n    if (!prod)\r\n      return;\r\n\r\n    // Retrieve the favourite products\r\n    const favouriteProductIds = this.getFavouriteProductIds();\r\n\r\n    // Add id to the list\r\n    favouriteProductIds.push(product.id);\r\n\r\n    // Store in local storage\r\n    this.browserStorageService.set(this.LOCAL_STORAGE_KEY, JSON.stringify(favouriteProductIds));\r\n\r\n    // Update the list of products\r\n    prod.favourite = true;\r\n\r\n    // Emit new list of products\r\n    this.products$.next(products);\r\n  }\r\n\r\n  // Unmark the specified product from the list of favourite products\r\n  unmarkFavourite(product: Product) {\r\n    // Retrieve the product from the current list of products\r\n    const products = this.products$.getValue();\r\n    const prod = products.find(x => x.id === product.id);\r\n\r\n    // Exit if product is not to be found\r\n    if (!prod)\r\n      return;\r\n\r\n    // Retrieve the favourite products\r\n    const favouriteProductIds = this.getFavouriteProductIds();\r\n\r\n    // Remove the product from the list of favourite products\r\n    const idx = favouriteProductIds.findIndex(x => x === product.id);\r\n    favouriteProductIds.splice(idx, 1);\r\n\r\n    // Store in local storage\r\n    this.browserStorageService.set(this.LOCAL_STORAGE_KEY, JSON.stringify(favouriteProductIds));\r\n\r\n    // Update the list of products\r\n    prod.favourite = false;\r\n\r\n    // Emit new list of products\r\n    this.products$.next(products);\r\n  }\r\n\r\n  // Retrieve the list of favourite products from the local storage\r\n  private getFavouriteProductIds(): string[] {\r\n    const pref = JSON.parse(this.browserStorageService.get(this.LOCAL_STORAGE_KEY) || '[]');\r\n    return pref;\r\n  }\r\n\r\n  @memoize({ extractUniqueId: (args) => args?.[0], clearCacheTimeout: environment.memoizeTimeOut })\r\n  private sendGetProductsRequest(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.productUrl, httpOptions)\r\n  }\r\n\r\n  @memoize({ extractUniqueId: (args) => args?.[0], clearCacheTimeout: environment.memoizeTimeOut })\r\n  private sendGetProductRequest(id: string): Observable<Product> {\r\n    const url = `${this.productUrl}/${id}`;\r\n    return this.http.get<Product>(url, httpOptions);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "browserStorageService",
                        "type": "BrowserStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "browserStorageService",
                        "type": "BrowserStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-bc6277cdbcf51c3e643c7a48d34455d6a05b2a8d4343b05078f67dc702537c4fe8fde917b7293e6bccc91f1b5e4da2773056af8ffcb026769ddc8e22c116bf5c",
            "file": "projects/main/src/app/shared/theme/theme.service.ts",
            "properties": [
                {
                    "name": "colors",
                    "defaultValue": "{\r\n    'blue': '',\r\n    'indigo': '',\r\n    'purple': '',\r\n    'pink': '',\r\n    'red': '',\r\n    'orange': '',\r\n    'yellow': '',\r\n    'green': '',\r\n    'teal': '',\r\n    'cyan': '',\r\n    'white': '',\r\n    'gray': '',\r\n    'gray-dark': '',\r\n    'primary': '',\r\n    'secondary': '',\r\n    'success': '',\r\n    'info': '',\r\n    'warning': '',\r\n    'danger': '',\r\n    'light': '',\r\n    'dark': ''\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Colors",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "palette",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Colors } from './model/colors.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  // Expose the color from the app CSS\r\n  colors: Colors = {\r\n    'blue': '',\r\n    'indigo': '',\r\n    'purple': '',\r\n    'pink': '',\r\n    'red': '',\r\n    'orange': '',\r\n    'yellow': '',\r\n    'green': '',\r\n    'teal': '',\r\n    'cyan': '',\r\n    'white': '',\r\n    'gray': '',\r\n    'gray-dark': '',\r\n    'primary': '',\r\n    'secondary': '',\r\n    'success': '',\r\n    'info': '',\r\n    'warning': '',\r\n    'danger': '',\r\n    'light': '',\r\n    'dark': ''\r\n  }\r\n\r\n  // Expose a palette\r\n  palette: string[] = [];\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document) {\r\n    const bodyStyles = getComputedStyle(document.body);\r\n\r\n    Object.keys(this.colors).forEach(k => {\r\n      this.colors[k as keyof Colors] = bodyStyles.getPropertyValue('--bs-' + k).trim();\r\n    });\r\n\r\n    this.palette = [\r\n      this.colors.blue,\r\n      this.colors.cyan,\r\n      this.colors.teal,\r\n      this.colors.green,\r\n      this.colors.yellow,\r\n      this.colors.gray,\r\n      this.colors['gray-dark']\r\n    ]\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TicketService",
            "id": "injectable-TicketService-ed40ff938d1afbe88256cb22c3b65e9e20a5aecbc5ee48200fe0efc4e3743e98c15f6abb6f26ae70050ed73aa5bc16a997cf178b59ba1f006defc8eae4a1f403",
            "file": "projects/main/src/app/features/products/shared/ticket.service.ts",
            "properties": [
                {
                    "name": "ticket$",
                    "defaultValue": "new BehaviorSubject<Ticket | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Ticket | null>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "ticketList$",
                    "defaultValue": "new BehaviorSubject<TicketList | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TicketList | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "ticketUrl",
                    "defaultValue": "environment.baseUrl + 'product-tickets'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ticketValidation$",
                    "defaultValue": "new BehaviorSubject<TicketValidation | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TicketValidation | null>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "ticketValidationReport$",
                    "defaultValue": "new BehaviorSubject<any | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any | null>",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methods": [
                {
                    "name": "createTicket",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ecn",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ecn",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNestedDocuments",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "documentType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TicketDocumentVersion[]>",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "documentType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTicket",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Ticket>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTicketList",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TicketList>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTicketLite",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Ticket>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidationProcess",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validationId",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validationId",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidationProcessReport",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validationId",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TicketValidationReport>",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validationId",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "releaseTicket",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTicketDetails",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ecn",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ecn",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateTicket",
                    "args": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { TicketList } from './models/ticket/ticket-list.model';\r\nimport { Ticket } from './models/ticket/ticket.model';\r\nimport { TicketValidation } from './models/ticket/ticket-validation.model';\r\nimport { TicketValidationReport } from './models/ticket/ticket-validation-report.model';\r\nimport { TicketDocumentVersion } from './models/ticket/ticket-document-version.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n  // Resource url\r\n  private ticketUrl = environment.baseUrl + 'product-tickets';\r\n\r\n  // An observable representing the list of tickets for the currently selected product\r\n  ticketList$: BehaviorSubject<TicketList | undefined> = new BehaviorSubject<TicketList | undefined>(undefined);\r\n\r\n  // Selected Ticket\r\n  ticket$: BehaviorSubject<Ticket | null> = new BehaviorSubject<Ticket | null>(null);\r\n\r\n  // Latest Validation\r\n  ticketValidation$: BehaviorSubject<TicketValidation | null> = new BehaviorSubject<TicketValidation | null>(null);\r\n\r\n  // Latest Validation Report\r\n  ticketValidationReport$: BehaviorSubject<any | null> = new BehaviorSubject<any | null>(null);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get the list of tickets by product\r\n  getTicketList(productId?: string): Observable<TicketList> {\r\n    const url = !!productId ? `${this.ticketUrl}?productId=${productId}` : `${this.ticketUrl}`;\r\n    return this.http.get<TicketList>(url).pipe(\r\n      map(list => ({ ...list, productId: productId || '' })),\r\n      tap(list => { this.ticketList$.next(list); })\r\n    );\r\n  }\r\n\r\n  // Get a ticket\r\n  getTicket(ticketId: string): Observable<Ticket> {\r\n    const url = `${this.ticketUrl}/${ticketId}`;\r\n    return this.http.get<Ticket>(url).pipe(tap(x => {\r\n      this.ticket$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Get a ticket lite\r\n  getTicketLite(ticketId: string): Observable<Ticket> {\r\n    const url = `${this.ticketUrl}/${ticketId}/lite`;\r\n    return this.http.get<Ticket>(url).pipe(tap(x => {\r\n      this.ticket$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Create a ticket\r\n  createTicket(productId: string, title: string, description: string, category: string, ecn: string): Observable<any> {\r\n    const payload = { productId, title, description, category, ecn };\r\n    return this.http.post<string>(this.ticketUrl, payload).pipe(tap(id => {\r\n      const ticketList = this.ticketList$.getValue();\r\n      if (ticketList) {\r\n        ticketList.tickets.push({ id, productId, title, description, category, released: false, validationId: '', createdOn: new Date(), releaseDate: null, ecn });\r\n        this.ticketList$.next(ticketList);\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  updateTicketDetails(ticketId: string, title: string, description: string, category: string, ecn: string): Observable<any> {\r\n    const url = `${this.ticketUrl}/${ticketId}/update`;\r\n    const payload = { title, description, category, ecn };\r\n    return this.http.post<TicketList>(url, payload).pipe(tap(id => {\r\n      const ticketList = this.ticketList$.getValue();\r\n      if (ticketList) {\r\n        var ticket = ticketList.tickets.find(t => t.id === ticketId);\r\n        if (ticket) {\r\n          ticket.title = title;\r\n          ticket.description = description;\r\n          ticket.category = category;\r\n          ticket.ecn = ecn;\r\n\r\n          this.ticketList$.next(ticketList);\r\n        }\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  validateTicket(ticketId: string): Observable<string> {\r\n    const url = `${this.ticketUrl}/${ticketId}/validate`;\r\n    const payload = {};\r\n    return this.http.post<string>(url, payload).pipe(tap(id => {\r\n      const ticket = this.ticket$.getValue();\r\n      if (ticket)\r\n        ticket.validationId = id;\r\n      this.ticket$.next(ticket);\r\n    }));\r\n  }\r\n\r\n  getValidationProcess(ticketId: string, validationId: string | undefined): Observable<any[]> {\r\n    const url = `${this.ticketUrl}/${ticketId}/validations/${validationId}`;\r\n\r\n    const observables = [\r\n      this.http.get<TicketValidation>(url),\r\n      this.getValidationProcessReport(ticketId, validationId)\r\n    ];\r\n\r\n    return combineLatest(...observables).pipe(\r\n      tap(([validation, validationReport]) => {\r\n        this.ticketValidation$.next(validation as TicketValidation);\r\n        this.ticketValidationReport$.next(validationReport);\r\n      }));\r\n  }\r\n\r\n  getValidationProcessReport(ticketId: string, validationId: string | undefined): Observable<TicketValidationReport> {\r\n    const url = `${this.ticketUrl}/${ticketId}/validations/${validationId}/report`;\r\n    return this.http.get<TicketValidationReport>(url).pipe(tap(report => {\r\n      this.ticketValidationReport$.next(report);\r\n    }));\r\n  }\r\n\r\n  // Release a ticket\r\n  releaseTicket(ticketId: string): Observable<any> {\r\n    const url = `${this.ticketUrl}/${ticketId}/release`;\r\n    const payload = {};\r\n    return this.http.post<TicketList>(url, payload).pipe(tap(id => {\r\n      const ticketList = this.ticketList$.getValue();\r\n      if (ticketList) {\r\n        var ticket = ticketList.tickets.find(t => t.id === ticketId);\r\n        // ticket.released = true;\r\n        this.ticketList$.next(ticketList);\r\n      }\r\n    }));\r\n  }\r\n\r\n  getNestedDocuments(ticketId: string, documentId: string, versionId: string, documentType: string): Observable<TicketDocumentVersion[]> {\r\n    const url = `${this.ticketUrl}/${ticketId}/documents/${documentId}/nested-documents`;\r\n    const payload = { versionId, documentType };\r\n    return this.http.post<TicketDocumentVersion[]>(url, payload).pipe(tap(nestedDocuments => {\r\n      if (nestedDocuments.length) {\r\n        const ticket = this.ticket$.getValue();\r\n        if (ticket) {\r\n          const document = ticket.documentVersions.find(x => x.documentId == documentId);\r\n          if (document) {\r\n            document.nestedVersions = nestedDocuments;\r\n            this.ticket$.next(ticket);\r\n          }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TranslationService",
            "id": "injectable-TranslationService-b2dbf5e1f1714b0506c608eef6ebb69f1d4123da25cb992f33e755fd6a4bd9e25747866db87054f209bd3b1a2a3aad3e98709f870593bffbcba9186e7588ed21",
            "file": "projects/main/src/app/core/translation/translation.service.ts",
            "properties": [
                {
                    "name": "defaultLanguage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Language",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "documentTranslationProvider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "languages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Language[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "selectedApplicationLanguage$",
                    "defaultValue": "new BehaviorSubject<Language | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Language | null>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "selectedDocumentLanguage$",
                    "defaultValue": "new BehaviorSubject<Language | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Language | null>",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "getAssetTranslations",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "assetFolderPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'assets/i18n/'"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "assetFolderPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'assets/i18n/'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDatabaseTranslations",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocumentTranslations",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setApplicationLanguage",
                    "args": [
                        {
                            "name": "lang",
                            "type": "Language",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "Language",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDocumentLanguage",
                    "args": [
                        {
                            "name": "lang",
                            "type": "Language",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "Language",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDocumentTranslationProvider",
                    "args": [
                        {
                            "name": "provider",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "languague",
                                    "type": "Language",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "provider",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "languague",
                                    "type": "Language",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { Language } from './language.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslationService {\r\n  // The list of supported languages and the default language to use when none is specified\r\n  languages: Language[];\r\n  defaultLanguage: Language;\r\n\r\n  // The currently selected application language\r\n  selectedApplicationLanguage$:BehaviorSubject<Language | null > = new BehaviorSubject<Language | null>(null);\r\n\r\n  // The currently selected document language\r\n  selectedDocumentLanguage$: BehaviorSubject<Language | null> = new BehaviorSubject<Language | null>(null);\r\n\r\n  // The document translation provider\r\n  documentTranslationProvider!: (languague: Language) => Observable<any>;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.languages = [\r\n      { code: 'en', name: 'LANGUAGE.ENGLISH', flag: 'gb' },\r\n      { code: 'fr', name: 'LANGUAGE.FRENCH', flag: 'fr' },\r\n      { code: 'es', name: 'LANGUAGE.SPANISH', flag: 'es' },\r\n      { code: 'zh', name: 'LANGUAGE.CHINESE', flag: 'cn' },\r\n      { code: 'de', name: 'LANGUAGE.GERMAN', flag: 'de' }\r\n    ];\r\n    this.defaultLanguage = this.languages[0];\r\n  }\r\n\r\n  getAssetTranslations(lang: string, assetFolderPath: string = 'assets/i18n/'): Observable<any> {\r\n    const path = assetFolderPath + lang + '.json';\r\n    return this.httpClient.get(path);\r\n  }\r\n\r\n  getDatabaseTranslations(lang: string): Observable<{ [key: string]: any }> {\r\n    // Simulating call to translation database\r\n    const databaseTranslations: { [key: string]: any } =\r\n    {\r\n      \"en\": {\r\n        \"TEST2\": {\r\n          \"TEST\": \"This is TEST2\"\r\n        }\r\n      },\r\n      \"fr\": {\r\n        \"TEST2\": {\r\n          \"TEST\": \"Ceci est TEST2\"\r\n        }\r\n      }\r\n    };\r\n\r\n    return of(databaseTranslations[lang]);\r\n  }\r\n\r\n  getDocumentTranslations(): Observable<any> {\r\n    const lang = this.selectedDocumentLanguage$.getValue() || this.defaultLanguage;\r\n    return this.documentTranslationProvider ? this.documentTranslationProvider(lang) : of(null);\r\n  }\r\n\r\n  // Set the language for the document displayed by the application (i.e Selection Navigator Emulator, Drawings,....)\r\n  setDocumentLanguage(lang: Language) {\r\n    this.selectedDocumentLanguage$.next(lang);\r\n  }\r\n\r\n  // Set the translation provider for the current document\r\n  setDocumentTranslationProvider(provider: (languague: Language) => Observable<any>) {\r\n    this.documentTranslationProvider = provider;\r\n  }\r\n\r\n  // Set the application language (UI)\r\n  setApplicationLanguage(lang: Language) {\r\n    this.selectedApplicationLanguage$.next(lang);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-81c0992f9d23ca61b8e6839b3f7f369c0b74eb52478a92cee48f05ecc37d483c3902ced27d38addc52bc40dc1bc0c74ab7518511c323560e4968ddbcb0aa2748",
            "file": "projects/main/src/app/core/user/user.service.ts",
            "properties": [
                {
                    "name": "authenticatedUserSubject$",
                    "defaultValue": "new BehaviorSubject<AuthenticatedUser | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [
                {
                    "name": "getAuthenticatedUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\r\nimport { InteractionStatus } from '@azure/msal-browser';\r\nimport { BehaviorSubject, filter, Subject, Subscription, takeUntil } from 'rxjs';\r\nimport { AuthenticatedUser } from './model/authenticated-user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService implements OnDestroy {\r\n  // Behaviour subject authenticatedUser\r\n  public authenticatedUserSubject$ = new BehaviorSubject<AuthenticatedUser | null>(null);\r\n\r\n  // Used for cleaning subscription \r\n  private subscription!: Subscription;\r\n\r\n  // Used for cleaning subscription \r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private http: HttpClient, private broadcastService: MsalBroadcastService, private msal: MsalService) { }\r\n\r\n  // Check if a user is already authenticated\r\n  // Add subscription to msal broadcast service to detect sucessful login\r\n  init() {\r\n    this.msal.handleRedirectObservable().subscribe();\r\n\r\n    this.getAuthenticatedUser();\r\n\r\n    this.broadcastService.inProgress$\r\n      .pipe(\r\n        filter((status: InteractionStatus) => status === InteractionStatus.None),\r\n        takeUntil(this.unsubscribe)\r\n      )\r\n      .subscribe((x) => {\r\n        this.getAuthenticatedUser();\r\n      });\r\n  }\r\n\r\n  // Retrieve the authenticated user from the id token\r\n  getAuthenticatedUser() {\r\n    const accounts = this.msal.instance.getAllAccounts();\r\n    if (accounts?.length) {\r\n      const account = accounts[0];\r\n      const user: AuthenticatedUser = {\r\n        id: account.idTokenClaims?.['oid'] as string || '',\r\n        userName: account.username,\r\n        name: account.name || '',\r\n        email: account.idTokenClaims?.['email'] as string ||'',\r\n        givenName: account.idTokenClaims?.['given_name'] as string ||'',\r\n        surname: account.idTokenClaims?.['family_name'] as string ||''\r\n      };\r\n      this.authenticatedUserSubject$.next(user);\r\n    }\r\n  } \r\n\r\n  getUserProfile() {\r\n    const graphMeEndpoint = \"https://graph.microsoft.com/v1.0/me\";\r\n\r\n    this.http.get<AuthenticatedUser>(graphMeEndpoint).subscribe((profile: AuthenticatedUser) => {\r\n      this.authenticatedUserSubject$.next(profile);\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "broadcastService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msal",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "broadcastService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msal",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "VersionPageService",
            "id": "injectable-VersionPageService-f2982dcb760b53089fbe00fa25c97570849b58cafa347e6bcb896244f3dde2c0268d60c8cf665e664753c36e2424d5a1631e7fd021e88e5442523018b6daaeb3",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/services/version-page.service.ts",
            "properties": [
                {
                    "name": "cleanningAnomalies$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "creatingVersion$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "document$",
                    "defaultValue": "new BehaviorSubject<BaseDocument | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<BaseDocument | null>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "documentCreated$",
                    "defaultValue": "new Subject<BaseDocument>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<BaseDocument>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "documentReferenceUpdated$",
                    "defaultValue": "new Subject<{ id: string, reference: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "documentRenamed$",
                    "defaultValue": "new Subject<{ id: string, name: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "documentUrl",
                    "defaultValue": "environment.baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "importableDocument$",
                    "defaultValue": "new BehaviorSubject<BaseDocument | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<BaseDocument | null>",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "importableVersion$",
                    "defaultValue": "new BehaviorSubject<TVersion | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TVersion | null>",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "importableVersions$",
                    "defaultValue": "new BehaviorSubject<BaseVersionLite[] | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<[] | null>",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "NAVIGATION_MODE_DATA",
                    "defaultValue": "'NAVIGATIONMODEDATA'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "version$",
                    "defaultValue": "new BehaviorSubject<TVersion | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TVersion | null>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "versionComparison$",
                    "defaultValue": "new BehaviorSubject<TVersionComparison | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TVersionComparison | null>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "versionRenamed$",
                    "defaultValue": "new Subject<{ documentId: string, id: string, label: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "versions$",
                    "defaultValue": "new BehaviorSubject<TVersion[] | []>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<[] | >",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "versionUrl",
                    "defaultValue": "environment.baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methods": [
                {
                    "name": "calculateRevisionLevel",
                    "args": [
                        {
                            "name": "document",
                            "type": "BaseDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "releaseDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isPublished",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 516,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "document",
                            "type": "BaseDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "releaseDate",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isPublished",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 541,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        128
                    ]
                },
                {
                    "name": "cloneValues",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sourceVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sourceVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cloneVersion",
                    "args": [
                        {
                            "name": "sourceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 290,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sourceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "compareVersions",
                    "args": [
                        {
                            "name": "versionId1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionId2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TVersionComparison | null>",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "versionId1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionId2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "computeVersionId",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 373,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertRevisionLevelToLetter",
                    "args": [
                        {
                            "name": "revisionLevel",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 525,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "revisionLevel",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDocument",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDocumentAndVersion",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionLabel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "documentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "documentReference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionLabel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "documentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "documentReference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createVersion",
                    "args": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllVersions",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<[] | >",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentStatusFromWorkflow",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 431,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocumentById",
                    "args": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | null>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "documentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocumentByProductId",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | null>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocumentByProductIdAndName",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | null>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHelpText",
                    "args": [
                        {
                            "name": "helpInfoKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type | undefined>",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "helpInfoKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getImportableVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TVersion | null>",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValues",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any[]>",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TVersion | null>",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVersionChangeHistory",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<BaseVersionChangeHistory>",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVersionsByProductId",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<[] | null>",
                    "typeParameters": [],
                    "line": 458,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pollForMatchingValues",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 334,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sourceValuesLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reassignTicket",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 481,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ticketId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renameDocument",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renameVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 502,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetWorkflow",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setVersionOffset",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "versionOffset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 468,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "versionOffset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setVersionStatuses",
                    "args": [
                        {
                            "name": "variantsStatus",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 419,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "variantsStatus",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "synchronizeWithVersion",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "synchWithVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 406,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "synchWithVersionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDocumentReference",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "reference",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { BaseVersion } from '../models/base-version.model';\r\nimport { BaseVersionComparison } from '../models/version-comparison.model';\r\nimport { BehaviorSubject, catchError, filter, interval, map, mergeMap, Observable, of, retry, Subject, switchMap, take, takeWhile, tap, throwError } from 'rxjs';\r\nimport { BaseDocument } from '../models/document.model';\r\nimport { BaseVersionLite } from '../models/version-lite.model';\r\nimport { environment } from '../../../../../../../environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BaseVersionChangeHistory } from '../models/version-change-history.model';\r\nimport helpInfoKeys from '../../../../settings/help/helpInfoKeys';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport abstract class VersionPageService<TVersion extends BaseVersion, TVersionComparison extends BaseVersionComparison> {\r\n\r\n  // Lite observable for presenting informations about all version (exclude FeatureOptions)\r\n  document$: BehaviorSubject<BaseDocument | null> = new BehaviorSubject<BaseDocument | null>(null);;\r\n\r\n  // Selected Feature List Version\r\n  version$: BehaviorSubject<TVersion | null> = new BehaviorSubject<TVersion | null>(null);\r\n\r\n  // List of all the version available for the document\r\n  versions$: BehaviorSubject<TVersion[] | []> = new BehaviorSubject<TVersion[] | []>([]);\r\n\r\n  // Selected Feature List Version Comparison\r\n  versionComparison$: BehaviorSubject<TVersionComparison | null> = new BehaviorSubject<TVersionComparison | null>(null);\r\n\r\n  // Emits whenever a new document is created\r\n  documentCreated$: Subject<BaseDocument> = new Subject<BaseDocument>();\r\n\r\n  // Emits whenever a document is renamed\r\n  documentRenamed$: Subject<{ id: string, name: string }> = new Subject<{ id: string, name: string }>();\r\n\r\n  // Emits whenever a version is renamed\r\n  versionRenamed$: Subject<{ documentId: string, id: string, label: string }> = new Subject<{ documentId: string, id: string, label: string }>();\r\n\r\n  // Emits whenever a document reference is updated\r\n  documentReferenceUpdated$: Subject<{ id: string, reference: string }> = new Subject<{ id: string, reference: string }>();\r\n\r\n  // Document selected for import\r\n  importableDocument$: BehaviorSubject<BaseDocument | null> = new BehaviorSubject<BaseDocument | null>(null);\r\n\r\n  // List of versions for import\r\n  importableVersions$: BehaviorSubject<BaseVersionLite[] | null> = new BehaviorSubject<BaseVersionLite[] | null>(null);\r\n\r\n  // Version selected for import\r\n  importableVersion$: BehaviorSubject<TVersion | null> = new BehaviorSubject<TVersion | null>(null);\r\n\r\n  // Document versions endpoint\r\n  protected versionUrl = environment.baseUrl;\r\n  protected documentUrl = environment.baseUrl;\r\n\r\n  // Indicate that a version is in the process of being created\r\n  creatingVersion$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  // Indicate that a anomaly cleanup process is running\r\n  cleanningAnomalies$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  // The local storage key for navigation data\r\n  NAVIGATION_MODE_DATA = 'NAVIGATIONMODEDATA';\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    @Optional() @Inject({}) type: string) {\r\n    this.versionUrl += type + '-versions';\r\n    this.documentUrl += type + '-documents';\r\n  }\r\n\r\n  // Get the document by  id\r\n  // Using protected to force the derived class to implement a non generic function\r\n  // So that the consumer of the service do not need to worry about the type implementation\r\n  protected getDocumentById<T extends BaseDocument>(documentId: string): Observable<T | null> {\r\n    const url = `${this.documentUrl}/${documentId}`;\r\n    return this.http.get<T>(url).pipe(tap(x => {\r\n      this.document$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Get the document by product id\r\n  // Using protected to force the derived class to implement a non generic function\r\n  // So that the consumer of the service do not need to worry about the type implementation\r\n  protected getDocumentByProductId<T extends BaseDocument>(productId: string): Observable<T | null> {\r\n    const url = `${this.documentUrl}?productId=${productId}`;\r\n    return this.http.get<T>(url).pipe(tap(x => {\r\n      this.document$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Get the document by product id and name\r\n  // Using protected to force the derived class to implement a non generic function\r\n  // So that the consumer of the service do not need to worry about the type implementation\r\n  protected getDocumentByProductIdAndName<T extends BaseDocument>(productId: string, name: string): Observable<T | null> {\r\n    const url = `${this.documentUrl}?productId=${productId}&name=${name}`;\r\n    return this.http.get<T>(url).pipe(tap(x => {\r\n      this.document$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Get the version by id\r\n  // Using protected to force the derived class to implement a non generic function\r\n  // So that the consumer of the service do not need to worry about the type implementation\r\n  protected getVersion(id: string): Observable<TVersion | null> {\r\n    // Compute the version Id\r\n    const computedId = this.computeVersionId(id);\r\n\r\n    if (!computedId)\r\n      return of(null).pipe(tap(x => { this.version$.next(null); }));\r\n\r\n    const url = `${this.versionUrl}/${computedId}`;\r\n    return this.http.get<TVersion>(url).pipe(tap(x => {\r\n      this.version$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Get all versions by product id\r\n  getAllVersions(productId: string): Observable<TVersion[] | []> {\r\n    const url = `${this.versionUrl}/active-and-released-versions?productId=${productId}`;\r\n    return this.http.get<TVersion[]>(url).pipe(tap(x => {\r\n      this.versions$.next(x);\r\n    }));\r\n  }\r\n\r\n  // Get the importable version by id\r\n  // Using protected to force the derived class to implement a non generic function\r\n  // So that the consumer of the service do not need to worry about the type implementation\r\n  protected getImportableVersion(id: string): Observable<TVersion | null> {\r\n    // Compute the version Id\r\n    const computedId = this.computeVersionId(id);\r\n\r\n    if (!computedId)\r\n      return of(null).pipe(tap(x => { this.importableVersion$.next(null); }));\r\n\r\n    const url = `${this.versionUrl}/${computedId}`;\r\n    return this.http.get<TVersion>(url).pipe(tap(x => {\r\n      this.importableVersion$.next(x);\r\n    }));\r\n  }\r\n\r\n  // FB : protected ?\r\n  compareVersions(versionId1: string, versionId2: string): Observable<TVersionComparison | null> {\r\n    const url = `${this.versionUrl}/${versionId1}/compare-to-version?versionId=${versionId2}`;\r\n    return this.http.get<TVersionComparison>(url, httpOptions).pipe(tap(x => {\r\n      this.versionComparison$.next(x);\r\n    }));\r\n  }\r\n\r\n  //compareVersionToLatest(versionId: string): Observable<TVersionComparison | null> {\r\n  //  const url = `${this.versionUrl}/${versionId}/compare-to-latest`;\r\n  //  return this.http.get<TVersionComparison>(url, httpOptions).pipe(tap(x => {\r\n  //    this.versionComparison$.next(x);\r\n  //  }));\r\n  //}\r\n\r\n  getVersionChangeHistory(id: string): Observable<BaseVersionChangeHistory> {\r\n    const url = `${this.versionUrl}/${id}/change-history`;\r\n    return this.http.get<BaseVersionChangeHistory>(url);\r\n  }\r\n\r\n  // // Retrieve the workflow for the selected version\r\n  // getVersionWorkflow(id: string): Observable<any> {\r\n  //   const url = `${this.versionUrl}/${id}/workflow`;\r\n  //   return this.http.get<VersionWorkflow>(url);\r\n  // }\r\n\r\n  // // Activate workflow transition, validate transition is successful and update version statuses\r\n  // activateTransition(id: string, transitionId: string, workflowVariants: { id: string, stepId: string }[], steps: WorkflowStep[], variantId?: string): Observable<any> {\r\n  //   const url = `${this.versionUrl}/${id}/workflow/transition`;\r\n  //   const payload = variantId?.length ? { transitionId, variantId } : { transitionId };\r\n\r\n  //   let variants = workflowVariants;\r\n  //   return this.http.post(url, payload, httpOptions).pipe(\r\n  //     // Get Version workflow\r\n  //     mergeMap((value) => this.getVersionWorkflow(id).pipe(\r\n  //       tap(x => {\r\n  //         variants = x.variants;\r\n  //       }),\r\n  //       // Validate pre transition workflow variants with latest workflow variants. If same then repeat get request after every 3 seconds delay\r\n  //       repeatWhen((notifications) => notifications.pipe(\r\n  //         takeWhile(() => JSON.stringify(workflowVariants) === JSON.stringify(variants))\r\n  //       )\r\n  //       ),\r\n  //       timeout(60000),\r\n  //       delay(3000),\r\n  //       finalize(() => {\r\n  //         const version = this.version$.getValue();\r\n  //         // Based on latest variants after transition, compute new statuses for version\r\n  //         const newVersionStatuses = this.getNewVersionStatuses(variants, steps);\r\n  //         if (version) {\r\n  //           newVersionStatuses.forEach(variantStatus => {\r\n  //             version.statuses[variantStatus.id] = variantStatus.status;\r\n  //           });\r\n\r\n  //           this.version$.next(version);\r\n  //         }\r\n  //       })\r\n  //     ))\r\n  //   );\r\n  // }\r\n\r\n  resetWorkflow(id: string): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/reset-workflow`;\r\n    const payload = { };\r\n    return this.http.post(url, payload, httpOptions);\r\n  }\r\n\r\n  // // Get new version statuses based on transition to set into version\r\n  // getNewVersionStatuses(variants: { id: string, stepId: string }[], steps: WorkflowStep[]): { id: string, status: string }[] {\r\n  //   const statuses: { id: string, status: string }[] = [];\r\n\r\n  //   variants.forEach(variant => {\r\n  //     const step = steps.find(x => x.id === variant.stepId);\r\n  //     if (step)\r\n  //       statuses.push({ id: variant.id, status: step.status?.name as string });\r\n  //   });\r\n\r\n  //   return statuses;\r\n  // }\r\n\r\n  createDocumentAndVersion(productId: string, parentId: string, ticketId: string, versionLabel: string, documentName?: string, documentReference?: string): Observable<any> {\r\n    return this.createDocument(productId, parentId, documentName, documentReference).pipe(\r\n      mergeMap(docId => this.http.get<BaseDocument>(`${this.documentUrl}/${docId}`).pipe(\r\n        retry(),\r\n        mergeMap(() => this.createVersion(docId, ticketId, versionLabel))\r\n      ))\r\n    );\r\n  }\r\n\r\n  createDocument(productId: string, parentId: string, name?: string, reference?: string): Observable<any> {\r\n    const url = `${this.documentUrl}`;\r\n    const payload = { productId, parentId, name, reference };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      this.documentCreated$.next({ id: x, productId, parentId, name, reference, admin: false } as BaseDocument);\r\n    }));\r\n  }\r\n\r\n  renameDocument(id: string, name: string): Observable<any> {\r\n    const url = `${this.documentUrl}/${id}/change-name`;\r\n    const payload = { name };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      this.documentRenamed$.next({ id, name });\r\n      \r\n      // Reemit document with new name\r\n      const document = this.document$.getValue();\r\n      if (document)\r\n        document.name = name;\r\n      this.document$.next(document);\r\n    }));\r\n  }\r\n\r\n  updateDocumentReference(id: string, reference: string): Observable<any> {\r\n    const url = `${this.documentUrl}/${id}/change-reference`;\r\n    const payload = { reference };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      this.documentReferenceUpdated$.next({ id, reference });\r\n\r\n      // Reemit document with new reference\r\n      const document = this.document$.getValue();\r\n      if (document)\r\n        document.reference = reference;\r\n      this.document$.next(document);\r\n    }));\r\n  }\r\n\r\n  createVersion(documentId: string, ticketId: string, label: string): Observable<string> {\r\n    const url = `${this.versionUrl}`;\r\n    const payload = { documentId, ticketId, label };\r\n    this.creatingVersion$.next(true);\r\n\r\n    return this.http.post<string>(url, payload, httpOptions).pipe(\r\n      tap(id => {\r\n        // Add to the list of versions in the document\r\n        const document = this.document$.getValue();\r\n        document?.versions.push(new BaseVersionLite(id, label, ticketId));\r\n        this.document$.next(document);\r\n      }),\r\n      mergeMap(id => this.http.get<TVersion>(`${this.versionUrl}/${id}`).pipe(\r\n        retry(),\r\n        map(() => id),\r\n        tap(() => this.creatingVersion$.next(false)),\r\n        catchError(() => { this.creatingVersion$.next(false); return of('Timeout Error'); })\r\n      ))\r\n    );\r\n  }\r\n\r\n  cloneVersion(sourceId: string, ticketId: string, label: string): Observable<string> {\r\n    const url = `${this.versionUrl}/clone`;\r\n    const payload = { sourceId, ticketId, label };\r\n    this.creatingVersion$.next(true);\r\n  \r\n    return this.http.post<string>(url, payload, httpOptions).pipe(\r\n      tap(id => {\r\n        // Add to the list of versions in the document\r\n        const document = this.document$.getValue();\r\n        document?.versions.push(new BaseVersionLite(id, label, ticketId));\r\n        this.document$.next(document);\r\n      }),\r\n      switchMap(id =>\r\n        interval(10000).pipe(\r\n          take(10),\r\n          mergeMap(() =>\r\n            this.http.get<TVersion>(`${this.versionUrl}/${id}`).pipe(\r\n              catchError(response => of(false))\r\n            )\r\n          ),\r\n          filter(response => !!response),\r\n          map(() => id),\r\n          tap(() => this.creatingVersion$.next(false)),\r\n          catchError(() => {\r\n            this.creatingVersion$.next(false);\r\n            return of('Clone Failed after 10 retries');\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  cloneValues(id: string, sourceVersionId: string, sourceValuesLength: number = 0): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/clone/values`;\r\n    const payload = { sourceVersionId };\r\n    this.creatingVersion$.next(true);\r\n\r\n    return this.http.post(url, payload, httpOptions)\r\n      .pipe(\r\n        catchError(() => { this.creatingVersion$.next(false); return of(null); }),\r\n        switchMap(() => this.pollForMatchingValues(id, sourceValuesLength))\r\n      );\r\n  }\r\n\r\n  pollForMatchingValues(id: string, sourceValuesLength: number): Observable<any> {\r\n    if (!id || id === 'Timeout Error')\r\n      return throwError('id cannot be null');\r\n\r\n    let retries = 0;\r\n\r\n    return interval(10000).pipe(\r\n      takeWhile(() => retries < 10), // Limit retries to 10\r\n      mergeMap(() =>\r\n        this.getValues(id).pipe(\r\n          catchError(err => {\r\n            retries++;\r\n            return of(null);\r\n          })\r\n        )\r\n      ),\r\n      filter(values => sourceValuesLength === values?.length),\r\n      tap(() => this.creatingVersion$.next(false)),\r\n      catchError(err => {\r\n        this.creatingVersion$.next(false);\r\n\r\n        // Handle other errors or retries reaching limit\r\n        if (retries === 10)\r\n          return throwError('Maximum retries reached for getValues');\r\n        else\r\n          return throwError(err); // Re-throw other errors\r\n      })\r\n    );\r\n  }\r\n\r\n  getValues(id: string): Observable<any[]> {\r\n    if (!id || id == 'Timeout Error')\r\n      return throwError('id cannot be null');\r\n\r\n    const url = `${this.versionUrl}/${id}/values`;\r\n    return this.http.get<any[]>(url);\r\n  }\r\n\r\n\r\n  computeVersionId(id: string): string | undefined {\r\n    let computedId: string | undefined = id;\r\n    if (computedId === 'default') {\r\n      // Retrieve the document and the product id\r\n      const document = this.document$.getValue();\r\n      const productId = document?.productId || '';\r\n      // Retrieve the navigation mode from the localStorage\r\n      const navigationData = JSON.parse(localStorage.getItem(this.NAVIGATION_MODE_DATA) || '{}');\r\n      const productNavigationData = navigationData[productId] || { mode: 'latest' };\r\n      if (productNavigationData.mode === 'latest') {\r\n        // Return latest published version if one exists, otherwise return latest created one\r\n        // If version is not found, return null\r\n        const latestId = document?.versions.find(x => x.isLatestReleased)?.id;\r\n        computedId = latestId || document?.versions[document?.versions.length - 1]?.id;\r\n      } else if (productNavigationData.mode === 'ticket') {\r\n        // Return version associated with the ticket if one exists\r\n        // Otherwise, return the version valid for that ticket\r\n        // If version is not found, return null\r\n        const versionIdForTicket = document?.versions.find(x => x.ticketId === productNavigationData.data.id)?.id;\r\n\r\n        // Check if ticket is released\r\n        const dateLimit = productNavigationData.data.releaseDate ?? new Date();\r\n        // Find versions before release or creation\r\n        const releases = document?.versions.filter(x => !!x.publishedOn && new Date(x.publishedOn) < new Date(dateLimit));\r\n\r\n        computedId = versionIdForTicket ||\r\n          releases?.sort((a, b) => (a.publishedOn < b.publishedOn) ? -1 : (a.publishedOn === b.publishedOn) ? 0 : 1)[releases?.length - 1]?.id ||\r\n          'error';\r\n      }\r\n    }\r\n    return computedId;\r\n  }\r\n\r\n  synchronizeWithVersion(id: string, synchWithVersionId: string) {\r\n    const url = `${this.versionUrl}/${id}/synch-with-version`;\r\n    const payload = { synchWithVersionId };\r\n    return this.http.post<string>(url, payload, httpOptions).pipe(tap(x => {\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        version.synchedWithVersionId = synchWithVersionId;\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Update variant status in version after successful transition has taken place\r\n  setVersionStatuses(variantsStatus: { id: string, status: string }[]) {\r\n    const version = this.version$.getValue();\r\n    if (version) {\r\n      variantsStatus.forEach(variantStatus => {\r\n        version.statuses[variantStatus.id] = variantStatus.status;\r\n      });\r\n\r\n      this.version$.next(version);\r\n    }\r\n  }\r\n\r\n  // Get current status of global/variant from workflow by id\r\n  getCurrentStatusFromWorkflow(id: string): string {\r\n    const version = this.version$.getValue();\r\n    return version?.statuses?.[id] || '';\r\n  }\r\n\r\n  // Retrieve the help text for the helpInfoKey\r\n  getHelpText(helpInfoKey?: string): Observable<{ title: string, content: string } | undefined> {\r\n    if (!helpInfoKey)\r\n      return of(undefined)\r\n\r\n    // Retrieve the id of the help document\r\n    const helpDocumentVersionId = helpInfoKeys[helpInfoKey];\r\n\r\n    if (!helpDocumentVersionId)\r\n      return of(undefined)\r\n\r\n    // Retrieve the help text from the documentation module\r\n    const url = `${environment.baseUrl}document-versions/${helpDocumentVersionId}`;\r\n\r\n    // Return the help document\r\n    return this.http.get<any>(url).pipe(\r\n      map(x => ({ title: x.title, content: x.content })),\r\n      catchError(error => of(undefined))\r\n    );\r\n  }\r\n\r\n  // Retrieve the list of versions that can be imported from\r\n  getVersionsByProductId(productId: string, name: string): Observable<BaseVersionLite[] | null> {\r\n    const url = `${this.documentUrl}?productId=${productId}&name=${name}`;\r\n    return this.http.get<BaseDocument>(url).pipe(\r\n      tap(doc => { this.importableDocument$.next(doc); }),\r\n      map(doc => doc.versions),\r\n      tap(versions => { this.importableVersions$.next(versions); })\r\n    );\r\n  }\r\n\r\n  // Set version offset\r\n  setVersionOffset(id: string, versionOffset: number): Observable<any> {\r\n    const url = `${this.documentUrl}/${id}/change-version-offset`;\r\n    const payload = { versionOffset };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      // Reemit document with updated details\r\n      const document = this.document$.getValue();\r\n      if (document)\r\n        document.versionOffset = versionOffset;\r\n      this.document$.next(document);\r\n    }));\r\n  }\r\n\r\n  // Reassign ticket\r\n  reassignTicket(id: string, ticketId: string): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/reassign-ticket`;\r\n    const payload = { ticketId };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      // Reemit version with updated ticket\r\n      const version = this.version$.getValue();\r\n      if (version)\r\n        version.ticketId = ticketId;\r\n\r\n      const document = this.document$.getValue();\r\n      if (document) {\r\n        const documentVersion = document.versions.find(v => v.id == id);\r\n        if (documentVersion)\r\n          documentVersion.ticketId = ticketId\r\n\r\n        this.document$.next(document);\r\n      }\r\n      this.version$.next(version);\r\n    }));\r\n  }\r\n\r\n  renameVersion(id: string, label: string): Observable<any> {\r\n    const url = `${this.versionUrl}/${id}/change-label`;\r\n    const payload = { label };\r\n    return this.http.post(url, payload, httpOptions).pipe(tap(x => {\r\n      // Reemit version with new name\r\n      const version = this.version$.getValue();\r\n      if (version) {\r\n        this.versionRenamed$.next({ documentId: version.documentId, id, label });\r\n        version.label = label;\r\n        this.version$.next(version);\r\n      }\r\n    }));\r\n  }\r\n\r\n  calculateRevisionLevel(document: BaseDocument, releaseDate: Date, isPublished: boolean): number {\r\n    // Calculate revision level\r\n    const targetDate = isPublished ? releaseDate : new Date();\r\n    const publishedVersionsBeforeTargetDate = document.versions.filter(version => version.isPublished && new Date(version.publishedOn) < new Date(targetDate));\r\n    return publishedVersionsBeforeTargetDate.length + (+document.versionOffset || 0) + 1;\r\n  }\r\n\r\n  // Helper method to convert revision level to revision letter\r\n  // Using rev \"-\" as the first revision\r\n  convertRevisionLevelToLetter(revisionLevel: number): string {\r\n    if (revisionLevel === 1)\r\n      return \"-\";\r\n\r\n    revisionLevel -= 1;\r\n\r\n    var temp, letter = '';\r\n    while (revisionLevel > 0) {\r\n      temp = (revisionLevel - 1) % 26;\r\n      letter = String.fromCharCode(temp + 65) + letter;\r\n      revisionLevel = (revisionLevel - temp - 1) / 26;\r\n    }\r\n    return letter;\r\n  }\r\n\r\n  // Used to clear data when selecting a new version\r\n  abstract clearData(): void;\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "ChangeRequestListResolverService",
            "id": "injectable-ChangeRequestListResolverService-01e773edfd8ab6bec31d72d29d0345e866aa79de56525a5c9d395f95b49b3132252f1a511c9aa877cf129e210181921f62c41329bd9e668e1f8b169271763762",
            "file": "projects/main/src/app/features/work/change-management/route-resolvers/change-request-list-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ChangeRequest[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { EMPTY, mergeMap, Observable, of, take } from 'rxjs';\r\nimport { ChangeRequest } from '../shared/models/change-request.model';\r\nimport { PLMService } from '../shared/plm.service';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChangeRequestListResolverService implements Resolve<ChangeRequest[]> {\r\n\r\n  constructor(private plmService: PLMService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ChangeRequest[]>   {\r\n \r\n    return this.plmService.getChangeRequests().pipe(\r\n      take(1),\r\n      mergeMap(changeRequests => {\r\n        if (changeRequests) {\r\n          return of(changeRequests);\r\n        } else {\r\n          this.router.navigate(['/home']);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "DimensionListResolverService",
            "id": "injectable-DimensionListResolverService-7cf8c519bc744019e05a0771edc2c364390f790acf09e8f4325507e6efbd888c1880a3a379f38c21d0aec64d9f526be41e5314c7c1623f8ce9d9aaa3981a70fc",
            "file": "projects/main/src/app/features/products/route-resolvers/dimension-list-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { EMPTY, mergeMap, Observable, of, take } from 'rxjs';\r\nimport { DimensionService } from '../shared/dimension.service';\r\nimport { DimensionList } from '../shared/models/dimensions/dimension-list.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DimensionListResolverService implements Resolve<DimensionList> {\r\n\r\n  constructor(private dimensionService: DimensionService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<DimensionList> | Observable<never> {\r\n    return this.dimensionService.getDimensions().pipe(\r\n      take(1),\r\n      mergeMap(dimensionList => {\r\n        if (dimensionList) {\r\n          return of(dimensionList);\r\n        } else {\r\n          this.router.navigate(['/home']);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dimensionService",
                        "type": "DimensionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "dimensionService",
                        "type": "DimensionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "FactoriesResolverService",
            "id": "injectable-FactoriesResolverService-9db3a8d99a01e355ce2b49d99fbe310fe86fb58840eb8cdb618284ee3181dfe726daf424cee92585494bb95f4aa8bb9623909dcdfbef0e30591cd85d3c3ce646",
            "file": "projects/main/src/app/features/products/features/route-resolvers/factories-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, EMPTY, of } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nimport { FeatureListService } from '../shared/feature-list.service';\r\nimport { FeatureFactoryList } from '../shared/models/feature-factory-list.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FactoriesResolverService implements Resolve<FeatureFactoryList | null> {\r\n\r\n  constructor(private featureListService: FeatureListService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureFactoryList | null> | Observable<never> {\r\n    const versionId = route.paramMap.get('versionId') || '';\r\n\r\n    return this.featureListService.getFactories(versionId).pipe(\r\n      take(1),\r\n      mergeMap(factories => {\r\n          return of(factories);\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "FactoryListResolverService",
            "id": "injectable-FactoryListResolverService-de656c363ad8de2c793c72aa9604d99e60698be9881719d7608ba4ea4d62174ce1db4989a2d27112fc6c22867e7990394f8e1e8c68d9ed143536ec04bb6ea57f",
            "file": "projects/main/src/app/features/products/route-resolvers/factory-list-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { EMPTY, mergeMap, Observable, of, take } from 'rxjs';\r\nimport { FactoryService } from '../shared/factory.service';\r\nimport { Factory } from '../shared/models/factory/factory.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FactoryListResolverService implements Resolve<Factory[]> {\r\n\r\n  constructor(private factoryService: FactoryService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Factory[]> | Observable<never> {\r\n    return this.factoryService.getFactories().pipe(\r\n      take(1),\r\n      mergeMap(factoryList => {\r\n        if (factoryList) {\r\n          return of(factoryList);\r\n        } else {\r\n          this.router.navigate(['/home']);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "factoryService",
                        "type": "FactoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "factoryService",
                        "type": "FactoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "FeatureListDocumentResolverService",
            "id": "injectable-FeatureListDocumentResolverService-778b44349ba9ca5f414dd184eacfa651557e845ce2a688355c647e49e7638230ebaa7851c195a89a42a0cf0d9b85337f6cc913b2df6bd94331c25147643cd679",
            "file": "projects/main/src/app/features/products/features/route-resolvers/feature-list-document-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, EMPTY, of } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { FeatureListService } from '../shared/feature-list.service';\r\nimport { BaseDocument } from '../../shared/components/version-page-template/models/document.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeatureListDocumentResolverService implements Resolve<BaseDocument> {\r\n\r\n  constructor(private featureListService: FeatureListService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<BaseDocument> | Observable<never> {\r\n    const productId = route.parent?.parent?.paramMap.get(\"id\") || '';\r\n\r\n    return this.featureListService.getFeatureListDocumentByProductId(productId).pipe(\r\n      take(1),\r\n      mergeMap(document => {\r\n        if (document) {\r\n          return of(document);\r\n        } else {\r\n          this.router.navigate(['/products', productId]);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "FeatureListRuleSetResolverService",
            "id": "injectable-FeatureListRuleSetResolverService-33494f0127a658d9d181d2dd026f665c9709e2d4e83e74f73134a42f07bfdb2dfce05a47ac2456df2012a3ce561e42a0da9404f89b4865e51459389ed52dcbcd",
            "file": "projects/main/src/app/features/products/features/route-resolvers/feature-list-rule-set-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FeatureRuleSet | null>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { FeatureListService } from '../shared/feature-list.service';\r\nimport { FeatureRuleSet } from '../shared/models/feature-ruleset.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport abstract class FeatureListRuleSetResolverService implements Resolve<FeatureRuleSet | null> {\r\n\r\n  constructor(private featureListService: FeatureListService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<FeatureRuleSet | null> {\r\n    const versionId = route.paramMap.get('versionId') || '';\r\n\r\n    return this.featureListService.getRuleSet(versionId).pipe(\r\n      take(1),\r\n      mergeMap(version => {\r\n        return of(version);\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "FeatureListVersionResolverService",
            "id": "injectable-FeatureListVersionResolverService-60282fa856ac5639eb30aa43ade0c284dafc67a2a46ce20c63fc8b1708fa8125f76e976f84fb298b371fdf9e6cd76251ee155fd024dafd5c0f05e3766c4b83d1",
            "file": "projects/main/src/app/features/products/features/route-resolvers/feature-list-version-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, EMPTY, of } from 'rxjs';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\n\r\nimport { FeatureListService } from '../shared/feature-list.service';\r\nimport { FeatureListVersion } from '../shared/models/feature-list-version.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeatureListVersionResolverService implements Resolve<FeatureListVersion | null> {\r\n\r\n  constructor(private featureListService: FeatureListService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureListVersion | null> | Observable<never> {\r\n    const productId = route.parent?.parent?.parent?.paramMap.get(\"id\") || '';\r\n    const versionId = route.paramMap.get('versionId') || '';\r\n\r\n    return this.featureListService.getFeatureListVersion(versionId).pipe(\r\n      take(1),\r\n      mergeMap(version => {\r\n          return of(version);\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "MenuResolverService",
            "id": "injectable-MenuResolverService-19a4c9e22ba323306168e96fa948142c3bd3c09133f3c74865faf054cb4416a5f056998c044033e026c88c09d91caf8f1b07a55155a6be055a9eaf0fe6307b45",
            "file": "projects/main/src/app/features/products/route-resolvers/menu-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type | null>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { EMPTY, mergeMap, Observable, of, take } from 'rxjs';\r\nimport { ProductMenuItem } from '../shared/models/menu/product-menu-item.model';\r\nimport { ProductMenuService } from '../shared/product-menu.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuResolverService implements Resolve<{ [key: string]: ProductMenuItem[] } | null> {\r\n\r\n  constructor(private menuService: ProductMenuService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<{ [key: string]: ProductMenuItem[] } | null> {\r\n    const id = route.paramMap.get('id') || '';\r\n    return this.menuService.getMenu(id).pipe(\r\n      take(1),\r\n      mergeMap(menu => {\r\n        if (menu) {\r\n          return of(menu);\r\n        } else {\r\n          this.router.navigate(['/home']);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "menuService",
                        "type": "ProductMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "menuService",
                        "type": "ProductMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "ProductListResolverService",
            "id": "injectable-ProductListResolverService-9166acc363cbae3d3abcf1e9fda127729d6d849a9a5fd9799cf84c1019a8332c1aa2889d940c74b94df36deeb8525691402d41866dfdf89ae23b9ebe1df072f7",
            "file": "projects/main/src/app/features/products/route-resolvers/product-list-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { EMPTY, mergeMap, Observable, of, take } from 'rxjs';\r\nimport { Product } from '../shared/models/product/product.model';\r\nimport { ProductService } from '../shared/product.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductListResolverService implements Resolve<Product[]> {\r\n\r\n  constructor(private productService: ProductService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product[]> | Observable<never> {\r\n    return this.productService.getProducts().pipe(\r\n      take(1),\r\n      mergeMap(productList => {\r\n        if (productList) {\r\n          return of(productList);\r\n        } else {\r\n          this.router.navigate(['/home']);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "ProductResolverService",
            "id": "injectable-ProductResolverService-779cf1802160fef2200107dd8a8340d414c830b9de3d4ce3f5b36b0ed9d8c27477db3f2b2eb7ec7e77af07390c7854e081925de27b405fdf55149c074ccd13b2",
            "file": "projects/main/src/app/features/products/route-resolvers/product-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { EMPTY, mergeMap, Observable, of, take } from 'rxjs';\r\nimport { Product } from '../shared/models/product/product.model';\r\nimport { ProductService } from '../shared/product.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductResolverService implements Resolve<Product> {\r\n\r\n  constructor(private productService: ProductService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product> | Observable<never> {\r\n    const id = route.paramMap.get('id') || '';\r\n    return this.productService.getProduct(id).pipe(\r\n      take(1),\r\n      mergeMap(product => {\r\n        if (product) {\r\n          return of(product);\r\n        } else {\r\n          this.router.navigate(['/home']);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "WorkItemListResolverService",
            "id": "injectable-WorkItemListResolverService-f79dbeaf17f84843e50feb3deb7cd93a96e529b0dd0f86119034060431585cd5243e1ffc3a2a1f8705fcdd2bb553c74f05aa9f9051bc4cd05cfa6779d9a8cd21",
            "file": "projects/main/src/app/features/work/change-management/route-resolvers/work-item-list-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<WorkItem[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { EMPTY, mergeMap, Observable, of, take } from 'rxjs';\r\nimport { WorkItem } from '../shared/models/work-item.model';\r\nimport { PLMService } from '../shared/plm.service';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WorkItemListResolverService implements Resolve<WorkItem[]> {\r\n\r\n  constructor(private plmService: PLMService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<WorkItem[]>   {\r\n \r\n    return this.plmService.getWorkItems().pipe(\r\n      take(1),\r\n      mergeMap(workItems => {\r\n        if (workItems) {\r\n          return of(workItems);\r\n        } else {\r\n          this.router.navigate(['/home']);\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "BaseVersionLite",
            "id": "class-BaseVersionLite-beb21016207df66d15e8a06bde35a5463c61e57c3c62cb3b5ab30f369699aacb4dbb7472410c96e4a67eee1cf727f6c080cdddcc5b935cd225e50417fbeea731",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/models/version-lite.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class BaseVersionLite {\r\n  id: string;\r\n  ticketId: string;\r\n  label: string;\r\n  branchedFromVersionId: string;\r\n  synchedWithVersionId: string;\r\n  deleted: boolean;\r\n  isPublished: boolean;\r\n  publishedBy!: { id: string, fullName: string };\r\n  publishedOn!: Date;\r\n  isLatestReleased: boolean;\r\n\r\n  constructor(id: string, label: string, ticketId: string, branchedFromVersionId = '00000000-0000-0000-0000-000000000000') {\r\n    this.id = id;\r\n    this.label = label;\r\n    this.ticketId = ticketId;\r\n    this.branchedFromVersionId = branchedFromVersionId;\r\n    this.synchedWithVersionId = this.branchedFromVersionId;\r\n    this.deleted = false;\r\n    this.isPublished = false;\r\n    this.isLatestReleased = false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "label",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ticketId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "branchedFromVersionId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "'00000000-0000-0000-0000-000000000000'"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "label",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ticketId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "branchedFromVersionId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "'00000000-0000-0000-0000-000000000000'",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "branchedFromVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "deleted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isLatestReleased",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isPublished",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "publishedBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "publishedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "synchedWithVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "ticketId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CustomTranslationLoader",
            "id": "class-CustomTranslationLoader-1cafc5a6fa9d993b79dc43771a2d6ffbbd5588babde80d686f4097261f5051088a37b625d7e08c76b6138f88733721ca2729bd9056ad1b99d1f1fcbd4831318e",
            "file": "projects/main/src/app/core/translation/custom-translation-loader.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TranslateLoader } from '@ngx-translate/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TranslationService } from './translation.service';\r\n\r\n// This is the translation loader service that is passed to ngxTranslate service\r\n// It retrieves translation from both CSPS and the asset folder\r\nexport class CustomTranslationLoader implements TranslateLoader {\r\n  constructor(private translationService: TranslationService) { }\r\n\r\n  getTranslation(lang: string): Observable<any> {\r\n    return combineLatest(\r\n      this.translationService.getAssetTranslations(lang),\r\n      this.translationService.getDatabaseTranslations(lang),\r\n      this.translationService.getDocumentTranslations(),\r\n    ).pipe(map(v => {\r\n      // Return the merged translation object\r\n      return Object.assign({}, v[1], v[2], v[0]);\r\n    }));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translationService",
                        "type": "TranslationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "translationService",
                        "type": "TranslationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "getTranslation",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "TranslateLoader"
            ]
        },
        {
            "name": "CustomValidators",
            "id": "class-CustomValidators-bd1a6a95dee50e4d5c0fc67f0c01e076e457a8c9dc2c8521136f19ba653904ea88d698919a26d403846261b81b04efd7fb0c78b274f6e9012b936f3bd65bdd8a",
            "file": "projects/main/src/app/shared/dynamic-form/custom-validators/custom-validators.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn, AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\nfunction isEmptyInputValue(value: any): boolean {\r\n  // we don't check for string here so it also works with arrays\r\n  return value == null || value.length === 0;\r\n}\r\n\r\nexport class CustomValidators {\r\n  static required(errorMessage?: string): ValidatorFn {\r\n    const result = (control: AbstractControl): ValidationErrors | null => {\r\n      return isEmptyInputValue(control.value) ? { 'required': errorMessage || true } : null;\r\n    };\r\n\r\n    return result;\r\n  }\r\n\r\n  static maxLength(maxLength: number, errorMessage?: string): ValidatorFn {\r\n    const result = (control: AbstractControl): ValidationErrors | null => {\r\n      const length: number = control.value ? control.value.length : 0;\r\n      return length > maxLength ?\r\n        { 'maxlength': errorMessage || `requiredLength : ${maxLength}, actualLength: ${length}` } :\r\n        null;\r\n    };\r\n\r\n    return result;\r\n  }\r\n\r\n  static minLength(minLength: number, errorMessage?: string): ValidatorFn {\r\n    const result = (control: AbstractControl): ValidationErrors | null => {\r\n      const length: number = control.value ? control.value.length : 0;\r\n      return length < minLength ?\r\n        { 'minLength': errorMessage || `requiredLength : ${minLength}, actualLength: ${length}` } :\r\n        null;\r\n    };\r\n\r\n    return result;\r\n  }\r\n\r\n  static in(list: string[], caseSensitive?: boolean, errorMessage?: string): ValidatorFn {\r\n    const result = (control: AbstractControl): ValidationErrors | null => {\r\n      if (isEmptyInputValue(control.value)) {\r\n        return null;  // don't validate empty values to allow optional controls\r\n      }\r\n\r\n      // Check if case sensitive is enabled\r\n      if (caseSensitive) {\r\n        const convertedControlValue = control.value.trim().toLowerCase();\r\n        const convertedLowercaseList = list.map(name => name.toLowerCase());\r\n        const inList: boolean = convertedLowercaseList.indexOf(convertedControlValue) > -1;\r\n        return inList ? null : { 'in': errorMessage || `Acceptable Values : ${list.join(', ')}` };\r\n      } else {\r\n        const inList: boolean = list.indexOf(control.value) > -1;\r\n        return inList ? null : { 'in': errorMessage || `Acceptable Values : ${list.join(', ')}` };\r\n      }\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n  static notIn(list: string[], caseSensitive?: boolean, errorMessage?: string): ValidatorFn {\r\n    const result = (control: AbstractControl): ValidationErrors | null => {\r\n      if (isEmptyInputValue(control.value)) {\r\n        return null;  // don't validate empty values to allow optional controls\r\n      }\r\n\r\n      // Check if case sensitive is enabled\r\n      if (caseSensitive) {\r\n        const convertedControlValue = control.value.trim().toLowerCase();\r\n        const convertedLowercaseList = list.map(name => name.toLowerCase());\r\n        const inList: boolean = convertedLowercaseList.indexOf(convertedControlValue) > -1;\r\n        return !inList ? null : { 'notIn': errorMessage || `Unacceptable Values : ${list.join(', ')}` };\r\n      } else {\r\n        const inList: boolean = list.indexOf(control.value) > -1;\r\n        return !inList ? null : { 'notIn': errorMessage || `Unacceptable Values : ${list.join(', ')}` };\r\n      }\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n  static hasInvalidCharacters(prohibitedCharacterList: any[], errorMessage?: string): ValidatorFn {\r\n    const result = (control: AbstractControl): ValidationErrors | null => {\r\n      if (isEmptyInputValue(control.value)) {\r\n        return null;  // don't validate empty values to allow optional controls\r\n      }\r\n      const inList: boolean = prohibitedCharacterList.some(x => control.value.indexOf(x) > -1);\r\n      return !inList ?\r\n        null :\r\n        { 'invalidCharacter': errorMessage || `Prohibited Characters : ${prohibitedCharacterList.join(', ')}` }\r\n        ;\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n  static hasNotAcceptableCharacters(acceptableCharacterList: any[], caseSensitive?: boolean, errorMessage?: string): ValidatorFn {\r\n    const result = (control: AbstractControl): ValidationErrors | null => {\r\n      if (isEmptyInputValue(control.value)) {\r\n        return null;  // don't validate empty values to allow optional controls\r\n      }\r\n\r\n      const convertedAcceptableCharacterList = caseSensitive ? acceptableCharacterList : acceptableCharacterList.map(x => x.toLowerCase());\r\n      const convertedControlValue = caseSensitive ? control.value : control.value.toLowerCase();\r\n\r\n      const invalidList: boolean = convertedControlValue.split('').some((x: string) => convertedAcceptableCharacterList.indexOf(x) === -1);\r\n      return !invalidList ?\r\n        null :\r\n        { 'notAcceptableCharacter': errorMessage || `Acceptable Characters : ${acceptableCharacterList.join(', ')}` }\r\n        ;\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "hasInvalidCharacters",
                    "args": [
                        {
                            "name": "prohibitedCharacterList",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "prohibitedCharacterList",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasNotAcceptableCharacters",
                    "args": [
                        {
                            "name": "acceptableCharacterList",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "caseSensitive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "acceptableCharacterList",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "caseSensitive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "in",
                    "args": [
                        {
                            "name": "list",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "caseSensitive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "caseSensitive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "maxLength",
                    "args": [
                        {
                            "name": "maxLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "maxLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "minLength",
                    "args": [
                        {
                            "name": "minLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "minLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "notIn",
                    "args": [
                        {
                            "name": "list",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "caseSensitive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "caseSensitive",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "required",
                    "args": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TreeviewNode",
            "id": "class-TreeviewNode-fab151431d5c30008d82ece351b25a6526edc61e3836f5f56334034982a20f6fa306269e4961b6b7cdc4d6d721f5891b86b280989b9ad1e8aaebea06ac2a5bc9",
            "file": "projects/main/src/app/shared/tree-view/models/tree-view-node.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nexport class TreeviewNode {\r\n  id: string;\r\n  name: string;\r\n  level: number;\r\n  icon: IconDefinition | null;\r\n  badges: { name: string, color: string }[];\r\n  children: TreeviewNode[];\r\n  isLeaf: boolean;\r\n  allowDrop: boolean;\r\n  parent: TreeviewNode | null;\r\n  data: any;\r\n  showBadge?: boolean;\r\n  contextMenu?: { text: string, callback: (data: any) => void }[];\r\n  meta?: { [key: string]: string | string[] };\r\n\r\n  get hasChildren() {\r\n    if (this.children.length === 0)\r\n      return false;\r\n    else\r\n      return true;\r\n  }\r\n  constructor(id: string, name: string, level: number, parent: TreeviewNode | null = null, icon: IconDefinition | null = null, badges: { name: string, color: string }[] = [], data: any = {}) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.level = level;\r\n    this.icon = icon;\r\n    this.badges = badges;\r\n    this.data = data;\r\n    this.children = [];\r\n    this.parent = parent;\r\n    this.isLeaf = true;\r\n    this.allowDrop = true;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "level",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "parent",
                        "type": "TreeviewNode | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "null"
                    },
                    {
                        "name": "icon",
                        "type": "IconDefinition | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "null"
                    },
                    {
                        "name": "badges",
                        "type": "literal type[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "[]"
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{}"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "level",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "parent",
                        "type": "TreeviewNode | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "null",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "icon",
                        "type": "IconDefinition | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "null",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "badges",
                        "type": "literal type[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "[]",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{}",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "allowDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "badges",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeviewNode[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "isLeaf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "meta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "parent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeviewNode | null",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "showBadge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "accessors": {
                "hasChildren": {
                    "name": "hasChildren",
                    "getSignature": {
                        "name": "hasChildren",
                        "type": "",
                        "returnType": "",
                        "line": 18
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TreeviewOptions",
            "id": "class-TreeviewOptions-6b57453d63ab9f4e0e7ccc58a04d8a380eb7ef3f8962b9c88d1676f8d2ed9e8b4d6b8d565707ce9caa7429d3769b4c24bd7e92dafdb9817bb2667f34d882397b",
            "file": "projects/main/src/app/shared/tree-view/models/tree-view-option.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TreeviewNode } from \"./tree-view-node.model\";\r\n\r\nexport class TreeviewOptions {\r\n  // Indicates whether nodes should all be expanded on start\r\n  expandedOnStart: boolean = false;\r\n\r\n  // Array containing css classes to apply to nodes of the corresponding level\r\n  // Item 0 correspond to level 1 nodes, item 1 to level 2 nodes,...\r\n  styles?: string[] = [];\r\n\r\n  // Indicates if badges should be shown on hover only\r\n  showBadgeOnHoverOnly?: boolean = false;\r\n\r\n  // Indicates where mini badges should be shown when node is not hovered\r\n  showMiniBadges?: boolean = false;\r\n\r\n  // Indicates whether the tree should display checkboxes in front of each node\r\n  useCheckbox?: boolean;\r\n\r\n  // Options to allow for drag and drop\r\n  allowDrag?: boolean = false;\r\n  allowDrop?: (element: any, to: { parent: TreeviewNode, index: number }, $event?: any) => boolean;\r\n\r\n  // // Action Mappings\r\n  // actionMapping?: IActionMapping;\r\n}\r\n",
            "properties": [
                {
                    "name": "allowDrag",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "allowDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "expandedOnStart",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "showBadgeOnHoverOnly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "showMiniBadges",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "styles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "useCheckbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "DefaultImageDirective",
            "id": "directive-DefaultImageDirective-f757fa0784e9823801cad393465b61f05ece8bc7bda418e9a9550539ca5179092c65598c91db17484798784be23d96124be8f1521327fa296921d90f649a08c5",
            "file": "projects/main/src/app/shared/default-image/default-image.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { SafeUrl } from '@angular/platform-browser';\r\n\r\n@Directive({\r\n  selector: 'img[src]',\r\n  host: {\r\n    '(error)': 'updateUrl()',\r\n    '[src]': 'checkPath(src)'\r\n  },\r\n  standalone: true\r\n})\r\nexport class DefaultImageDirective {\r\n  @Input() src!: SafeUrl | null;\r\n\r\n  private defaultImg: string = './assets/img/Missing.png';\r\n\r\n  constructor() { }\r\n\r\n  updateUrl() {\r\n    return this.src = this.defaultImg;\r\n  }\r\n\r\n  public checkPath(src: SafeUrl | null): string {\r\n    return src ? src as string : this.defaultImg;\r\n  }\r\n}\r\n",
            "selector": "img[src]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "SafeUrl | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "defaultImg",
                    "defaultValue": "'./assets/img/Missing.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkPath",
                    "args": [
                        {
                            "name": "src",
                            "type": "SafeUrl | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "src",
                            "type": "SafeUrl | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            }
        },
        {
            "name": "DoubleClickDirective",
            "id": "directive-DoubleClickDirective-86ee906c637f53fee0f91c26a1f8398b59c73312b07899fcd03d811f7e8c5c9cad31d0460bba042a85702db15ce7eb115090ab00ea1e83898d3631489aeb5105",
            "file": "projects/main/src/app/shared/double-click/double-click.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { debounceTime, Subject, Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[click.single],[click.double]',\r\n  standalone: true\r\n})\r\nexport class DoubleClickDirective implements OnInit, OnDestroy {\r\n  @Input() debounceTime = 300;\r\n  @Output('click.double') doubleClick = new EventEmitter();\r\n  @Output('click.single') singleClick = new EventEmitter();\r\n\r\n  private clicksSubject = new Subject<MouseEvent>();\r\n  private subscription!: Subscription;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.clicksSubject.pipe(debounceTime(this.debounceTime)).subscribe(event => {\r\n      if (event.type === 'click') {\r\n        this.singleClick.emit(event);\r\n      } else {\r\n        this.doubleClick.emit(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  clickEvent(event: MouseEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clicksSubject.next(event);\r\n  }\r\n  @HostListener('dblclick', ['$event'])\r\n  doubleClickEvent(event: MouseEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clicksSubject.next(event);\r\n  }\r\n}\r\n",
            "selector": "[click.single],[click.double]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "debounceTime",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click.double",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                },
                {
                    "name": "click.single",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33
                },
                {
                    "name": "dblclick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39
                }
            ],
            "propertiesClass": [
                {
                    "name": "clicksSubject",
                    "defaultValue": "new Subject<MouseEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "doubleClickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dblclick', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            }
        },
        {
            "name": "DynamicFieldDirective",
            "id": "directive-DynamicFieldDirective-1243d86a6052a2ed36188b49e0d3c016254e583bc6a7e0c58d65ac85478790229bf4673e7f0baa8fe5920496358966e4f51e3a7010648dbc4164299ffbb3c626",
            "file": "projects/main/src/app/shared/dynamic-form/components/dynamic-field.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnChanges, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FieldConfig } from '../models/field-config.interface';\r\nimport { Field } from '../models/field.interface';\r\nimport { FormInputComponent } from './form-input/form-input.component';\r\nimport { FormNumberComponent } from './form-number/form-number.component';\r\nimport { FormMultiSelectComponent } from './form-multi-select/form-multi-select.component';\r\nimport { FormMultiSelectListComponent } from './form-multi-select-list/form-multi-select-list.component';\r\nimport { FormSelectComponent } from './form-select/form-select.component';\r\nimport { FormCheckboxComponent } from './form-checkbox/form-checkbox.component';\r\nimport { FormCheckboxListComponent } from './form-checkbox-list/form-checkbox-list.component';\r\nimport { FormPasswordComponent } from './form-password/form-password.component';\r\nimport { FormFileComponent } from './form-file/form-file.component';\r\nimport { FormStaticComponent } from './form-static/form-static.component';\r\nimport { FormStaticAreaComponent } from './form-static-area/form-static-area.component';\r\nimport { FormDateComponent } from './form-date/form-date.component';\r\nimport { FormDateTimeComponent } from './form-date-time/form-date-time.component';\r\nimport { FormAreaComponent } from './form-area/form-area.component';\r\nimport { FormButtonComponent } from './form-button/form-button.component';\r\nimport { FormImagePreviewComponent } from './form-image-preview/form-image-preview.component';\r\n\r\n\r\nconst components: { [type: string]: Type<Field> } = {\r\n  input: FormInputComponent,\r\n  password: FormPasswordComponent,\r\n  number: FormNumberComponent,\r\n  select: FormSelectComponent,\r\n  multiSelect: FormMultiSelectComponent,\r\n  multiSelectList: FormMultiSelectListComponent,\r\n  checkbox: FormCheckboxComponent,\r\n  checkboxList: FormCheckboxListComponent,\r\n  file: FormFileComponent,\r\n  static: FormStaticComponent,\r\n  area: FormAreaComponent,\r\n  staticArea: FormStaticAreaComponent,\r\n  date: FormDateComponent,\r\n  datetime: FormDateTimeComponent,\r\n  button: FormButtonComponent,\r\n  image: FormImagePreviewComponent\r\n}\r\n\r\n@Directive({\r\n  selector: '[dynamicField]',\r\n  standalone: true\r\n})\r\nexport class DynamicFieldDirective implements Field, OnInit, OnChanges {\r\n  @Input() config!: FieldConfig;\r\n\r\n  @Input() group!: FormGroup;\r\n\r\n  component!: ComponentRef<Field>;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) { }\r\n\r\n  ngOnInit() {\r\n    if (!components[this.config.type]) {\r\n      const supportedTypes = Object.keys(components).join(', ');\r\n      throw new Error(`Trying to use an unsupported type (${this.config.type}). Supported types: ${supportedTypes}`);\r\n    }\r\n    const component = this.resolver.resolveComponentFactory<Field>(components[this.config.type]);\r\n    this.component = this.container.createComponent(component);\r\n    this.component.instance.config = this.config;\r\n    this.component.instance.group = this.group;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.config.labelSize = this.config.labelSize != undefined ? this.config.labelSize : 2;\r\n\r\n    if (this.component) {\r\n      this.component.instance.config = this.config;\r\n      this.component.instance.group = this.group;\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[dynamicField]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "FieldConfig",
                    "decorators": []
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "component",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<Field>",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "Field",
                "OnInit",
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "StickyPopoverDirective",
            "id": "directive-StickyPopoverDirective-ad67478440257a8a29cf23d298b7b11c624243c5973c13dee52a147eac75d3188d550ae0360ef75ef74cb2e6669ebb0c5c003f129650ad2ef1b2c6178aacfac6",
            "file": "projects/main/src/app/shared/side-bar/sticky-popover.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { ChangeDetectorRef, Directive, ElementRef, Inject, Input, Renderer2, TemplateRef } from '@angular/core';\r\nimport { NgbPopover } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Directive({\r\n    selector: \"[stickyPopover]\",\r\n    standalone: true\r\n})\r\nexport class StickyPopoverDirective extends NgbPopover {\r\n\r\n    @Input() stickyPopover!: TemplateRef<any>;\r\n\r\n    override triggers!: string;\r\n\r\n    override container!: string;\r\n\r\n    override toggle(): void {\r\n        super.toggle()\r\n    }\r\n\r\n    override  isOpen(): boolean {\r\n        return super.isOpen()\r\n    }\r\n\r\n    canClosePopover!: boolean;\r\n\r\n    constructor(private _elRef: ElementRef, private _render: Renderer2, @Inject(DOCUMENT) _document: any, _changeDetector: ChangeDetectorRef) {\r\n        super();\r\n        this.triggers = \"manual\"\r\n        this.container = \"body\"\r\n    }\r\n\r\n    override ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.ngbPopover = this.stickyPopover;\r\n\r\n        this._render.listen(this._elRef.nativeElement, \"mouseenter\", () => {\r\n            this.canClosePopover = true;\r\n            // this.open()\r\n        });\r\n\r\n        this._render.listen(this._elRef.nativeElement, \"mouseleave\", (event: Event) => {\r\n            this.open();\r\n            setTimeout(() => { if (this.canClosePopover) this.close() }, 200)\r\n\r\n        })\r\n\r\n        this._render.listen(this._elRef.nativeElement, \"click\", () => {\r\n            this.close();\r\n        })\r\n    }\r\n\r\n    override ngOnDestroy(): void {\r\n        super.ngOnDestroy()\r\n    }\r\n\r\n    override open() {\r\n        super.open();\r\n        let popover = window.document.querySelector(\".popover\")\r\n        this._render.listen(popover, \"mouseover\", () => {\r\n            this.canClosePopover = false;\r\n        });\r\n\r\n        this._render.listen(popover, \"mouseout\", () => {\r\n            this.canClosePopover = true;\r\n            setTimeout(() => { if (this.canClosePopover) this.close() }, 0)\r\n        });\r\n    }\r\n\r\n    override close() {\r\n        super.close();\r\n    }\r\n\r\n}\r\n",
            "selector": "[stickyPopover]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "stickyPopover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "canClosePopover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        164
                    ]
                },
                {
                    "name": "triggers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        164
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ]
                },
                {
                    "name": "isOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ]
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ]
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ]
                }
            ],
            "extends": [
                "NgbPopover"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_changeDetector",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_changeDetector",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AnomaliesComponent",
            "id": "component-AnomaliesComponent-6887feeaa62d990aba6b81999680a938b635b3b667295cc09ae9b1f4c3daf7b24c59d9f4f735a989bbd7b5d3e8bd6707c419c3112ce253fd63d0f519f80b7a7a",
            "file": "projects/main/src/app/features/products/shared/components/anomalies/anomalies.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-anomalies",
            "styleUrls": [
                "./anomalies.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./anomalies.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "literal type",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dismissed",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<any>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "buildTableSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "cleanAnomalies",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dismissForm",
                    "args": [
                        {
                            "name": "method",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DataTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { faBroom } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { Anomaly } from './model/anomaly.model';\r\nimport { DataTableComponent } from '../../../../../shared/data-table/data-table.component';\r\nimport { DataTableSettings } from '../../../../../shared/data-table/model/data-table-settings.model';\r\nimport { DataTableColumnDefinition } from '../../../../../shared/data-table/model/data-table-column-definition.model';\r\nimport { DataTableToolbarControl } from '../../../../../shared/data-table/model/data-table-toolbar-control.model';\r\n\r\n@Component({\r\n  selector: 'csps-anomalies',\r\n  standalone: true,\r\n  imports: [DataTableComponent],\r\n  templateUrl: './anomalies.component.html',\r\n  styleUrls: ['./anomalies.component.scss']\r\n})\r\nexport class AnomaliesComponent implements OnInit, OnDestroy {\r\n  @Input() config!: {\r\n    anomalies: Anomaly[],\r\n    admin: boolean,\r\n  }\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // The datatable settings\r\n  settings!: DataTableSettings<any>;\r\n\r\n  // Used for cleaning subscription \r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildTableSettings();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.buildTableSettings();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  buildTableSettings(): void {\r\n    const columnDefinition: DataTableColumnDefinition[] = [\r\n      { id: '1', name: 'anomalyNumber', label: '#', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n      { id: '2', name: 'anomaly', label: 'Anomaly', type: 'text', visible: true, searchable: false, filterMode: 'none' },];\r\n\r\n    this.settings = {\r\n      selectableRows: false,\r\n      columnDefinitions: columnDefinition,\r\n      data: this.config.anomalies.map((x, i) => ({\r\n        anomalyNumber: i + 1,\r\n        anomaly: x.description,\r\n      })) || [],\r\n      toolBar: {\r\n        right: [\r\n          ...this.config.admin ? [{ name: 'Clean Anomalies', icon: faBroom, type: 'button', callback: () => this.cleanAnomalies() } as DataTableToolbarControl] : []\r\n        ]\r\n      },\r\n      groupBy: []\r\n    };\r\n  }\r\n\r\n  // Clean anomalies\r\n  cleanAnomalies() {\r\n    this.submitted.emit({ type: 'clean' });\r\n  }\r\n\r\n  dismissForm(method: string) {\r\n    this.dismissed.emit(method);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./anomalies.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 33
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\">Anomalies Manager</h5>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body d-flex\" style=\"height:80vh;\">\r\n      <csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary\">Close</button>\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-92e2f65abcb6b3625c6d4a5930c6fc8a68f0d071215de09facbbb1d781a137439b4b4d302e81620705707fe0db1cbe8af24119e27298ae5664855766150b321b",
            "file": "projects/main/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "LoaderComponent",
                    "type": "component"
                },
                {
                    "name": "MenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { combineLatest, filter, mergeMap, of } from 'rxjs';\r\nimport { LoaderComponent } from './core/loader/loader.component';\r\nimport { MenuComponent } from './core/menu/menu.component';\r\nimport { TranslationService } from './core/translation/translation.service';\r\nimport { UserService } from './core/user/user.service';\r\n \r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink, RouterOutlet, LoaderComponent, MenuComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private userService: UserService, private translateService: TranslateService, private translationService: TranslationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.init();\r\n\r\n    // Initialize list of languages\r\n    this.translateService.addLangs(this.translationService.languages.map(l => l.code));\r\n\r\n    // Default language\r\n    this.translateService.setDefaultLang(this.translationService.defaultLanguage.code);\r\n\r\n    // Subscribe to language changes\r\n    combineLatest(\r\n      this.translationService.selectedApplicationLanguage$,\r\n      this.translationService.selectedDocumentLanguage$\r\n    ).pipe(\r\n      filter(([appLanguage, docLanguage]) => !!appLanguage),\r\n      mergeMap(([appLanguage, docLanguage]) => combineLatest(of(appLanguage), this.translateService.reloadLang(appLanguage?.code || '')))\r\n    ).subscribe(([appLanguage, translations]) => {\r\n      this.translateService.use(appLanguage?.code || '');\r\n      // onLangChange is not emitted upon reloadLang. Must do it manually to force translations to update\r\n      this.translateService.onLangChange.emit({ lang: appLanguage?.code || '', translations: translations });\r\n    })\r\n\r\n    // Set initial language\r\n    this.translationService.setApplicationLanguage(this.translationService.defaultLanguage);\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translationService",
                        "type": "TranslationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translationService",
                        "type": "TranslationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<csps-menu></csps-menu>\r\n<csps-loader></csps-loader>\r\n<!--<csps-search></csps-search>-->\r\n<!--<csps-notificator></csps-notificator>-->\r\n<!--<main class=\"h-100\" [ngClass]=\"{loading: (loadingService.isLoading$ | async)}\">-->\r\n<main>\r\n  <router-outlet></router-outlet>\r\n</main>\r\n"
        },
        {
            "name": "AreasComponent",
            "id": "component-AreasComponent-8ef082f876c4a4ee58a240e46b6a1cc8e3eae55144615780a054fc3937ab568fb183a8b87ca7dae05c1cf9bd380b191082bf8707611a478af75b814da80b43ea",
            "file": "projects/main/src/app/features/admin/areas/areas.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-areas",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./areas.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-areas',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './areas.component.html',\r\n  styleUrl: './areas.component.scss'\r\n})\r\nexport class AreasComponent {\r\n\r\n}\r\n",
            "styleUrl": "./areas.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Areas</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "AssignmentMatrixComponent",
            "id": "component-AssignmentMatrixComponent-2bf6bfcf12c15bb7590656c895575daa14ded5ffaf40b5f2d443c7a614657b0e7b46086e49d420a667b8a51b662dff3d46cf95ea0493e735d8bbb9e9b42a337a",
            "file": "projects/main/src/app/features/admin/assignment-matrix/assignment-matrix.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-assignment-matrix",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./assignment-matrix.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-assignment-matrix',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './assignment-matrix.component.html',\r\n  styleUrl: './assignment-matrix.component.scss'\r\n})\r\nexport class AssignmentMatrixComponent {\r\n\r\n}\r\n",
            "styleUrl": "./assignment-matrix.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Assignment Matrix</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "BacklogComponent",
            "id": "component-BacklogComponent-612b4488074dfbb5f8ac158bca5b9068bfb8b0f46e757c23d41ca8947edc9a0c49cd0923363992cb09bb97d89e54b0f76c4670dfdcb758ba8df2cebe1a1a64a3",
            "file": "projects/main/src/app/features/work/planning/backlog/backlog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-backlog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./backlog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "workItems",
                    "defaultValue": "[\r\n    { id: '1', name: 'Task 1', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n    { id: '2', name: 'Task 2', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '3', name: '12 Fan' } },\r\n    { id: '3', name: 'Task 3', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '8', name: 'Evaporator' } },\r\n    { id: '4', name: 'Task 4', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '2', name: 'ECN24-0001E - EOM Structure' } },\r\n    { id: '5', name: 'Task 5', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '4', name: '14 Fan' } },\r\n    { id: '6', name: 'Task 6', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '9', name: 'Condenser' } },\r\n    { id: '7', name: 'Task 7', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '5', name: '0041 System Piping' } },\r\n    { id: '8', name: 'Task 8', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '6', name: '0048 System Piping' } },\r\n    { id: '9', name: 'Task 9', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '4', name: 'University of Texas CYK' }, feature: { id: '6', name: 'System' }, story: { id: '10', name: 'System Layout' } },\r\n    { id: '10', name: 'Task 10', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'Compressor Subs' }, story: { id: '7', name: 'Phase 1' } },\r\n    { id: '11', name: 'Task 11', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n    { id: '12', name: 'Task 12', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BacklogTableWorkItem[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "test",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "test2",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "BacklogTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { BacklogTableComponent } from '../../../../shared/backlog-table/backlog-table.component';\r\nimport { BacklogTableWorkItem } from '../../../../shared/backlog-table/model/backlog-table-work-item.model';\r\nimport { DynamicFormService } from '../../../../shared/dynamic-form/services/dynamic-form.service';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-backlog',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent, BacklogTableComponent],\r\n  templateUrl: './backlog.component.html',\r\n  styleUrl: './backlog.component.scss'\r\n})\r\nexport class BacklogComponent implements OnInit {\r\n\r\n  constructor(private dynamicFormService: DynamicFormService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  workItems: BacklogTableWorkItem[] = [\r\n    { id: '1', name: 'Task 1', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n    { id: '2', name: 'Task 2', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '3', name: '12 Fan' } },\r\n    { id: '3', name: 'Task 3', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '8', name: 'Evaporator' } },\r\n    { id: '4', name: 'Task 4', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '2', name: 'ECN24-0001E - EOM Structure' } },\r\n    { id: '5', name: 'Task 5', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '4', name: '14 Fan' } },\r\n    { id: '6', name: 'Task 6', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '9', name: 'Condenser' } },\r\n    { id: '7', name: 'Task 7', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '5', name: '0041 System Piping' } },\r\n    { id: '8', name: 'Task 8', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '6', name: '0048 System Piping' } },\r\n    { id: '9', name: 'Task 9', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '4', name: 'University of Texas CYK' }, feature: { id: '6', name: 'System' }, story: { id: '10', name: 'System Layout' } },\r\n    { id: '10', name: 'Task 10', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'Compressor Subs' }, story: { id: '7', name: 'Phase 1' } },\r\n    { id: '11', name: 'Task 11', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n    { id: '12', name: 'Task 12', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n\r\n  ]\r\n\r\n\r\n  test(): void {\r\n    this.dynamicFormService.popNotification({\r\n      headerText: 'Notification',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      notifications: ['success 1', 'success 2'],\r\n      onSubmit: () => { alert('submitted') },\r\n      onDismiss: () => { alert('dismissed') }\r\n    });\r\n  }\r\n\r\n  test2(): void {\r\n    this.dynamicFormService.popDynamicFormModal({\r\n      headerText: 'Dynamic Form',\r\n      submitText: 'OK',\r\n      closeText: 'No',\r\n      fields: [\r\n        { name: 'test', type: 'input', label: 'Test', value: 'testABC'  }\r\n      ],\r\n      onSubmit: (e: { test: string }) => { debugger;  alert('submitted ' + e.test) },\r\n      onDismiss: () => { alert('dismissed') }\r\n    })\r\n  }\r\n\r\n  //favouriteProductToggled: action('favouriteProductToggled'),\r\n  //workItemNavigated: action('workItemNavigated'),\r\n}\r\n",
            "styleUrl": "./backlog.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<csps-page-template>\r\n\r\n  <ng-container header>\r\n    Backlog\r\n  </ng-container>\r\n\r\n  <ng-container toolbar>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Open Workflow\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 1\r\n    </button>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Manage Versions\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 2\r\n    </button>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Help\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 3\r\n    </button>\r\n  </ng-container>\r\n\r\n  <ng-container body>\r\n    <csps-backlog-table [workItems]=\"workItems\" (workItemNavigated)=\"test()\" (favouriteProductToggled)=\"test2()\"></csps-backlog-table>\r\n    <ul>\r\n      <li>Roll over icon</li>\r\n      <li>Group By super filter</li>\r\n      <li>Script to auto add recurring tasks</li>\r\n    </ul>\r\n   \r\n    \r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "BacklogTableComponent",
            "id": "component-BacklogTableComponent-bba8d822f2ce9dbec33e4657bf86627cabd0c70012dfc2c4906f919c2c9558031d20a2beec800ccf5a52e6966dc3f95670b10d12875cc56b3d0238a4086d40bf",
            "file": "projects/main/src/app/shared/backlog-table/backlog-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-backlog-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./backlog-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "BacklogTableOptions",
                    "decorators": []
                },
                {
                    "name": "workItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "BacklogTableWorkItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "favouriteProductToggled",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "workItemNavigated",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<BacklogTableWorkItem>",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "tasksVisible$",
                    "defaultValue": "new BehaviorSubject<boolean>(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "displayStatusDetails",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigate",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleFavoriteProductLine",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleTaskVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DataTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\r\nimport { faBookOpen, faClipboardCheck, faCrown, faExternalLink, faEyeSlash, faStar, faTrophy } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEye, faStar as faStarEmpty } from '@fortawesome/free-regular-svg-icons';\r\nimport { DataTableComponent } from '../data-table/data-table.component';\r\nimport { DataTableSettings } from '../data-table/model/data-table-settings.model';\r\nimport { BacklogTableOptions } from './model/backlog-table-options.model';\r\nimport { BacklogTableWorkItem } from './model/backlog-table-work-item.model';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'csps-backlog-table',\r\n  standalone: true,\r\n  imports: [CommonModule, DataTableComponent],\r\n  templateUrl: './backlog-table.component.html',\r\n  styleUrl: './backlog-table.component.scss'\r\n})\r\nexport class BacklogTableComponent implements OnChanges, OnDestroy {\r\n  // The list of workitems\r\n  @Input() workItems!: BacklogTableWorkItem[];\r\n\r\n  // The backlog table options\r\n  @Input() options?: BacklogTableOptions;\r\n\r\n  // The event emitted when a favourite product is toggled\r\n  @Output() favouriteProductToggled: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // The event emitted when a work item is navigated to\r\n  @Output() workItemNavigated: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // The visibility status for the tasks\r\n  tasksVisible$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  // The datatable settings\r\n  settings!: DataTableSettings<BacklogTableWorkItem>\r\n\r\n  // Used for cleaning subscriptions\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void {\r\n    // TODO\r\n    const taskVisible = true;\r\n\r\n    // Enrich list of work items\r\n    const data = this.workItems.map((x, i) => {\r\n      const favProductLine = !!this.options?.favouriteProductLineIds.includes(x.productLine.id);\r\n\r\n      return {\r\n        ...x,\r\n        productLine: { ...x.productLine, favorite: favProductLine, icon: favProductLine ? faStar : faStarEmpty },\r\n        epic: { ...x.epic, icon: faCrown },\r\n        feature: { ...x.feature, icon: faTrophy, priority: 'H' + (i + 1) },\r\n        story: { ...x.story, team: ['Team A', 'Team B'][i % 2], readiness: ['𐩒', '◔', '◐', '◕', '⏺'][i % 5], icon: faBookOpen, committed: ['None', '28.1', '28.2', '28.3'][i % 4], createdOn: '2024-07-02', dueBy:'9999-12-31', effort: ['1', '2', '3', '5', '8', '13', '21'][i % 7] },\r\n        icon: faClipboardCheck,\r\n        navigateIcon: faExternalLink\r\n      };\r\n    });\r\n\r\n    this.settings = {\r\n      data: data,\r\n      hideRow: (row: any) => row.isPlaceholder || (row.level === 5 && !taskVisible),\r\n      columnDefinitions: [\r\n        { id: '5', label: 'Priority', name: 'priority', type: 'text', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: true, filterMode: 'select' },\r\n        { id: '0', label: '', name: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '1', label: '', name: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: '', name: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: '', name: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: '', name: 'icon', type: 'icon', cellClass: 'yellow-text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '5', label: 'Name', name: 'name', type: 'text', cellAlignment: 'left', visible: true, searchable: true, filterMode: 'text' },\r\n        { id: '5', label: 'Committed', name: 'committed', type: 'text', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: true, filterMode: 'select' },\r\n        { id: '5', label: 'Effort Consensus', name: 'effort', type: 'text', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: true, filterMode: 'select' },\r\n        { id: '6', label: 'Created On', name: 'createdOn', type: 'text', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: true, filterMode: 'text' },\r\n        { id: '7', label: 'Due By', name: 'dueBy', type: 'text', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: true, filterMode: 'text' },\r\n        { id: '8', label: 'Team', name: 'team', type: 'text', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: true, filterMode: 'select' },\r\n        { id: '9', label: 'Readiness', name: 'readiness', type: 'text', cellAlignment: 'center', columnClass: 'fit', cellClass: 'py-0 symbol-font red-text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '10', label: 'Link', name: 'navigateIcon', type: 'icon', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none', click: this.navigate.bind(this) }\r\n      ],\r\n      toolBar: {\r\n        right: [\r\n          { name: 'Search', type: 'search', callback: () => { } },\r\n          { name: taskVisible ? 'Hide Tasks' : 'Show Tasks', type: 'button', icon: taskVisible ? faEyeSlash : faEye, callback: this.toggleTaskVisibility.bind(this) },\r\n          { name: 'Export to Excel', type: 'excel', callback: () => { } }\r\n        ]\r\n      },\r\n      groupBy: [\r\n        {\r\n          property: 'productLine.id', orderBy: ['productLine.name'], columns: [\r\n            { name: '', type: 'text', alignment: 'left', colspan: 1 },\r\n            { name: 'productLine.icon', type: 'icon', alignment: 'left', class: 'fit yellow-text', colspan: 1, click: this.toggleFavoriteProductLine.bind(this) },\r\n            { name: 'productLine.name', type: 'text', alignment: 'left', class: 'red-text fw-bold text-uppercase', colspan: 11 },\r\n            { name: 'navigateIcon', type: 'icon', alignment: 'center', colspan: 1, click: this.navigate.bind(this) }\r\n          ]\r\n        },\r\n        {\r\n          property: 'epic.id', orderBy: ['epic.name'], columns: [\r\n            { name: '', type: 'text', alignment: 'left', colspan: 2},\r\n            { name: 'epic.icon', type: 'icon', alignment: 'left', class: 'fit orange-text', colspan: 1 },\r\n            { name: 'epic.name', type: 'text', alignment: 'left', class: 'fw-bold', colspan: 10 },\r\n            { name: 'navigateIcon', type: 'icon', alignment: 'center', colspan: 1, click: this.navigate.bind(this) }\r\n          ]\r\n        },\r\n        {\r\n          property: 'feature.id', orderBy: ['feature.name'], columns: [\r\n            { name: 'feature.priority', type: 'text', alignment: 'center', class: '', colspan: 1 },\r\n            { name: '', type: 'text', alignment: 'left', colspan: 2 },\r\n            { name: 'feature.icon', type: 'icon', alignment: 'left', class: 'fit purple-text', colspan: 1 },\r\n            { name: 'feature.name', type: 'text', alignment: 'left', class: '', colspan: 3 },\r\n            { name: '', type: 'text', alignment: 'center', class: '', colspan: 6 },\r\n            { name: 'navigateIcon', type: 'icon', alignment: 'center', colspan: 1, click: this.navigate.bind(this) }\r\n          ]\r\n        },\r\n        {\r\n          property: 'story.id', orderBy: ['story.name'], columns: [\r\n            { name: '', type: 'text', alignment: 'left', colspan: 4 },\r\n            { name: 'story.icon', type: 'icon', alignment: 'left', class: 'fit cyan-text', colspan: 1 },\r\n            { name: 'story.name', type: 'text', alignment: 'left', class: '', colspan: 2 },\r\n            { name: 'story.committed', type: 'text', alignment: 'center', class: '', colspan: 1 },\r\n            { name: 'story.effort', type: 'text', alignment: 'center', class: '', colspan: 1 },\r\n            { name: 'story.createdOn', type: 'text', alignment: 'center', class: '', colspan: 1 },\r\n            { name: 'story.dueBy', type: 'text', alignment: 'center', class: '', colspan: 1 },\r\n            { name: 'story.team', type: 'text', alignment: 'center', class: '', colspan: 1 },\r\n            { name: 'story.readiness', type: 'text', alignment: 'center', class: 'py-0 symbol-font red-text', colspan: 1, click: this.displayStatusDetails.bind(this) },\r\n            { name: 'navigateIcon', type: 'icon', alignment: 'center', colspan: 1, click: this.navigate.bind(this) }\r\n          ]\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  toggleFavoriteProductLine(rowData: { productLine: { id: string } }): void {\r\n    this.favouriteProductToggled.emit(rowData.productLine.id);\r\n  }\r\n\r\n  navigate(rowData: { rowId: string }): void {\r\n    this.workItemNavigated.emit(rowData.rowId);\r\n  }\r\n\r\n  toggleTaskVisibility() {\r\n    this.tasksVisible$.next(!this.tasksVisible$.getValue());\r\n  }\r\n\r\n  displayStatusDetails(rowData: { rowId: string }): void {\r\n    alert(rowData.rowId);\r\n  }\r\n}\r\n\r\n\r\n",
            "styleUrl": "./backlog-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 38
            },
            "extends": [],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<csps-data-table [settings]=\"settings\"></csps-data-table>\r\n"
        },
        {
            "name": "BurnDownChartComponent",
            "id": "component-BurnDownChartComponent-32d774042fb7f97c1e4449a7a9d4a23557d424445f153c9c1c467c58bfcbcb2bca403823940c52fe40bbd3c2a3e989c0d839ad8663b8a24bb6250057d8f6d41f",
            "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-burn-down-chart",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./burn-down-chart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "BurnDownChartOptions",
                    "decorators": []
                },
                {
                    "name": "tasks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "BurnDownChartTask[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "chartClicked",
                    "defaultValue": "new EventEmitter<{ event?: ChartEvent; active?: object[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "chartHovered",
                    "defaultValue": "new EventEmitter<{ event?: ChartEvent; active?: object[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BaseChartDirective | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "BaseChartDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "chartDataset",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartDataset[]",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "chartOptions",
                    "defaultValue": "{\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        adapters: {\r\n          date: {\r\n            locale: enUS,\r\n          }\r\n        },\r\n        time: {\r\n          isoWeekday: true,\r\n          unit: 'day',\r\n          displayFormats: {\r\n            day: \"dd MMM yyyy\"\r\n          }\r\n        },\r\n        title: { display: false }\r\n      },\r\n      y: {\r\n        min: 0,\r\n        max: 10\r\n      }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n      }\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "chartType",
                    "defaultValue": "'line'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "isBrowser",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "maxTaskDate",
                    "defaultValue": "MAX_DATE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "minTaskDate",
                    "defaultValue": "MIN_DATE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "showLegend",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 78
                }
            ],
            "methodsClass": [
                {
                    "name": "clicked",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hovered",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMinMax",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setParameters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NgChartsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule, isPlatformBrowser } from '@angular/common';\r\nimport { Component, EventEmitter, Inject, Input, OnChanges, Output, PLATFORM_ID, ViewChild } from '@angular/core';\r\nimport { ChartConfiguration, ChartDataset, ChartEvent, ChartOptions, ChartType } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { eachDayOfInterval } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\nimport { BaseChartDirective, NgChartsModule } from 'ng2-charts';\r\nimport { BurnDownChartOptions } from './model/burn-down-chart-options.model';\r\nimport { BurnDownChartTask } from './model/burn-down-chart-task.model';\r\n\r\nconst MIN_DATE: Date = new Date(0);\r\nconst MAX_DATE: Date = new Date('9999-12-31');\r\n\r\n@Component({\r\n  selector: 'csps-burn-down-chart',\r\n  standalone: true,\r\n  imports: [CommonModule, NgChartsModule],\r\n  templateUrl: './burn-down-chart.component.html',\r\n  styleUrl: './burn-down-chart.component.scss'\r\n})\r\nexport class BurnDownChartComponent implements OnChanges {\r\n  @ViewChild(BaseChartDirective) chart: BaseChartDirective | undefined;\r\n\r\n  // The list of task to visualize in the burn down chart\r\n  @Input() tasks!: BurnDownChartTask[];\r\n\r\n  // The burn down chart options\r\n  @Input() options?: BurnDownChartOptions;\r\n\r\n  // The hovered and click event emitters\r\n  @Output() chartClicked: EventEmitter<{ event?: ChartEvent; active?: object[] }> = new EventEmitter<{ event?: ChartEvent; active?: object[] }>();\r\n  @Output() chartHovered: EventEmitter<{ event?: ChartEvent; active?: object[] }> = new EventEmitter<{ event?: ChartEvent; active?: object[] }>();\r\n\r\n  // The min and max dates for tasks completion (actual and planned)\r\n  minTaskDate: Date = MIN_DATE;\r\n  maxTaskDate: Date = MAX_DATE;\r\n\r\n  // The type of chart\r\n  chartType: ChartType = 'line';\r\n\r\n  // The chart configuration\r\n  chartOptions: ChartConfiguration['options'] = {\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        adapters: {\r\n          date: {\r\n            locale: enUS,\r\n          }\r\n        },\r\n        time: {\r\n          isoWeekday: true,\r\n          unit: 'day',\r\n          displayFormats: {\r\n            day: \"dd MMM yyyy\"\r\n          }\r\n        },\r\n        title: { display: false }\r\n      },\r\n      y: {\r\n        min: 0,\r\n        max: 10\r\n      }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n      }\r\n    }\r\n  };\r\n\r\n  // The chart dataset\r\n  public chartDataset: ChartDataset[] = [];\r\n\r\n  // Indicates whether to show burn down chart legend, true by default\r\n  showLegend: boolean = true;\r\n\r\n  // Chart library does not support SSR (yet?)\r\n  isBrowser = false;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {\r\n    this.isBrowser = isPlatformBrowser(this.platformId);\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.setMinMax();\r\n    this.setData();\r\n    this.setParameters();\r\n  }\r\n\r\n  // Set min/max axis values\r\n  setMinMax(): void {\r\n    this.minTaskDate = new Date(Math.min(\r\n      ...this.tasks.map(t => (t.actualCompletionDate || MAX_DATE).getTime()),\r\n      ...this.tasks.map(t => (t.plannedCompletionDate || MAX_DATE).getTime())\r\n    ));\r\n\r\n    this.maxTaskDate = new Date(Math.max(\r\n      ...this.tasks.map(t => (t.actualCompletionDate || MIN_DATE).getTime()),\r\n      ...this.tasks.map(t => (t.plannedCompletionDate || MIN_DATE).getTime())\r\n    ));\r\n\r\n    const xAxisOptions = this.chartOptions?.scales?.['x'];\r\n    if (xAxisOptions) {\r\n      (xAxisOptions as any)['time']['unit'] = this.options?.timeUnit || 'day';\r\n      xAxisOptions.min = this.options?.minDateISOString || this.minTaskDate.toISOString();\r\n      xAxisOptions.max = this.options?.maxDateISOString || this.maxTaskDate.toISOString();\r\n    }\r\n\r\n    const yAxisOptions = this.chartOptions?.scales?.['y'];\r\n    if (yAxisOptions) {\r\n      yAxisOptions.min = this.options?.minYValue || 0;\r\n      yAxisOptions.max = this.options?.maxYValue;\r\n    }\r\n  }\r\n\r\n  // Set the chart data\r\n  setData(): void {\r\n    // Group tasks by completion date\r\n    const groupedTasksByCompletionDate = this.tasks.reduce((acc, t) => {\r\n      if (t.actualCompletionDate) {\r\n        const time = t.actualCompletionDate.getTime();\r\n        acc[time] = acc[time] || { x: time, y: 0, tasks: [] };\r\n        acc[time].y += 1;\r\n        acc[time].tasks.push(t);\r\n      }\r\n      return acc;\r\n    }, {} as { [key: number]: { x: number, y: number, tasks: BurnDownChartTask[] } });\r\n\r\n    // Generate the completed task series \r\n    this.chartDataset.push(\r\n      {\r\n        label: 'Completed Tasks', type: 'bar', data: Object.values(groupedTasksByCompletionDate)\r\n      }\r\n    );\r\n\r\n    // Generate the ideal burn down of tasks\r\n    this.chartDataset.push(\r\n      {\r\n        label: 'Ideal Task Burndown', type: 'line', backgroundColor: 'gray', borderColor: 'gray', pointRadius: 0, data: [\r\n          { x: this.minTaskDate.getTime(), y: this.tasks.length },\r\n          { x: this.maxTaskDate.getTime(), y: 0 }\r\n        ]\r\n      }\r\n    );\r\n\r\n    // Generate the actual burn down of tasks\r\n    this.chartDataset.push(\r\n      {\r\n        label: 'Actual Task Burndown', type: 'line', pointRadius: 0, data: eachDayOfInterval({ start: this.minTaskDate, end: this.maxTaskDate })\r\n          .reduce((acc, d, i) => {\r\n            const time = new Date(d.toDateString()).getTime()\r\n            acc.push({ x: time, y: (i === 0 ? this.tasks.length : acc[i - 1].y) - (groupedTasksByCompletionDate[time]?.y || 0) })\r\n            return acc;\r\n          }, new Array())\r\n      });\r\n  }\r\n\r\n  // Set the chart parameters\r\n  setParameters(): void {\r\n    this.showLegend = !this.options?.hideLegend;\r\n\r\n  }\r\n\r\n  // Events\r\n  public clicked({ event, active }: { event?: ChartEvent; active?: object[] }): void {\r\n    this.chartClicked.emit({ event, active });\r\n  }\r\n\r\n  public hovered({ event, active }: { event?: ChartEvent; active?: object[] }): void {\r\n    this.chartHovered.emit({ event, active });\r\n  }\r\n}\r\n\r\n",
            "styleUrl": "./burn-down-chart.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 81,
                "jsdoctags": [
                    {
                        "name": "platformId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<canvas *ngIf=\"isBrowser\" baseChart\r\n        class=\"chart\"\r\n        [datasets]=\"chartDataset\"\r\n        [options]=\"chartOptions\"\r\n        [legend]=\"showLegend\"\r\n        [type]=\"chartType\"\r\n        (chartHover)=\"hovered($event)\"\r\n        (chartClick)=\"clicked($event)\">\r\n</canvas>\r\n"
        },
        {
            "name": "BusinessUnitsComponent",
            "id": "component-BusinessUnitsComponent-bb82090000cb63f4b182aa7db6ab9c4f04331def09c95da9f6cd34442db2ea3208958dc6cd1b829e879ef9ce5dc42f9d9300b743f2ca185b07b091f315f66a8c",
            "file": "projects/main/src/app/features/admin/business-units/business-units.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-business-units",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./business-units.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-business-units',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './business-units.component.html',\r\n  styleUrl: './business-units.component.scss'\r\n})\r\nexport class BusinessUnitsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./business-units.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Business Units</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-c3bd323da00016e22e16a3a7d43440094eeceddea5e6076a399bcaba62f8e742efe65e543735e36f9ea1bed026ab8e3c8fb60482667ae55ec324f8adfe79b9f7",
            "file": "projects/main/src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 837,
                            "end": 851,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 838,
                                "end": 846,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "CapacityComponent",
            "id": "component-CapacityComponent-677cd566a575bff514190567f94a20d3671edc9e3da3a0ee2de7ef28c4645c28e77d5cf64cd74d7d2dfde73bdd7cc75732b1099b0d915ef231b414e30e17c68a",
            "file": "projects/main/src/app/features/work/planning/capacity/capacity.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-capacity",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./capacity.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-capacity',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './capacity.component.html',\r\n  styleUrl: './capacity.component.scss'\r\n})\r\nexport class CapacityComponent {\r\n\r\n}\r\n",
            "styleUrl": "./capacity.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Capacity</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "ChangeRequestListComponent",
            "id": "component-ChangeRequestListComponent-d43bd7e09ba11513624b35f01b3763892487eb58f250ca480d7ee7c738bdda8f93752561baa9d1bdf854b5a9370feaa6cbfbf3ad1a3a07cec6648286dd4882a2",
            "file": "projects/main/src/app/features/work/change-management/change-request-list/change-request-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-change-request-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./change-request-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    { id: '1', label: 'Test' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<ChangeRequest>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openChangeRequest",
                    "args": [
                        {
                            "name": "changeRequest",
                            "type": "ChangeRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changeRequest",
                            "type": "ChangeRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "DataTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { faExternalLinkAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { DataTableComponent } from '../../../../shared/data-table/data-table.component';\r\nimport { DataTableSettings } from '../../../../shared/data-table/model/data-table-settings.model';\r\nimport { PageWrapperComponent } from '../../../../shared/page-wrapper/page-wrapper.component';\r\nimport { MenuItem } from '../../../../shared/side-bar/model/menu-item.model';\r\nimport { ChangeRequest } from '../shared/models/change-request.model';\r\nimport { PLMService } from '../shared/plm.service';\r\n\r\n@Component({\r\n  selector: 'csps-change-request-list',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, PageWrapperComponent, DataTableComponent],\r\n  templateUrl: './change-request-list.component.html',\r\n  styleUrl: './change-request-list.component.scss'\r\n})\r\nexport class ChangeRequestListComponent implements OnInit {\r\n  menuItems: MenuItem[] = [\r\n    { id: '1', label: 'Test' }\r\n  ];\r\n\r\n\r\n  settings!: DataTableSettings<ChangeRequest>;\r\n\r\n  // Used for cleaning subscription \r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private plmService: PLMService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.plmService.changeRequests$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(x => {\r\n        this.settings = {\r\n          data: x.map(y => ({ ...y, link: faExternalLinkAlt, open: faInfoCircle })),\r\n          columnDefinitions: [\r\n            { id: '1', label: 'Number', name: 'Number', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '2', label: 'Name ', name: 'Name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '3', label: 'Context', name: 'Context.Name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '4', label: 'State', name: 'State.Value', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '5', label: 'Created On', name: 'CreatedOn', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '6', label: 'Open', name: 'open', type: 'icon', visible: true, searchable: false, filterMode: 'none', click: this.openChangeRequest.bind(this) },\r\n            { id: '7', label: 'Link', name: 'link', type: 'icon', visible: true, searchable: false, filterMode: 'none', click: this.plmService.openChangeRequestInPLM.bind(this) },\r\n           ],\r\n          groupBy: []\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  openChangeRequest(changeRequest: ChangeRequest): void {\r\n    alert(JSON.stringify(changeRequest));\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./change-request-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<csps-page-wrapper [menuItems]=\"menuItems\">\r\n\r\n  <span header>Change Requests</span>\r\n\r\n  <ng-container body>\r\n    <ul class=\"nav nav-tabs mb-3 submenu\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link cursor-pointer\" [routerLinkActive]=\"['active']\" [routerLink]=\"['./requests']\">\r\n          Change Requests\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link cursor-pointer\" [routerLinkActive]=\"['active']\" [routerLink]=\"['./notices']\">\r\n          Change Notices\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link cursor-pointer\">\r\n          Etc...\r\n        </a>\r\n      </li>\r\n    </ul>\r\n\r\n    <router-outlet></router-outlet>\r\n    <csps-data-table [settings]=\"settings\"></csps-data-table>\r\n  </ng-container>\r\n\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "CommitmentComponent",
            "id": "component-CommitmentComponent-26c793757095e33ef67ad8512caddced7664e3123d07955f137692514ec630d8b0216444037838838e1eb78229fe19a29a67bf7c7801cbbabb99744e1a758b1a",
            "file": "projects/main/src/app/features/work/planning/commitment/commitment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-commitment",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./commitment.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-commitment',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './commitment.component.html',\r\n  styleUrl: './commitment.component.scss'\r\n})\r\nexport class CommitmentComponent {\r\n\r\n}\r\n",
            "styleUrl": "./commitment.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Commitment</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "CurrenciesComponent",
            "id": "component-CurrenciesComponent-cb9d5150580b1f74a4a82251a3efdc7ecdf9e595ed4a70f86450664f260ede64dc0d368c55ad79153cea286944743218f1579487cc891bbdb12d23c66a8c9038",
            "file": "projects/main/src/app/features/admin/currencies/currencies.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-currencies",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./currencies.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-currencies',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './currencies.component.html',\r\n  styleUrl: './currencies.component.scss'\r\n})\r\nexport class CurrenciesComponent {\r\n\r\n}\r\n",
            "styleUrl": "./currencies.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Currencies</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "DataTableComponent",
            "id": "component-DataTableComponent-b644c747ea6b69d440fa1db9346fcfcff0622fa223c0f7190db30db568e7e2a31cc6c233024757d9f59f265eceb6a05cbd006cff263312a5e82bfac9769409a8",
            "file": "projects/main/src/app/shared/data-table/data-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-data-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./data-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "DataTableSettings<T>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filterChanged",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "itemMoved",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "allExpanded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "allExpandedIcon",
                    "defaultValue": "faCaretDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "allSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "allSelectedIcon",
                    "defaultValue": "faSquare",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "anySelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "collapsedCache",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "columnDefinitions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumnDefinition[]",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumn[]",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "draggableRows",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "errors",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "expandableRows",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "faCaretDown",
                    "defaultValue": "faCaretDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "faCaretRight",
                    "defaultValue": "faCaretRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "faCaretUp",
                    "defaultValue": "faCaretUp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "faCheckSquare",
                    "defaultValue": "faCheckSquare",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "faExclamationCircle",
                    "defaultValue": "faExclamationCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "faFileExcel",
                    "defaultValue": "faFileExcel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "faFilePdf",
                    "defaultValue": "faFilePdf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "faFilter",
                    "defaultValue": "faFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "faGripVertical",
                    "defaultValue": "faGripVertical",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "faMinusSquare",
                    "defaultValue": "faMinusSquare",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "faSquare",
                    "defaultValue": "faSquare",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "faSquare2",
                    "defaultValue": "faSquare2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "FILTER_CACHE_ALL_SELECTED",
                    "defaultValue": "\"**ALL**\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filterCache",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[][]",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "filteredRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableRow<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "rowIdProperty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableRow<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "searchFoundIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "searchSubject$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "searchText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "selectableRows",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "selectedCache",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "selectedRowCounter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "showFilterRow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "sortPredicate",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 810
                },
                {
                    "name": "spanningColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumn[]",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "toolbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableToolbar | undefined",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "uniqueColValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "virtualScroller",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VirtualScrollerComponent",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "VirtualScrollerComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "visibleRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableRow<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 81
                }
            ],
            "methodsClass": [
                {
                    "name": "batchMethod",
                    "args": [
                        {
                            "name": "control",
                            "type": "DataTableToolbarControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 762,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "DataTableToolbarControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "buildVisibleRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "cascadeSelectionToChildren",
                    "args": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 480,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createRow",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DataTableRow<T>",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<T[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 781,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<T[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "exportToExcel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 724,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "exportToPdf",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 757,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filterRows",
                    "args": [
                        {
                            "name": "filter",
                            "type": "any[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 604,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "any[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 572,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "findPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 577,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPropertyByStringPath",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 952,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "groupRows",
                    "args": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hideRow",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "row",
                                    "type": "any",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        },
                        {
                            "name": "properties",
                            "type": "DataTableGroupBy[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DataTableRow[]",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hideRow",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "row",
                                    "type": "any",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "properties",
                            "type": "DataTableGroupBy[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveItemsInArray",
                    "args": [
                        {
                            "name": "array",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fromIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "toIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 839,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "array",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fromIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "toIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "processFilterValue",
                    "args": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 633,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refreshFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 706,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetFilter",
                    "args": [
                        {
                            "name": "defaultValues",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 685,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "defaultValues",
                            "type": "string[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "searchText",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 539,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchText",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 444,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 468,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleExpansion",
                    "args": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 519,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleExpansionAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 505,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleFilterRow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 588,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleFilterValue",
                    "args": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filterValue",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 642,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filterValue",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleRowSelection",
                    "args": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 419,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSelectAllFilterValues",
                    "args": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 651,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSelectionAll",
                    "args": [
                        {
                            "name": "forceSelectionTo",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 403,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "forceSelectionTo",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unselectRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 456,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "DataTableRow<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateSelectFilter",
                    "args": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 663,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "col",
                            "type": "DataTableColumn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "CdkDropListGroup"
                },
                {
                    "name": "CdkDropList"
                },
                {
                    "name": "CdkDrag"
                },
                {
                    "name": "VirtualScrollerModule",
                    "type": "module"
                },
                {
                    "name": "NgbDropdownModule",
                    "type": "module"
                },
                {
                    "name": "HighlightPipe",
                    "type": "pipe"
                },
                {
                    "name": "SecurePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkDrag, CdkDragDrop, CdkDropList, CdkDropListGroup } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faSquare, faSquare as faSquare2 } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCaretDown, faCaretRight, faCaretUp, faCheckSquare, faExclamationCircle, faFileExcel, faFilePdf, faFilter, faGripVertical, faMinusSquare, faSquareMinus, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { VirtualScrollerComponent, VirtualScrollerModule } from '@iharbeck/ngx-virtual-scroller';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { combineLatest, debounceTime, distinctUntilChanged, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { HighlightPipe } from '../highlight-pipe/highlight.pipe';\r\nimport { SecurePipe } from '../secure-pipe/secure.pipe';\r\nimport { DataTableBaseData } from './model/data-table-base-data.model';\r\nimport { DataTableCell } from './model/data-table-cell.model';\r\nimport { DataTableColumnDefinition } from './model/data-table-column-definition.model';\r\nimport { DataTableColumn } from './model/data-table-column.model';\r\nimport { DataTableGroupBy } from './model/data-table-group-by.model';\r\nimport { DataTableRow } from './model/data-table-row.model';\r\nimport { DataTableSettings } from './model/data-table-settings.model';\r\nimport { DataTableToolbarControl } from './model/data-table-toolbar-control.model';\r\nimport { DataTableToolbar } from './model/data-table-toolbar.model';\r\n\r\n@Component({\r\n  selector: 'csps-data-table',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, FontAwesomeModule, CdkDropListGroup, CdkDropList, CdkDrag, VirtualScrollerModule, NgbDropdownModule, HighlightPipe, SecurePipe],\r\n  templateUrl: './data-table.component.html',\r\n  styleUrl: './data-table.component.scss'\r\n})\r\nexport class DataTableComponent<T extends DataTableBaseData> implements OnInit, OnChanges, OnDestroy {\r\n  // Reference to the virtual scroller component\r\n  @ViewChild(VirtualScrollerComponent) virtualScroller!: VirtualScrollerComponent;\r\n\r\n  // The data table settings\r\n  @Input() settings!: DataTableSettings<T>;\r\n\r\n  // The event emitted when an item is moved\r\n  @Output() itemMoved: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // The event emitted when a filter is updated\r\n  @Output() filterChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // Icons\r\n  faSquare: IconDefinition = faSquare;\r\n  faSquare2: IconDefinition = faSquare2;\r\n  faCheckSquare: IconDefinition = faCheckSquare;\r\n  faMinusSquare: IconDefinition = faMinusSquare;\r\n  faCaretRight: IconDefinition = faCaretRight;\r\n  faCaretUp: IconDefinition = faCaretUp;\r\n  faCaretDown: IconDefinition = faCaretDown;\r\n  faExclamationCircle: IconDefinition = faExclamationCircle;\r\n  faFilter: IconDefinition = faFilter;\r\n  faFileExcel: IconDefinition = faFileExcel;\r\n  faFilePdf: IconDefinition = faFilePdf;\r\n  faGripVertical: IconDefinition = faGripVertical;\r\n\r\n  // The list of data columns and the corresponding list curated to account for colspans\r\n  columns: DataTableColumn[] = [];\r\n  spanningColumns: DataTableColumn[] = [];\r\n\r\n  // The list of unique column values\r\n  uniqueColValues!: { [key: string]: any };\r\n\r\n  // The data source\r\n  dataSource!: T[];\r\n\r\n  // The column definitions\r\n  columnDefinitions: DataTableColumnDefinition[] = [];\r\n\r\n  // Indicates whether rows are selectable, expandable, draggable or any row has an error\r\n  selectableRows: boolean = false;\r\n  expandableRows: boolean = false;\r\n  draggableRows: boolean = false;\r\n  errors: boolean = false;\r\n\r\n  // The property name used to uniquely identify a row\r\n  rowIdProperty!: string;\r\n\r\n  // The list of rows and their visible and filtered subset\r\n  rows!: DataTableRow<T>[];\r\n  visibleRows!: DataTableRow<T>[];\r\n  filteredRows!: DataTableRow<T>[];\r\n\r\n  // The toolbar\r\n  toolbar!: DataTableToolbar | undefined;\r\n\r\n  // Expanded status\r\n  allExpanded: boolean = true;\r\n  allExpandedIcon: IconDefinition = faCaretDown;\r\n\r\n  // Selection status\r\n  allSelected: boolean = false;\r\n  anySelected: boolean = false;\r\n  allSelectedIcon: IconDefinition = faSquare;\r\n\r\n  // Select counter\r\n  selectedRowCounter: number = 0;\r\n\r\n  // Holds search text entered by user\r\n  searchSubject$ = new Subject<string>();\r\n  searchText: string = '';\r\n  searchFoundIndex: number = 0;\r\n\r\n  // Indicates whether to show filter row\r\n  showFilterRow: boolean = false;\r\n\r\n  // Selected, collapsed and filter caches\r\n  selectedCache: { [key: string]: boolean } = {};\r\n  collapsedCache: { [key: string]: boolean } = {};\r\n  filterCache: string[][] = [];\r\n\r\n  private FILTER_CACHE_ALL_SELECTED: string = \"**ALL**\";\r\n\r\n  // Used for cleaning up subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchSubject$.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      takeUntil(this.unsubscribe)\r\n    ).subscribe(x => this.scrollTo(x, 0, 1));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // Build filter cache only if change is applied on filter\r\n    if (changes?.['settings']?.currentValue?.['defaultFilterValues']?.length && JSON.stringify(changes?.['settings']?.currentValue?.['defaultFilterValues']) !== JSON.stringify(changes?.['settings']?.previousValue?.['defaultFilterValues'])) {\r\n      this.filterCache = changes['settings'].currentValue['defaultFilterValues'];\r\n      if (!this.showFilterRow) this.toggleFilterRow();\r\n    }\r\n\r\n    this.buildRows();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  // Generate the list of all \"physical rows\" and columns for the table\r\n  buildRows(): void {\r\n    // Extract columns from the column definition settings and keep only visible ones\r\n    this.columns = this.settings.columnDefinitions\r\n      .filter(c => c.visible)\r\n      .map(c => ({ ...c, cellAlignment: c.cellAlignment || 'center', colspan: c.columnColspan || 1, filterSubject$: new Subject<string[]>() }));\r\n\r\n    // Extract the list of columns curated for colspans\r\n    let skip = 0;\r\n    this.spanningColumns = this.columns.reduce((acc, x) => {\r\n      if (x.colspan && x.colspan > 1) {\r\n        skip = x.colspan - 1;\r\n        acc.push(x);\r\n      } else if (skip === 0) {\r\n        acc.push(x);\r\n      }\r\n      else {\r\n        skip -= 1;\r\n      }\r\n      return acc;\r\n    }, new Array<DataTableColumn>());\r\n\r\n    // Create temporary object to store unique column values\r\n    this.uniqueColValues = this.columns\r\n      .filter(c => c.filterMode === 'select' || c.filterMode === 'numeric' || c.filterMode === 'icon')\r\n      .reduce<{ [key: string]: any }>((acc, c) => {\r\n        c.filterValues = [];\r\n        acc[c.name] = {};\r\n        return acc;\r\n      }, {});\r\n\r\n    // EXtract the toolbar\r\n    this.toolbar = this.settings.toolBar;\r\n\r\n    // Set the row Id property\r\n    const rowIdProperty = this.settings.rowIdProperty || 'id';\r\n\r\n    // Perform grouping if required and create rows\r\n    if (this.settings.groupBy?.length)\r\n      this.rows = this.groupRows(this.settings.data.map(d => ({ ...d, rowId: d[rowIdProperty] })), this.settings.hideRow || ((row: any) => false), this.settings.groupBy);\r\n    else {\r\n      this.rows = this.settings.data.map((d, i) => this.createRow({ ...d, level: 1, rowId: d[rowIdProperty] }, i));\r\n    }\r\n\r\n    // Sort filter values\r\n    this.columns.filter(c => c.filterValues).forEach(c => {\r\n      c.filterValues?.sort((a, b) => a.value > b.value ? 1 : (a.value < b.value ? -1 : 0));\r\n    });\r\n\r\n    // Subscribe to filter event emitters, setting their default values to an empty array\r\n    const observables = this.columns.map((x, i) => x.filterSubject$.pipe(startWith([])));\r\n\r\n    // TODO Cedric Do we need to kill the subscription on ngOnChanges?\r\n    combineLatest(...observables).pipe(\r\n      debounceTime(700),\r\n      distinctUntilChanged(),\r\n      takeUntil(this.unsubscribe)\r\n    ).subscribe(x => this.filterRows(x));\r\n\r\n    // Reset the filter\r\n    this.resetFilter(this.filterCache);\r\n\r\n    // Build visible rows\r\n    this.buildVisibleRows();\r\n\r\n    // Make the rows draggable as specified\r\n    this.draggableRows = !!this.settings.draggableRows;\r\n  }\r\n\r\n  // Extract from the list of rows, only those that are not collapsed\r\n  buildVisibleRows() {\r\n    // Visual rows are only those rows that are not collapsed\r\n    let collapsedLevel = 99;\r\n    this.visibleRows = this.rows.reduce((acc: DataTableRow<T>[], x) => {\r\n      if (x.level <= collapsedLevel) {\r\n        acc.push(x);\r\n        collapsedLevel = !x.expanded ? x.level : 99;\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    // Force rows to filter\r\n    if (this.showFilterRow)\r\n      this.refreshFilter();\r\n    else\r\n      this.filteredRows = this.visibleRows;\r\n\r\n    // Compute table level info\r\n    this.errors = this.visibleRows.some(x => x.error);\r\n    this.selectableRows = this.visibleRows.some(x => x.selectable);\r\n    this.expandableRows = this.visibleRows.some(x => x.expandable);\r\n  }\r\n\r\n\r\n  // Group rows based on the provided list of properties\r\n  groupRows(data: T[], hideRow: (row: any) => boolean, properties: DataTableGroupBy[]): DataTableRow<T>[] {\r\n    // Helper method: multiPropertySorter\r\n    // A multi-property sorted allowing for an array to be sorted based on multiple properties\r\n    const multiPropertySorter: (props: string[]) => (a: any, b: any) => number = (props: string[]) => {\r\n      return (a: any, b: any) => {\r\n        for (let i = 0; i < props.length; i++) {\r\n          const aVal = this.getPropertyByStringPath(a, props[i]);\r\n          const bVal = this.getPropertyByStringPath(b, props[i]);\r\n          if (aVal !== bVal)\r\n            return aVal > bVal ? 1 : -1;\r\n        }\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    // Helper function: groupBy\r\n    // Group an array by a specified property\r\n    const groupBy: (arr: any[], prop: { key: string, orderBy: string[], groupProperties: string[] }) => { [key: string]: { info: any, values: any[] } } = (arr: any[], prop: { key: string, orderBy: string[], groupProperties: string[] }) => {\r\n      return arr.reduce((acc, x) => {\r\n        const keyVal = this.getPropertyByStringPath(x, prop.key);\r\n        if (!acc[keyVal]) {\r\n          acc[keyVal] = {\r\n            info: [prop.key, ...prop.orderBy, ...prop.groupProperties].reduce((acc2, y) => {\r\n              // Get the value\r\n              const v = this.getPropertyByStringPath(x, y);\r\n              // Deal with nested properties\r\n              const nestedProps = y.split('.');\r\n              nestedProps.reduce((o, p, i) => { o[p] = o[p] || (i === nestedProps.length - 1 ? v : {}); return o[p]; }, acc2);\r\n              // Set the property key value as the row Id\r\n              if (y === prop.key)\r\n                acc2.rowId = v;\r\n              // Return\r\n              return acc2;\r\n            }, {} as any),\r\n            values: []\r\n          }\r\n        }\r\n        acc[keyVal].values.push(x);\r\n        return acc;\r\n      }, {});\r\n    };\r\n\r\n    // Helper function: nest\r\n    // Perform multi-level group by on a source array and return the grouped sorted array\r\n    // arr: The array to perform group by upon\r\n    // props: The list of prop to use for group by\r\n    // level: The depth in the grouped array\r\n    // parent: The parent group. Null if it does not exist\r\n    const nest: (arr: any[], props: { key: string, orderBy: string[], showUndefined: boolean, groupProperties: string[] }[], level: number, parent: any) => any[] = (arr: any[], props: { key: string, orderBy: string[], showUndefined: boolean, groupProperties: string[] }[], level: number, parent: any) => {\r\n      if (!props || !props.length)\r\n        return arr.map(x => ({ ...x, level: level, parent: parent }));\r\n      const [prop, ...others] = props;\r\n      const group = groupBy(arr, prop);\r\n      return Object.keys(group)\r\n        .filter(x => prop.showUndefined || x !== 'undefined')\r\n        .reduce((acc: any[], k) => { acc.push({ ...group[k].info, level: level, parent: parent, values: nest(group[k].values, others, level + 1, group[k].info) }); return acc; }, [])\r\n        .sort(multiPropertySorter(prop.orderBy));\r\n    };\r\n\r\n    // Helper method: traverseDepthFirst\r\n    // Traverse the nested arrays depth first\r\n    const traverseDepthFirst: (arr: any[], childrenProperty: string, cb: (x: any) => void) => void = (arr: any[], childrenProperty: string, cb: (x: any) => void) => {\r\n      // Make a copy of the array\r\n      const stack = arr.slice(0);\r\n      // Traverse the nested arrays\r\n      while (stack.length) {\r\n        // Shift element from stack\r\n        var element = stack.shift();\r\n\r\n        // Invoke callback\r\n        cb(element);\r\n\r\n        // Add child element to stack if they exist\r\n        element && element[childrenProperty] && stack.unshift(...element[childrenProperty]);\r\n      }\r\n    }\r\n\r\n    // Nest the rows\r\n    const nestedRows = nest(data, properties.map(x => ({ key: x.property, orderBy: x.orderBy, showUndefined: !!x.showUndefined, groupProperties: x.columns.map(y => y.name) })), 1, null);\r\n\r\n    // Reset the rows array\r\n    const rows: DataTableRow<T>[] = [];\r\n\r\n    // Traverse the nested rows and build the data table rows\r\n    traverseDepthFirst(nestedRows, 'values', (r) => {\r\n      if (!hideRow(r))\r\n        rows.push(this.createRow(r, rows.length));\r\n    });\r\n\r\n    // Return\r\n    return rows;\r\n  }\r\n\r\n\r\n  // Create row\r\n  createRow(data: T & { level: number, rowId: any }, index: number): DataTableRow<T> {\r\n    const groupByRowClass = data.level > this.settings.groupBy.length ? null : this.settings.groupBy[data.level - 1].rowClass;\r\n    return {\r\n      ...data,\r\n      physicalIndex: index,\r\n      selectable: !!this.settings.selectableRows,\r\n      selected: !!this.selectedCache[data.rowId],\r\n      selectedIcon: !!this.selectedCache[data.rowId] ? faCheckSquare : this.faSquare2,\r\n      expandable: data.level <= this.settings.groupBy.length,\r\n      expanded: !this.collapsedCache[data.rowId],\r\n      expandedIcon: !this.collapsedCache[data.rowId] ? faCaretDown : faCaretRight,\r\n      error: false, // TODO  \r\n      errorMessage: '', // TODO\r\n      class: data.level > this.settings.groupBy.length ?\r\n        (typeof data.rowClass === 'function' ? data.rowClass() : data.rowClass) || '' :\r\n        (typeof groupByRowClass === 'function' ? groupByRowClass(data) : groupByRowClass) || '',\r\n      // TODO: Clean up functions below\r\n      cells: data.level > this.settings.groupBy.length ? this.columns.map(c => {\r\n        // Compute cell value\r\n        const val = this.getPropertyByStringPath(data, c.name);\r\n\r\n        // Add value to column filter value and mark them as selected by default\r\n        if ((c.filterMode === 'select' || c.filterMode === 'numeric') && c.filterValues && !this.uniqueColValues[c.name][val]) {\r\n          this.uniqueColValues[c.name][val] = true;\r\n          c.filterValues.push({ value: val, selected: true });\r\n        }\r\n\r\n        // Add values of icon into column filter and mark them as selected by default\r\n        if (c.filterMode === 'icon' && c.filterValues && !this.uniqueColValues[c.name][val.iconName]) {\r\n          this.uniqueColValues[c.name][val.iconName] = true;\r\n          c.filterValues.push({ value: val.iconName, selected: true });\r\n        }\r\n\r\n        // Return\r\n        return {\r\n          value: val,\r\n          type: c.type,\r\n          class: (typeof c.cellClass === 'function' ? c.cellClass(data) : c.cellClass) || '',\r\n          alignment: c.cellAlignment || 'center',\r\n          prop: c.name,\r\n          colspan: 1,\r\n          canClick: !!c.click,\r\n          click: () => { if (c.click) c.click(data); }\r\n        }\r\n      }) :\r\n        this.settings.groupBy[data.level - 1].columns.map(c => {\r\n          // Compute cell value\r\n          const val = this.getPropertyByStringPath(data, c.name);\r\n\r\n          // Return\r\n          return {\r\n            value: val,\r\n            type: c.type,\r\n            class: (typeof c.class === 'function' ? c.class(data) : c.class) || '',\r\n            alignment: c.alignment || 'center',\r\n            prop: c.name,\r\n            colspan: c.colspan,\r\n            canClick: !!c.click,\r\n            click: () => { if (c.click) c.click(data); }\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // ---------------------------------------------------\r\n  // Selection\r\n  // ---------------------------------------------------\r\n  // Toggle all selections\r\n  toggleSelectionAll(forceSelectionTo?: boolean): void {\r\n    if (forceSelectionTo === undefined) {\r\n      if (this.allSelected === true)\r\n        this.clearSelection();\r\n      else\r\n        this.selectAll();\r\n    }\r\n    else if (forceSelectionTo === true) {\r\n      this.selectAll();\r\n    }\r\n    else {\r\n      this.clearSelection();\r\n    }\r\n  }\r\n\r\n  // Toggle single row selection\r\n  toggleRowSelection(row: DataTableRow<T>): void {\r\n    if (row.selected)\r\n      this.unselectRow(row);\r\n    else\r\n      this.selectRow(row);\r\n\r\n    // Cascade to children\r\n    if (this.settings.cascadeParentSelectionToChildren)\r\n      this.cascadeSelectionToChildren(row);\r\n\r\n  }\r\n\r\n  // Clear all selections\r\n  clearSelection(): void {\r\n    this.filteredRows.forEach(r => {\r\n      r.selected = false;\r\n      r.selectedIcon = faSquare;\r\n    });\r\n    this.allSelected = false;\r\n    this.anySelected = false;\r\n    this.allSelectedIcon = faSquare;\r\n    this.selectedRowCounter = 0;\r\n  }\r\n\r\n  // Select all rows\r\n  selectAll(): void {\r\n    this.filteredRows.forEach(r => {\r\n      r.selected = true;\r\n      r.selectedIcon = faCheckSquare;\r\n    });\r\n    this.allSelected = true;\r\n    this.anySelected = true;\r\n    this.allSelectedIcon = faCheckSquare;\r\n    this.selectedRowCounter = this.filteredRows.length;\r\n  }\r\n\r\n  // Unselect a row\r\n  unselectRow(row: DataTableRow<T>): void {\r\n    row.selected = false;\r\n    row.selectedIcon = faSquare;\r\n\r\n    this.allSelected = false;\r\n    this.anySelected = this.rows.some(r => r.selected);\r\n\r\n    this.allSelectedIcon = this.anySelected ? faSquareMinus : faSquare;\r\n    this.selectedRowCounter--;\r\n  }\r\n\r\n  // Select a single row\r\n  selectRow(row: DataTableRow<T>): void {\r\n    row.selected = true;\r\n    row.selectedIcon = faCheckSquare;\r\n\r\n    this.allSelected = this.rows.every(r => r.selected);\r\n    this.anySelected = true;\r\n\r\n    this.allSelectedIcon = this.allSelected ? faCheckSquare : faSquareMinus;\r\n    this.selectedRowCounter++\r\n  }\r\n\r\n  // Toggle children selection\r\n  cascadeSelectionToChildren(row: DataTableRow<T>): void {\r\n    let i = row.physicalIndex + 1;\r\n    const level = row.level;\r\n    while (i < this.rows.length && this.rows[i].level > level) {\r\n      this.rows[i].selected = row.selected;\r\n      this.rows[i].selectedIcon = this.rows[i].selected ? faCheckSquare : this.faSquare;\r\n      this.selectedCache[this.rows[i].rowId] = row.selected;\r\n      i++;\r\n    }\r\n\r\n    if (row.selected) {\r\n      this.allSelected = this.rows.every(r => r.selected);\r\n      this.allSelectedIcon = this.allSelected ? faCheckSquare : faSquareMinus;\r\n    } else {\r\n      this.anySelected = this.rows.some(r => r.selected);\r\n      this.allSelectedIcon = this.anySelected ? faSquareMinus : faSquare;\r\n    }\r\n\r\n    this.selectedRowCounter = this.rows.filter(r => r.selected).length;\r\n  }\r\n\r\n  // ---------------------------------------------------\r\n  // Expand\r\n  // ---------------------------------------------------\r\n  // Toggle expansion status for all rows\r\n  toggleExpansionAll() {\r\n    this.allExpanded = !this.allExpanded;\r\n    this.allExpandedIcon = this.allExpanded === true ? faCaretDown : faCaretRight;\r\n\r\n    this.rows.forEach(x => {\r\n      x.expanded = this.allExpanded;\r\n      x.expandedIcon = x.expanded === true ? faCaretDown : faCaretRight;\r\n      this.collapsedCache[x.rowId] = !x.expanded;\r\n    });\r\n\r\n    this.buildVisibleRows();\r\n  }\r\n\r\n  // Toggle expansion status for a single row\r\n  toggleExpansion(row: DataTableRow<T>) {\r\n    row.expanded = !row.expanded;\r\n    row.expandedIcon = row.expanded === true ? faCaretDown : faCaretRight;\r\n    this.collapsedCache[row.rowId] = !row.expanded;\r\n\r\n    if (!row.expanded)\r\n      this.allExpanded = false;\r\n    else\r\n      this.allExpanded = this.rows.every(x => x.expanded);\r\n\r\n    this.allExpandedIcon = this.allExpanded === true ? faCaretDown : faCaretRight;\r\n    this.buildVisibleRows();\r\n  }\r\n\r\n  // ---------------------------------------------------\r\n  // Search\r\n  // ---------------------------------------------------\r\n\r\n\r\n  // Locate the first occurence of the search text and scroll to that corresponding item\r\n  scrollTo(searchText: string, startIndex: number, direction: number): void {\r\n    // Exit if searchText is null\r\n    if (!searchText)\r\n      return;\r\n\r\n    // Default direction is forward\r\n    direction = direction || 1;\r\n\r\n    // Ensure startIndex is valid\r\n    startIndex = startIndex || 0;\r\n\r\n    // Convert searchText to lowercase for easier search\r\n    searchText = searchText.toLowerCase();\r\n\r\n    // Build search predicate\r\n    const cols = this.settings.columnDefinitions.filter(x => x.searchable && x.visible);\r\n    const groupedByCols = this.settings.groupBy.reduce((acc, x) => { acc.push(...x.columns.filter(y => y.searchable)); return acc; }, new Array<any>());\r\n    const allSearchableColumns = cols.concat(groupedByCols);\r\n    const predicate = (x: { cells: DataTableCell[] }) => allSearchableColumns.some(c => (x.cells.find(y => y.prop === c.name)?.value || '').toLowerCase().includes(searchText));\r\n\r\n    // Locate the index of the first element that matches the search text\r\n    const idx = direction === 1 ?\r\n      this.visibleRows.slice(startIndex).findIndex(predicate) + startIndex :\r\n      this.visibleRows.slice(0, startIndex).map(predicate).lastIndexOf(true);\r\n\r\n    if (idx > -1) {\r\n      this.searchFoundIndex = idx;\r\n      const item = this.visibleRows[this.searchFoundIndex];\r\n      this.virtualScroller.scrollInto(item, true, -34);\r\n    }\r\n  }\r\n\r\n  // Find the next occurence of the search text and scroll to that corresponding item\r\n  findNext(): void {\r\n    this.scrollTo(this.searchText, this.searchFoundIndex + 1, 1);\r\n  }\r\n\r\n  // Find the previous occurence of the search text and scroll to that corresponding item\r\n  findPrevious(): void {\r\n    this.scrollTo(this.searchText, this.searchFoundIndex, -1);\r\n  }\r\n\r\n\r\n  // ---------------------------------------------------\r\n  // Filter\r\n  // ---------------------------------------------------\r\n\r\n\r\n  // Toggle the filter row\r\n  toggleFilterRow(): void {\r\n    this.showFilterRow = !this.showFilterRow;\r\n\r\n    if (!this.showFilterRow) {\r\n      // Reset the filter\r\n      this.resetFilter();\r\n      // Allow drag and drop\r\n      this.draggableRows = !!this.settings.draggableRows;\r\n    }\r\n    else {\r\n      // Disabled drag and drop when filtering the table\r\n      this.draggableRows = false;\r\n    }\r\n  }\r\n\r\n  // Filter the rows based on the provided filter\r\n  filterRows(filter: any[][]): void {\r\n    // Update the filter cache\r\n    this.filterCache = filter;\r\n\r\n    // Filter the rows\r\n    const filterPredicate = (x: DataTableRow<T>) =>\r\n      x.level <= this.settings.groupBy.length ||\r\n      this.columns\r\n        .every((c, i) =>\r\n          !filter[i] ||\r\n          !filter[i].length ||\r\n          filter[i][0] === this.FILTER_CACHE_ALL_SELECTED ||\r\n          filter[i].some(y =>\r\n            c.filterMode === 'numeric' || c.filterMode === 'select' || c.filterMode === 'icon' ?\r\n              (c.filterMode === 'icon' ? x.cells[i].value.iconName === y : x.cells[i].value === y) :\r\n              (x.cells[i].value || '').toLowerCase().includes(y.toLowerCase()))\r\n        )\r\n\r\n    this.filteredRows = this.visibleRows.filter(filterPredicate);\r\n\r\n    // Remove selection of non-visible rows\r\n    this.rows.filter(r => r.selected && !this.filteredRows.includes(r)).forEach(r => this.toggleRowSelection(r));\r\n    // TODO: Remove group rows if content is empty\r\n\r\n    // Emit filter changes\r\n    if (this.showFilterRow) this.filterChanged.emit({ data: this.filterCache });\r\n  }\r\n\r\n  // Process filter value for fields with a free text filter\r\n  processFilterValue(col: DataTableColumn, value: string) {\r\n    // Update the filter text\r\n    col.filterText = value;\r\n\r\n    // Emit\r\n    col.filterSubject$.next([value]);\r\n  }\r\n\r\n  // Toggle filter value for fields with dropdown filter\r\n  toggleFilterValue(col: DataTableColumn, filterValue: { value: string, selected: boolean }): void {\r\n    // Update the selected value status\r\n    filterValue.selected = !filterValue.selected;\r\n\r\n    // Update the filter\r\n    this.updateSelectFilter(col);\r\n  }\r\n\r\n  // Toggle selection of all values in a given filter\r\n  toggleSelectAllFilterValues(col: DataTableColumn) {\r\n    // Update the selected status\r\n    if (col.filterStatus !== 'all')\r\n      col.filterValues?.forEach(x => { x.selected = true; });\r\n    else\r\n      col.filterValues?.forEach(x => { x.selected = false; });\r\n\r\n    // Update the filter\r\n    this.updateSelectFilter(col);\r\n  }\r\n\r\n  // Update selection of values in a given filter\r\n  updateSelectFilter(col: DataTableColumn) {\r\n    // Retrieve all selected values\r\n    const selectedValues = col.filterValues?.filter(x => x.selected).map(x => x.value) || [];\r\n\r\n    // Update the filter status\r\n    col.filterStatus = selectedValues.length === col.filterValues?.length ?\r\n      'all' :\r\n      selectedValues.length === 0 ? 'none' : 'indeterminate';\r\n\r\n    // Update the filter text\r\n    col.filterText = selectedValues.length === col.filterValues?.length ?\r\n      'All selected' :\r\n      selectedValues.length === 0 ? 'None selected' : `${selectedValues.length} selected`;\r\n\r\n    // Emit\r\n    if (col.filterStatus === 'all')\r\n      col.filterSubject$.next([this.FILTER_CACHE_ALL_SELECTED]);\r\n    else\r\n      col.filterSubject$.next(selectedValues);\r\n  }\r\n\r\n  // Reset the filter by applying optional default values\r\n  resetFilter(defaultValues?: string[][]): void {\r\n    // Emit filter default values\r\n    this.columns.forEach((x, i) => {\r\n      if (x.filterMode === 'select' || x.filterMode === 'numeric' || x.filterMode === 'icon') {\r\n        if (defaultValues?.[i] && defaultValues[i].length && defaultValues[i][0] !== this.FILTER_CACHE_ALL_SELECTED)\r\n          x.filterValues?.forEach(y => y.selected = defaultValues[i].includes(y.value));\r\n        else // Reset the selected values\r\n          x.filterValues?.forEach(y => y.selected = true);\r\n        // Update the filter\r\n        this.updateSelectFilter(x);\r\n      }\r\n      else if (x.filterMode === 'text') {\r\n        // Update the filter\r\n        this.processFilterValue(x, defaultValues?.[i]?.[0] || '');\r\n      }\r\n      else if (x.filterMode === 'none')\r\n        x.filterSubject$.next([]);\r\n    });\r\n  }\r\n\r\n  // Refresh the filter\r\n  refreshFilter(): void {\r\n    // Emit filter default values\r\n    this.columns.forEach((x, i) => {\r\n      if (x.filterMode === 'select' || x.filterMode === 'numeric') {\r\n        // Update the filter\r\n        this.updateSelectFilter(x);\r\n      }\r\n      else if (x.filterMode === 'text') {\r\n        // Update the filter\r\n        this.processFilterValue(x, x.filterText || '');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ---------------------------------------------------\r\n  // Export\r\n  // ---------------------------------------------------\r\n  // Export to Excel\r\n  exportToExcel() {\r\n    // Generate the list of columns for excel export\r\n    // Only export columns of type 'text' when they are not explicit marked for exclusion\r\n    // First add the columns from the grouping level and then the columns from the main table\r\n    const columns = [\r\n      ...this.settings.groupBy.reduce((acc, x) => { acc.push(...x.columns.filter(y => y.type === 'text' && y.name && !y.excludeFromExcelExport)); return acc; }, new Array()).map(x => ({ name: x.name, label: x.excelLabel || '!!Missing!!' })),\r\n      ...this.settings.columnDefinitions.filter(x => x.type === 'text' && x.name && !x.excludeFromExcelExport).map(x => ({ name: x.name, label: x.excelLabel || x.label || '!!Missing!!' }))\r\n    ];\r\n\r\n    // Create the Excel header\r\n    const headers = [columns.map(x => x.label)];\r\n\r\n    // Create the Excel rows\r\n    const rows = this.settings.data.reduce((acc, r) => {\r\n      acc.push(columns.map(x => this.getPropertyByStringPath(r, x.name)))\r\n      return acc;\r\n    }, [] as string[][]);\r\n\r\n    // Leave the table title undefined\r\n    const title = undefined;\r\n\r\n    // Leave the Excel tab name undefined, so that default \"Sheet1\" name is used\r\n    const name = undefined;\r\n\r\n    // Create the file name\r\n    const fileName = 'Data table.xlsx';\r\n\r\n    // TODO\r\n    //this.excelService.generateExcel([{ name, title, headers, rows }], fileName);\r\n  }\r\n\r\n  // Export to Pdf\r\n  // TODO Cedric\r\n  exportToPdf() {\r\n    alert('Pdf Export...TODO');\r\n  }\r\n\r\n  // Execute batch method\r\n  batchMethod(control: DataTableToolbarControl): void {\r\n    // Retrieve selected rows\r\n    const selectedRows = this.rows.filter(x => x.selected);\r\n\r\n    // Execute batch method\r\n    control.callback(selectedRows);\r\n\r\n    // Clear selection if required \r\n    if (!control.preserveSelection) {\r\n      this.selectedCache = {};\r\n      this.toggleSelectionAll(false);\r\n    }\r\n  }\r\n\r\n\r\n  // ---------------------------------------------------\r\n  // Drag and Drop\r\n  // ---------------------------------------------------\r\n  // Dropped event handler\r\n  drop(event: CdkDragDrop<T[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      // The table is using virtualization so we need to correct the index\r\n      // Retrieve the virtualization index\r\n      const viewPortStartIndex = this.virtualScroller.viewPortInfo.startIndex;\r\n\r\n      // Offset the index to take into consideration virtualization\r\n      event.previousIndex += viewPortStartIndex;\r\n      event.currentIndex += viewPortStartIndex;\r\n\r\n      // Retrieve the physical indexes\r\n      const fromPhysical = this.filteredRows[event.previousIndex].physicalIndex;\r\n      let toPhysical = this.filteredRows[event.currentIndex].physicalIndex;\r\n\r\n      // Retrieve direction\r\n      const forward = toPhysical > fromPhysical;\r\n\r\n      // Adjust the index if the \"to\" row is collpased\r\n      if (forward && !this.filteredRows[event.currentIndex].expanded && event.currentIndex < this.filteredRows.length - 1)\r\n        toPhysical = this.filteredRows[event.currentIndex + 1].physicalIndex - 1;\r\n\r\n      this.moveItemsInArray(this.rows, fromPhysical, toPhysical);\r\n    } else {\r\n      // TODO: do we need to drag in datatable from outside container\r\n      console.log('dragged in from other container');\r\n    }\r\n  }\r\n\r\n  // Ensure that the move is valid\r\n  sortPredicate = (index: number, item: CdkDrag<DataTableRow<T>>, drop: any) => {\r\n    // The table is using virtualization so we need to correct the index\r\n    // Retrieve the virtualization index\r\n    const viewPortStartIndex = this.virtualScroller.viewPortInfo.startIndex;\r\n\r\n    // Offset the index to take into consideration virtualization\r\n    index += viewPortStartIndex;\r\n\r\n    const itemLevel = item.data.level;\r\n\r\n    // Can drop anything at the end of the list\r\n    if (index === drop.data.length - 1) return true;\r\n\r\n    // Can drop only level 1 at the start of the list\r\n    if (index === 0) return itemLevel === 1;\r\n\r\n    // Adjust index based on drag direction\r\n    const delta = item.data.physicalIndex > drop.data[index].physicalIndex ? 0 : 1;\r\n\r\n    const dropAfterLevel = drop.data[index - 1 + delta].level;\r\n    const dropBeforeLevel = drop.data[index + delta].level;\r\n\r\n    // Otherwise, ensure that we are dropping in a parent of appropriate level\r\n    return itemLevel === dropBeforeLevel ||                               // Drop just before a sibling\r\n      (itemLevel <= dropAfterLevel && itemLevel >= dropBeforeLevel) ||    // Drop just after a child level AND just before a sibling/parent level\r\n      (itemLevel === dropAfterLevel + 1);                                 // Drop in first place in a parent\r\n  }\r\n\r\n  // Move row with children and grandchildren together to the new position\r\n  moveItemsInArray(array: any[], fromIndex: number, toIndex: number) {\r\n    // Make sure from and to are within boundary of the array\r\n    const from = Math.max(0, Math.min(array.length - 1, fromIndex));\r\n    const to = Math.max(0, Math.min(array.length - 1, toIndex));\r\n\r\n    // Exit if no change\r\n    if (from === to) return;\r\n\r\n    // Keep a copy of the moved items\r\n    const movedItem = array[fromIndex];\r\n\r\n    // Extract the rows to move\r\n    const rowsToMove = [array[from]];\r\n    let i = fromIndex + 1;\r\n    const level = array[fromIndex].level;\r\n    while (i < array.length && array[i].level > level) {\r\n      rowsToMove.push(array[i]);\r\n      i++;\r\n    }\r\n\r\n    // Initialize surrounding siblings\r\n    let movedAfterSibling;\r\n    let movedBeforeSibling;\r\n\r\n    // Compute direction\r\n    const forward = to > from;\r\n\r\n    if (forward) {\r\n      // Extract moveAfterSibling and moveBeforeSibling\r\n      let idx = toIndex;\r\n      while (idx >= 0 && array[idx].level > array[fromIndex].level) {\r\n        idx--;\r\n      }\r\n      if (idx >= 0 && array[idx].level == array[fromIndex].level)\r\n        movedAfterSibling = array[idx];\r\n\r\n\r\n      idx = toIndex + 1\r\n      while (idx < array.length && array[idx].level > array[fromIndex].level) {\r\n        idx++;\r\n      }\r\n      if (idx < array.length && array[idx].level == array[fromIndex].level)\r\n        movedBeforeSibling = array[idx];\r\n\r\n      // Shift move\r\n      let current = from;\r\n      let stop = to - rowsToMove.length + 1;\r\n      while (current < stop) {\r\n        array[current] = array[current + rowsToMove.length];\r\n        array[current].physicalIndex = current;\r\n        current++;\r\n      }\r\n      // Paste\r\n      let j = 0;\r\n      while (current < to + 1) {\r\n        array[current] = rowsToMove[j++];\r\n        array[current].physicalIndex = current;\r\n        current++;\r\n      }\r\n    } else {\r\n      // Extract moveAfterSibling and moveBeforeSibling\r\n      let idx = toIndex - 1;\r\n      while (idx >= 0 && array[idx].level > array[fromIndex].level) {\r\n        idx--;\r\n      }\r\n      if (idx >= 0 && array[idx].level == array[fromIndex].level)\r\n        movedAfterSibling = array[idx];\r\n\r\n\r\n      idx = toIndex\r\n      while (idx < array.length && array[idx].level > array[fromIndex].level) {\r\n        idx++;\r\n      }\r\n      if (idx < array.length && array[idx].level == array[fromIndex].level)\r\n        movedBeforeSibling = array[idx];\r\n\r\n      // Shift move\r\n      let current = from;\r\n      let stop = to;\r\n      while (current > stop) {\r\n        current--;\r\n        array[current + rowsToMove.length] = array[current];\r\n        array[current + rowsToMove.length].physicalIndex = current + rowsToMove.length;\r\n      }\r\n      // Paste\r\n      let j = 0;\r\n      while (current < to + rowsToMove.length) {\r\n        array[current] = rowsToMove[j++];\r\n        array[current].physicalIndex = current;\r\n        current++;\r\n      }\r\n    }\r\n\r\n    // Find the new parent row\r\n    let index = to;\r\n    let newParentData;\r\n    // Parent row is always upper from the row\r\n    while (index >= 0) {\r\n      if (array[index].level === movedItem.level - 1) {\r\n        newParentData = array[index];\r\n        break;\r\n      }\r\n      index--;\r\n    }\r\n    this.itemMoved.emit({ data: movedItem, newParentData: newParentData, from: from, to: to, movedAfterSibling: movedAfterSibling, movedBeforeSibling: movedBeforeSibling });\r\n    this.buildVisibleRows();\r\n  }\r\n\r\n  // ---------------------------------------------------\r\n  // Helper\r\n  // ---------------------------------------------------\r\n\r\n  // Retrieve the value of a nested property\r\n  getPropertyByStringPath(obj: any, path: string) {\r\n    path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\r\n    path = path.replace(/^\\./, '');           // strip a leading dot\r\n    var a = path.split('.');\r\n    for (var i = 0, n = a.length; i < n; ++i) {\r\n      var k = a[i];\r\n      if (obj && k in obj) {\r\n        obj = obj[k];\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n}\r\n",
            "styleUrl": "./data-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 115
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<div class=\"row g-0 toolbar\" [ngClass]=\"{arrowed:anySelected, draggable: draggableRows}\">\r\n  <div class=\"col py-2 px-3\" *ngIf=\"!anySelected\"></div>\r\n  <div class=\"col py-2 px-3\" *ngIf=\"anySelected\">\r\n    <ng-container *ngFor=\"let control of toolbar?.left\">\r\n      <button *ngIf=\"control.type === 'button'\" type=\"button\" class=\"btn btn-sm btn-link white-text\" (click)=\"batchMethod(control)\">{{control.name}}</button>\r\n\r\n      <div class=\"btn-group\" *ngIf=\"control.type === 'splitButton'\">\r\n        <button type=\"button\" class=\"btn btn-sm btn-link white-text\" (click)=\"batchMethod(control)\"><fa-icon *ngIf=\"control.icon\" [icon]=\"control.icon\" [fixedWidth]=\"true\"></fa-icon> {{control.name}}</button>\r\n        <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\r\n          <button class=\"btn btn-sm dropdown-toggle-split btn-link white-text\" ngbDropdownToggle></button>\r\n          <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n            <button ngbDropdownItem *ngFor=\"let item of control.controls\" (click)=\"batchMethod(item)\">{{item.name}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"dropdown d-inline-block\" *ngIf=\"control.type === 'dropdown'\" ngbDropdown placement=\"bottom-left\">\r\n        <button class=\"btn btn-sm white-text\" ngbDropdownToggle>{{control.name}}&nbsp;</button>\r\n        <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n          <button ngbDropdownItem *ngFor=\"let item of control.controls\" (click)=\"batchMethod(item)\">{{item.name}}</button>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"col-auto py-2 mx-1\" *ngFor=\"let control of toolbar?.right\">\r\n    <button *ngIf=\"control.type === 'button'\" type=\"button\" class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" (click)=\"control.callback()\"><fa-icon *ngIf=\"control.icon\" [icon]=\"control.icon\" [fixedWidth]=\"true\"></fa-icon> {{control.name}}</button>\r\n\r\n    <div class=\"btn-group\" *ngIf=\"control.type === 'splitButton'\">\r\n      <button type=\"button\" class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" (click)=\"control.callback()\"><fa-icon *ngIf=\"control.icon\" [icon]=\"control.icon\" [fixedWidth]=\"true\"></fa-icon> {{control.name}}</button>\r\n      <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\r\n        <button class=\"btn btn-sm dropdown-toggle-split\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" ngbDropdownToggle></button>\r\n        <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n          <button ngbDropdownItem *ngFor=\"let item of control.controls\" (click)=\"item.callback()\">{{item.name}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"dropdown d-inline-block\" *ngIf=\"control.type === 'dropdown'\" ngbDropdown placement=\"bottom-right\">\r\n      <button class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" ngbDropdownToggle>{{control.name}}&nbsp;</button>\r\n      <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n        <button ngbDropdownItem *ngFor=\"let item of control.controls\" (click)=\"item.callback()\">{{item.name}}</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"control.type === 'search'\" class=\"input-group\">\r\n      <input type=\"search\" placeholder=\"Search...\" class=\"form-control form-control-sm\" [(ngModel)]=\"searchText\" (input)=\"searchSubject$.next($any($event.target).value)\" />\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" type=\"button\" (click)=\"findPrevious()\"><fa-icon [icon]=\"faCaretUp\" [fixedWidth]=\"true\"></fa-icon></button>\r\n        <button class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" type=\"button\" (click)=\"findNext()\"><fa-icon [icon]=\"faCaretDown\" [fixedWidth]=\"true\"></fa-icon></button>\r\n      </div>\r\n    </div>\r\n\r\n    <button *ngIf=\"control.type === 'filter'\" type=\"button\" class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" (click)=\"toggleFilterRow()\"><fa-icon [icon]=\"faFilter\" [fixedWidth]=\"true\"></fa-icon> Filter</button>\r\n\r\n    <button *ngIf=\"control.type === 'excel'\" type=\"button\" class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" (click)=\"exportToExcel()\"><fa-icon [icon]=\"faFileExcel\" [fixedWidth]=\"true\"></fa-icon> Export to Excel</button>\r\n    <button *ngIf=\"control.type === 'pdf'\" type=\"button\" class=\"btn btn-sm\" [ngClass]=\"{'btn-link white-text border': anySelected, 'btn-primary': !anySelected}\" (click)=\"exportToPdf()\"><fa-icon [icon]=\"faFilePdf\" [fixedWidth]=\"true\"></fa-icon> Export to Pdf</button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<virtual-scroller #scroll [items]=\"filteredRows\">\r\n  <table class=\"table table-sm table-hover\">\r\n    <thead #header>\r\n      <!-- First header row -->\r\n      <tr>\r\n        <th class=\"small text-center fit bg-primary\" *ngIf=\"draggableRows\"></th>\r\n        <th class=\"small text-center fit bg-primary\" *ngIf=\"expandableRows || selectableRows || errors\">\r\n          <fa-icon class=\"pointer\" [ngClass]=\"{invisible:!expandableRows}\" (click)=\"toggleExpansionAll()\" [icon]=\"allExpandedIcon\" [fixedWidth]=\"true\"></fa-icon>\r\n          <fa-icon class=\"pointer\" [ngClass]=\"{invisible:!selectableRows}\" (click)=\"toggleSelectionAll()\" [icon]=\"allSelectedIcon\" [fixedWidth]=\"true\"></fa-icon>\r\n          <fa-icon [icon]=\"faExclamationCircle\" [fixedWidth]=\"true\" [ngClass]=\"{invisible:!errors}\"></fa-icon>\r\n        </th>\r\n        <th class=\"small bg-primary fw-light text-white\" [ngClass]=\"col.columnClass + ' text-'+col.cellAlignment\" *ngFor=\"let col of spanningColumns\" [attr.colspan]=\"col.colspan\">{{col.label}}</th>\r\n      </tr>\r\n      <!-- Filter row -->\r\n      <tr *ngIf=\"showFilterRow\">\r\n        <th class=\"small text-center fit\" *ngIf=\"draggableRows\"></th>\r\n        <th class=\"small text-center fit\" *ngIf=\"expandableRows || selectableRows || errors\"></th>\r\n        <th class=\"small text-center\" *ngFor=\"let col of columns; index as i\">\r\n          <input *ngIf=\"col.filterMode==='text'\" class=\"w-100 text-center\" type=\"search\" [ngModel]=\"col.filterText\" (input)=\"processFilterValue(col,$any($event.target).value)\" />\r\n\r\n          <div class=\"d-inline-block\" ngbDropdown #myDrop=\"ngbDropdown\" *ngIf=\"col.filterMode==='select'|| col.filterMode==='numeric' || col.filterMode==='icon'\" autoClose=\"outside\">\r\n            <input class=\"w-100 text-center\" type=\"search\" [ngModel]=\"col.filterText\" readonly ngbDropdownAnchor (focus)=\"myDrop.open()\" />\r\n            <div ngbDropdownMenu aria-labelledby=\"dropdownManual\">\r\n              <button class=\"small\" ngbDropdownItem (click)=\"toggleSelectAllFilterValues(col)\">\r\n                <fa-icon class=\"pointer\" *ngIf=\"col.filterStatus ==='all'\" [icon]=\"faCheckSquare\" [fixedWidth]=\"true\"></fa-icon>\r\n                <fa-icon class=\"pointer\" *ngIf=\"col.filterStatus ==='none'\" [icon]=\"faSquare\" [fixedWidth]=\"true\"></fa-icon>\r\n                <fa-icon class=\"pointer\" *ngIf=\"col.filterStatus ==='indeterminate'\" [icon]=\"faMinusSquare\" [fixedWidth]=\"true\"></fa-icon>\r\n                Select All\r\n              </button>\r\n              <div class=\"dropdown-divider\"></div>\r\n              <div class=\"overflow-auto\" style=\"max-height:250px;\">\r\n                <button class=\"small\" ngbDropdownItem *ngFor=\"let v of col.filterValues\" (click)=\"toggleFilterValue(col,v)\">\r\n                  <fa-icon class=\"pointer\" *ngIf=\"v.selected\" [icon]=\"faCheckSquare\" [fixedWidth]=\"true\"></fa-icon>\r\n                  <fa-icon class=\"pointer\" *ngIf=\"!v.selected\" [icon]=\"faSquare\" [fixedWidth]=\"true\"></fa-icon>\r\n                  <div class=\"d-inline-block\" *ngIf=\"col.filterMode==='icon'\">\r\n                    <i class=\"ps-1 fa fa-{{v.value}}\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                  <div class=\"d-inline-block\" *ngIf=\"col.filterMode!=='icon'\">\r\n                    {{v.value}}\r\n                  </div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <!-- Body -->\r\n    <tbody #container [cdkDropListData]=\"filteredRows\" cdkDropList [cdkDropListDisabled]=\"!draggableRows\" (cdkDropListDropped)=\"drop($any($event))\" [cdkDropListSortPredicate]=\"sortPredicate\">\r\n      <tr *ngFor=\"let row of scroll.viewPortItems\" [ngClass]=\"row.class\" cdkDrag [cdkDragData]=\"row\">\r\n        <td class=\"small text-center align-middle\" *ngIf=\"draggableRows\">\r\n          <fa-icon cdkDragHandle [icon]=\"faGripVertical\" [fixedWidth]=\"true\"></fa-icon>\r\n        </td>\r\n        <td class=\"small text-center align-middle\" *ngIf=\"expandableRows || selectableRows || errors\">\r\n          <fa-icon class=\"pointer\" [ngClass]=\"{invisible:!row.expandable}\" (click)=\"toggleExpansion(row)\" [icon]=\"row.expandedIcon\" [fixedWidth]=\"true\"></fa-icon>\r\n          <fa-icon class=\"pointer\" [ngClass]=\"{invisible:!row.selectable}\" (click)=\"toggleRowSelection(row)\" [icon]=\"row.selectedIcon\" [fixedWidth]=\"true\"></fa-icon>\r\n          <fa-icon [icon]=\"faExclamationCircle\" [fixedWidth]=\"true\" [ngClass]=\"{invisible:!row.error}\"></fa-icon>\r\n        </td>\r\n\r\n        <td class=\"small align-middle text-nowrap\" [ngClass]=\"['text-'+cell.alignment, cell.class]\" *ngFor=\"let cell of row.cells; let i= index\" [attr.colspan]=\"cell.colspan\">\r\n          <ng-container *ngIf=\"cell.type === 'icon' && cell.value\"><fa-icon [icon]=\"cell.value\" [fixedWidth]=\"true\" (click)=\"cell.click()\" [ngClass]=\"[cell.canClick? 'pointer':'']\"></fa-icon></ng-container>\r\n          <ng-container *ngIf=\"cell.type === 'text'\"><span (click)=\"cell.click()\" [ngClass]=\"[cell.canClick? 'pointer':'']\" [innerHTML]=\"cell.value | highlight: searchText\"></span></ng-container>\r\n          <ng-container *ngIf=\"cell.type === 'picture'\"><img [src]=\"cell.value | secure | async\" (click)=\"cell.click()\" [ngClass]=\"[cell.canClick? 'pointer':'']\"></ng-container>\r\n          <ng-container *ngIf=\"cell.type === 'button'\"><span *ngIf=\"cell.value\" (click)=\"cell.click()\" class=\"blue-background p-1 white-text pointer\" [innerHTML]=\"cell.value\"></span></ng-container>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</virtual-scroller>\r\n\r\n<div class=\"row g-0 border-top\">\r\n  <div class=\"col\">\r\n    <span class=\"small\">Showing {{filteredRows.length || 0}} rows out of {{rows.length || 0}} </span>\r\n    <span class=\"small\" *ngIf=\"anySelected\">| {{selectedRowCounter}} rows selected</span>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DimensionsComponent",
            "id": "component-DimensionsComponent-0d0aaf90094c68f9ed7dca7b08f76cea3ef59ec97f3d7180a97eadb86b85795af61eeda53f4346c3df1ead03cc63fa9f253c46133a63c9870b04c7fac5ecf679",
            "file": "projects/main/src/app/features/admin/dimensions/dimensions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-dimensions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dimensions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-dimensions',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './dimensions.component.html',\r\n  styleUrl: './dimensions.component.scss'\r\n})\r\nexport class DimensionsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./dimensions.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Dimensions</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "DocumentsComponent",
            "id": "component-DocumentsComponent-4f1cba2730701cfa285c77c384ab3cdceb93bcedcd84ca361d445ac41ddd0996182c2fe2add41027fc7f21a9711071b43dc5cacd13773862f03852921fef3db3",
            "file": "projects/main/src/app/features/products/settings/documents/documents.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-documents",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./documents.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'csps-documents',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './documents.component.html',\r\n  styleUrl: './documents.component.scss'\r\n})\r\nexport class DocumentsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./documents.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>documents works!</p>\r\n"
        },
        {
            "name": "DynamicFormComponent",
            "id": "component-DynamicFormComponent-c202c953d15fa0f6002a13ce7a8bec2c484b4e4a6f3cf69f597e95886b2cb3448cac9f34af5994bc6ac9a5b12841cb9c2d2623b7534b8df4f47bd9a96c96cb0c",
            "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form/dynamic-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "exportAs": "dynamicForm",
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-dynamic-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dynamic-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "FieldConfig[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "createControl",
                    "args": [
                        {
                            "name": "config",
                            "type": "FieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "FieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabled",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "disable",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "disable",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "DynamicFieldDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { DynamicFieldDirective } from '../../components/dynamic-field.directive';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\n\r\n@Component({\r\n  exportAs: 'dynamicForm',\r\n  selector: 'csps-dynamic-form',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, DynamicFieldDirective],\r\n  templateUrl: './dynamic-form.component.html',\r\n  styleUrl: './dynamic-form.component.scss'\r\n})\r\nexport class DynamicFormComponent implements OnChanges, OnInit {\r\n  @Input()\r\n  config: FieldConfig[] = [];\r\n\r\n  @Output()\r\n  submit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  form!: FormGroup;\r\n\r\n  get controls() { return this.config.filter(({ type }) => type !== 'button'); }\r\n  get changes() { return this.form.valueChanges; }\r\n  get valid() { return this.form.valid; }\r\n  get value() { return this.form.getRawValue(); }\r\n\r\n  constructor(private fb: FormBuilder, private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.createGroup();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.form) {\r\n      const controls = Object.keys(this.form.controls);\r\n      const configControls = this.controls.map((item) => item.name);\r\n\r\n      controls\r\n        .filter((control) => !configControls.includes(control))\r\n        .forEach((control) => this.form.removeControl(control));\r\n\r\n      configControls\r\n        .filter((control) => !controls.includes(control))\r\n        .forEach((name) => {\r\n          const config = this.config.find((control) => control.name === name);\r\n          if (config)\r\n            this.form.addControl(name, this.createControl(config));\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  createGroup() {\r\n    const group = this.fb.group({});\r\n    this.controls.forEach(control => {\r\n      if (control.type === 'checkboxList' && control.checkboxes)\r\n        control.checkboxes.forEach(x => { group.addControl(x.name, this.createControl(x)); })\r\n      else\r\n        group.addControl(control.name, this.createControl(control));\r\n    });\r\n    return group;\r\n  }\r\n\r\n  createControl(config: FieldConfig) {\r\n    const { disabled, validation, value } = config;\r\n    return this.fb.control({ disabled, value }, validation);\r\n  }\r\n\r\n  handleSubmit(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.submit.emit(this.value);\r\n  }\r\n\r\n  setDisabled(name: string, disable: boolean) {\r\n    if (this.form.controls[name]) {\r\n      const method = disable ? 'disable' : 'enable';\r\n      this.form.controls[name][method]();\r\n      this.cdr.detectChanges();\r\n      return;\r\n    }\r\n\r\n    this.config = this.config.map((item) => {\r\n      if (item.name === name) {\r\n        item.disabled = disable;\r\n      }\r\n      this.cdr.detectChanges();\r\n      return item;\r\n    });\r\n  }\r\n\r\n  setValue(name: string, value: any) {\r\n    this.form.controls[name].setValue(value, { emitEvent: true });\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n",
            "styleUrl": "./dynamic-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "accessors": {
                "controls": {
                    "name": "controls",
                    "getSignature": {
                        "name": "controls",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                },
                "changes": {
                    "name": "changes",
                    "getSignature": {
                        "name": "changes",
                        "type": "",
                        "returnType": "",
                        "line": 25
                    }
                },
                "valid": {
                    "name": "valid",
                    "getSignature": {
                        "name": "valid",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                },
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                }
            },
            "templateData": "<form class=\"dynamic-form needs-validation\" [formGroup]=\"form\" (submit)=\"handleSubmit($event)\" novalidate>\r\n  <ng-container *ngFor=\"let field of config;\" dynamicField [config]=\"field\" [group]=\"form\"></ng-container>\r\n\r\n  {{form.value | json}}\r\n</form>\r\n"
        },
        {
            "name": "DynamicFormModalComponent",
            "id": "component-DynamicFormModalComponent-daf71c4d7fd13f48b22569968e10a6f3a9efdaf67fdd42f5f4a4b967712c5daf80174be2fec1cc776f89d8ca3692989ba0262d19690c20c0ca5f7b88abb18ccd",
            "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-dynamic-form-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dynamic-form-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ModalConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dismissed",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicFormComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DynamicFormComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "dismissForm",
                    "args": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DynamicFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ModalConfig } from '../../models/modal-config.interface';\r\nimport { DynamicFormComponent } from '../dynamic-form/dynamic-form.component';\r\n\r\n@Component({\r\n  selector: 'csps-dynamic-form-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, DynamicFormComponent],\r\n  templateUrl: './dynamic-form-modal.component.html',\r\n  styleUrl: './dynamic-form-modal.component.scss'\r\n})\r\nexport class DynamicFormModalComponent implements AfterViewInit, OnInit, OnChanges {\r\n  @ViewChild(DynamicFormComponent) form!: DynamicFormComponent;\r\n\r\n  @Input()\r\n  config!: ModalConfig;\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  ngOnInit() {\r\n    if (this.config.labelSize != null) // Need to catch null or undefined, hence using != and not !==\r\n      this.config.fields.forEach(x => x.labelSize = this.config.labelSize)\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.config.labelSize != null) // Need to catch null or undefined, hence using != and not !==\r\n      this.config.fields.forEach(x => x.labelSize = this.config.labelSize)\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let previousValid = this.form.valid;\r\n    this.form.changes.subscribe(() => {\r\n      if (this.form.valid !== previousValid) {\r\n        previousValid = this.form.valid;\r\n        this.form.setDisabled('submit', !previousValid);\r\n      }\r\n    });\r\n  }\r\n\r\n  submitForm(method: any) {\r\n    this.submitted.emit(this.form.value);\r\n  }\r\n\r\n  dismissForm(method: any) {\r\n    this.dismissed.emit(method);\r\n  }\r\n}\r\n",
            "styleUrl": "./dynamic-form-modal.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{config.headerText}}</h5>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\"></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <csps-dynamic-form [config]=\"config.fields\" #form=\"dynamicForm\" (submit)=\"submitForm($event)\"></csps-dynamic-form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" *ngFor=\"let b of config.extraButtons\" (click)=\"dismissForm(b.reason)\" [disabled]=\"b.disabled\" class=\"btn btn-secondary me-2\">{{b.label}}</button>\r\n    <button type=\"button\" *ngIf=\"!config.hideCloseButton\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary me-2\">{{config.closeText}}</button>\r\n    <button type=\"button\" (click)=\"submitForm('OK')\" [disabled]=\"!form.valid\" class=\"btn btn-primary\">{{config.submitText}}</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DynamicFormNotificationModalComponent",
            "id": "component-DynamicFormNotificationModalComponent-b72a79bab4c2e1b5361dfa7539f9d04e77126867bc9a0268d30a9690a8875d667ad420d67bbb1046e01450825aaf5e30a0fc6f65c729fda0afc947a74560a26f",
            "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-notification-modal/dynamic-form-notification-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-dynamic-form-notification-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dynamic-form-notification-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "NotificationConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dismissed",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "dismissForm",
                    "args": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NotificationConfig } from '../../models/notification-config.interface';\r\n\r\n@Component({\r\n  selector: 'csps-dynamic-form-notification-modal',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './dynamic-form-notification-modal.component.html',\r\n  styleUrl: './dynamic-form-notification-modal.component.scss'\r\n})\r\nexport class DynamicFormNotificationModalComponent implements OnInit {\r\n  @Input()\r\n  config!: NotificationConfig;\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submitForm(method: any) {\r\n    this.submitted.emit(method);\r\n  }\r\n\r\n  dismissForm(method: any) {\r\n    this.dismissed.emit(method);\r\n  }\r\n}\r\n",
            "styleUrl": "./dynamic-form-notification-modal.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">{{config.headerText}}</h5>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\"></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p *ngFor=\"let notification of config.notifications\" [innerHTML]=\"notification\"></p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" *ngFor=\"let b of config.extraButtons\" (click)=\"dismissForm(b.reason)\" [disabled]=\"b.disabled\" class=\"btn btn-secondary\">{{b.label}}</button>\r\n    <button type=\"button\" *ngIf=\"!config.hideCloseButton\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary\">{{config.closeText}}</button>\r\n    <button type=\"button\" (click)=\"submitForm('OK')\" class=\"btn btn-primary\">{{config.submitText}}</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DynamicFormTableComponent",
            "id": "component-DynamicFormTableComponent-acb1bc189b1afdd857791a608f8e5c0423b670a8717bf6aaaf744ec060b15881724b470501e6801620952e1be711c53a25ff23ba5694961c01b890bc85f37d7c",
            "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-table/dynamic-form-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "exportAs": "dynamicFormTable",
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-dynamic-form-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dynamic-form-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "FieldConfig[]",
                    "decorators": []
                },
                {
                    "name": "hideAddRowOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "hideDeleteOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "hidePasteArea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "presetRows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "faExclamationTriangle",
                    "defaultValue": "faExclamationTriangle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "faPlus",
                    "defaultValue": "faPlus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "faTimes",
                    "defaultValue": "faTimes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "faTrash",
                    "defaultValue": "faTrash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "pastedText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [
                {
                    "name": "addRow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "checkDateFormat",
                    "args": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearEmptyRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createControl",
                    "args": [
                        {
                            "name": "config",
                            "type": "FieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rowValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "FieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rowValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createRowControls",
                    "args": [
                        {
                            "name": "rowValues",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowValues",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteRow",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrors",
                    "args": [
                        {
                            "name": "row",
                            "type": "FormArray",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "FormArray",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "presetDynamicFormTable",
                    "args": [
                        {
                            "name": "rows",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "processPaste",
                    "args": [
                        {
                            "name": "e",
                            "type": "ClipboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "ClipboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabled",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "disable",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "disable",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleErrorTooltip",
                    "args": [
                        {
                            "name": "tooltip",
                            "type": "NgbTooltip",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "row",
                            "type": "FormArray",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tooltip",
                            "type": "NgbTooltip",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "row",
                            "type": "FormArray",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "NgbTooltipModule",
                    "type": "module"
                },
                {
                    "name": "DynamicFieldDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faExclamationTriangle, faPlus, faTimes, faTrash, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbTooltip, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DynamicFieldDirective } from '../../components/dynamic-field.directive';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\n\r\n@Component({\r\n  exportAs: 'dynamicFormTable',\r\n  selector: 'csps-dynamic-form-table',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, FontAwesomeModule, NgbTooltipModule, DynamicFieldDirective],\r\n  templateUrl: './dynamic-form-table.component.html',\r\n  styleUrl: './dynamic-form-table.component.scss'\r\n})\r\nexport class DynamicFormTableComponent implements OnInit {\r\n  @Input()\r\n  config: FieldConfig[] = [];\r\n\r\n  @Input()\r\n  hidePasteArea: boolean | undefined;\r\n\r\n  @Input()\r\n  hideAddRowOption: boolean | undefined;\r\n\r\n  @Input()\r\n  hideDeleteOption: boolean | undefined;\r\n\r\n  @Input()\r\n  presetRows: any = [];\r\n\r\n  @Output()\r\n  submit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // Icons\r\n  faTrash: IconDefinition = faTrash;\r\n  faTimes: IconDefinition = faTimes;\r\n  faPlus: IconDefinition = faPlus;\r\n  faExclamationTriangle: IconDefinition = faExclamationTriangle;\r\n\r\n\r\n  form!: FormGroup;\r\n\r\n  pastedText: string = '';\r\n\r\n  get controls() { return this.config.filter(({ type }) => type !== 'button'); }\r\n  get changes() { return this.form.valueChanges; }\r\n  get valid() { return this.form.valid; }\r\n  get value() { return this.form.getRawValue(); }\r\n\r\n  get rows() {\r\n    return this.form.get('rows') as FormArray;\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.createGroup();\r\n\r\n    // Check if presetRows are provided to pre-populate table rows with existing data\r\n    if (this.presetRows?.length)\r\n      this.presetDynamicFormTable(this.presetRows);\r\n  }\r\n\r\n  createGroup() {\r\n    // Extract default values\r\n    const defaultValues = this.config.reduce((acc, x) => { acc[x.name] = x.value; return acc; }, {} as { [key: string]: any });\r\n\r\n    const group = this.fb.group({\r\n      rows: this.fb.array([this.createRowControls(defaultValues)])\r\n    });\r\n    return group;\r\n  }\r\n\r\n  createRowControls(rowValues: any) {\r\n    const row = this.fb.group({});\r\n    this.controls.forEach((control, i) => row.addControl(control.name, this.createControl(control, rowValues[control.name])));\r\n    return row;\r\n  }\r\n\r\n  createControl(config: FieldConfig, rowValue: any) {\r\n    config.value = rowValue;\r\n    const { disabled, validation, value } = config;\r\n    return this.fb.control({ disabled, value }, validation);\r\n  }\r\n\r\n  addRow() {\r\n    this.rows.push(this.createRowControls({}));\r\n  }\r\n\r\n  deleteRow(index: number) {\r\n    this.rows.removeAt(index);\r\n  }\r\n\r\n  handleSubmit(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.submit.emit(this.value);\r\n  }\r\n\r\n  setDisabled(name: string, disable: boolean) {\r\n    if (this.form.controls[name]) {\r\n      const method = disable ? 'disable' : 'enable';\r\n      this.form.controls[name][method]();\r\n      this.cdr.detectChanges();\r\n      return;\r\n    }\r\n\r\n    this.config = this.config.map((item) => {\r\n      if (item.name === name) {\r\n        item.disabled = disable;\r\n      }\r\n      this.cdr.detectChanges();\r\n      return item;\r\n    });\r\n  }\r\n\r\n  setValue(name: string, value: any) {\r\n    this.form.controls[name].setValue(value, { emitEvent: true });\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  getErrors(row: FormArray) {\r\n    let errors: string[] = [];\r\n    Object.keys(row.controls).forEach(x => {\r\n      const abstractControl = row.get(x);\r\n      if (abstractControl instanceof FormControl) {\r\n        const ctrl = abstractControl as FormControl;\r\n        if (!ctrl.valid && ctrl.errors) {\r\n          errors.push(...Object.keys(ctrl.errors).map(y => (ctrl.errors || {})[y]));\r\n        }\r\n      }\r\n    });\r\n\r\n    return errors;\r\n  }\r\n\r\n  toggleErrorTooltip(tooltip: NgbTooltip, row: FormArray) {\r\n    if (tooltip.isOpen())\r\n      tooltip.close()\r\n    else\r\n      tooltip.open({ errors: this.getErrors(row) })\r\n  }\r\n\r\n  processPaste(e: ClipboardEvent) {\r\n    // Retrieve the pasted data\r\n    const pasted = e[\"clipboardData\"] == null ? '' : e[\"clipboardData\"].getData('text');  // TODO Cedric test for cross browser compatibility\r\n\r\n    // Retrieve rows by splitting on line feeds\r\n    let pastedRows = pasted.split('\\r\\n');\r\n\r\n    // Remove last entry if empty\r\n    if (pastedRows[pastedRows.length - 1] === '') pastedRows.splice(pastedRows.length - 1, 1);\r\n\r\n    // Clear empty rows from form\r\n    this.clearEmptyRows();\r\n\r\n    // Loop through each rows and create objects\r\n    pastedRows.forEach(r => {\r\n      let row: { [key: string]: any } = {};\r\n      // Retrieve values by splitting on columns\r\n      const vals = r.split('\\t');\r\n      // Loop through fields\r\n      this.config.forEach((f, i) => {\r\n        // if lookup field\r\n        if (f.type === 'select' && f.options) {\r\n          const opt = f.options.find(x => x.value === vals[i]);\r\n          row[f.name] = (opt || { key: null }).key;\r\n        }\r\n        // if date\r\n        else if (f.type === 'date') {\r\n          row[f.name] = this.checkDateFormat(vals[i]) ? new Date(vals[i]) : null;\r\n        }\r\n        // if checkbox\r\n        else if (f.type === 'checkbox') {\r\n          switch (vals[i].toString().toLowerCase()) {\r\n            case \"true\":\r\n            case \"1\":\r\n            case \"on\":\r\n            case \"yes\":\r\n              row[f.name] = true;\r\n              break;\r\n            default:\r\n              row[f.name] = false;\r\n              break;\r\n          }\r\n        }\r\n        else {\r\n          row[f.name] = vals[i];\r\n        }\r\n      });\r\n\r\n      this.rows.push(this.createRowControls(row));\r\n    });\r\n\r\n    setTimeout(() => this.pastedText = \"\", 0)\r\n  }\r\n\r\n  clearEmptyRows() {\r\n    const rawValues = this.rows.getRawValue();\r\n\r\n    for (var i = rawValues.length - 1; i >= 0; i--) {\r\n      if (Object.values(rawValues[i]).every(x => (x == null || x === '')))\r\n        this.deleteRow(i);\r\n      else\r\n        return;\r\n    }\r\n  }\r\n\r\n  checkDateFormat(dateString: string) {\r\n    const dateRegEx = new RegExp(\"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$\");\r\n    return dateRegEx.exec(dateString) !== null;\r\n  }\r\n\r\n  presetDynamicFormTable(rows: any) {\r\n    // Remove first empty rows\r\n    this.clearEmptyRows();\r\n\r\n    // Add rows with data into table\r\n    rows.forEach((row: any) => {\r\n      this.rows.push(this.createRowControls(row));\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./dynamic-form-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "controls": {
                    "name": "controls",
                    "getSignature": {
                        "name": "controls",
                        "type": "",
                        "returnType": "",
                        "line": 48
                    }
                },
                "changes": {
                    "name": "changes",
                    "getSignature": {
                        "name": "changes",
                        "type": "",
                        "returnType": "",
                        "line": 49
                    }
                },
                "valid": {
                    "name": "valid",
                    "getSignature": {
                        "name": "valid",
                        "type": "",
                        "returnType": "",
                        "line": 50
                    }
                },
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 51
                    }
                },
                "rows": {
                    "name": "rows",
                    "getSignature": {
                        "name": "rows",
                        "type": "",
                        "returnType": "",
                        "line": 53
                    }
                }
            },
            "templateData": "<table class=\"table table-sm table-striped\" [formGroup]=\"form\">\r\n  <thead>\r\n    <tr>\r\n      <th class=\"text-center\">#</th>\r\n      <th class=\"text-center\" *ngFor=\"let field of config\">{{field.label}}</th>\r\n      <th class=\"text-center\">Error</th>\r\n      <th *ngIf=\"!hideDeleteOption\" class=\"text-center\"><fa-icon [icon]=\"faTrash\"></fa-icon></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody formArrayName=\"rows\">\r\n    <tr *ngFor=\"let row of rows.controls; let rowIndex=index\" [formGroupName]=\"rowIndex\">\r\n      <td class=\"text-center\">{{rowIndex+1}}</td>\r\n      <td class=\"text-center\" *ngFor=\"let field of config;\">\r\n        <ng-container class=\"form-control-sm\" dynamicField [config]=\"field\" [group]=\"$any(rows).controls[rowIndex]\"></ng-container>\r\n      </td>\r\n      <td class=\"text-center pt-2\"><fa-icon [icon]=\"faExclamationTriangle\" class=\"red-text pointer\" placement=\"top\" container=\"body\" #t=\"ngbTooltip\" (mouseover)=\"toggleErrorTooltip(t, $any(row))\" [ngbTooltip]=\"errorTipContent\" *ngIf=\"!row.valid\"></fa-icon></td>\r\n      <td class=\"text-center pt-2 pointer\" *ngIf=\"!hideDeleteOption\"><fa-icon [icon]=\"faTimes\" (click)=\"deleteRow(rowIndex)\"></fa-icon></td>\r\n    </tr>\r\n\r\n    <tr *ngIf=\"!hideAddRowOption\">\r\n      <td class=\"text-center pointer\"><fa-icon [icon]=\"faPlus\" (click)=\"addRow()\"></fa-icon></td>\r\n      <td class=\"text-center\" *ngFor=\"let field of config;\"></td>\r\n      <td class=\"text-center\"></td>\r\n      <td class=\"text-center\"></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<ng-container *ngIf=\"!hidePasteArea\">\r\n  <div class=\"row mt-5\">\r\n    <div class=\"col\">\r\n      <strong>To paste data from Excel, please use the space below. (Dates must be in the following format: YYYY-MM-DD)</strong>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"pastedText\" placeholder=\"Right click here to paste\" (paste)=\"processPaste($event)\">\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #errorTipContent let-errors=\"errors\">\r\n  <div *ngFor=\"let e of errors\">{{e}}</div>\r\n</ng-template>\r\n"
        },
        {
            "name": "DynamicFormTableModalComponent",
            "id": "component-DynamicFormTableModalComponent-3690fc68f2ac5315a34b15b939d7562acfd0add8eb377e85b30c6fd1d6d7d3fd7efa3cca07c6765ba3678e8c2bef40b04e620904b3c6a15043266570bd381cf4",
            "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-table-modal/dynamic-form-table-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-dynamic-form-table-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dynamic-form-table-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ModalConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dismissed",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicFormTableComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DynamicFormTableComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "dismissForm",
                    "args": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DynamicFormTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ModalConfig } from '../../models/modal-config.interface';\r\nimport { DynamicFormTableComponent } from '../dynamic-form-table/dynamic-form-table.component';\r\n\r\n@Component({\r\n  selector: 'csps-dynamic-form-table-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, DynamicFormTableComponent],\r\n  templateUrl: './dynamic-form-table-modal.component.html',\r\n  styleUrl: './dynamic-form-table-modal.component.scss'\r\n})\r\nexport class DynamicFormTableModalComponent implements AfterViewInit, OnInit, OnChanges {\r\n  @ViewChild(DynamicFormTableComponent) form!: DynamicFormTableComponent;\r\n\r\n  @Input()\r\n  config!: ModalConfig;\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.config.fields.forEach(x => x.labelSize = 0)\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.config.fields.forEach(x => x.labelSize = 0)\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let previousValid = this.form.valid;\r\n    this.form.changes.subscribe(() => {\r\n      if (this.form.valid !== previousValid) {\r\n        previousValid = this.form.valid;\r\n        this.form.setDisabled('submit', !previousValid);\r\n      }\r\n    });\r\n  }\r\n\r\n  submitForm(event: any) {\r\n    this.submitted.emit(this.form.value);\r\n  }\r\n\r\n  dismissForm(method: any) {\r\n    this.dismissed.emit(method);\r\n  }\r\n}\r\n",
            "styleUrl": "./dynamic-form-table-modal.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{config.headerText}}</h5>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\"></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <csps-dynamic-form-table [config]=\"config.fields\" [presetRows]=\"config.presetRows\" [hidePasteArea]=\"config.hidePasteArea\" [hideAddRowOption]=\"config.hideAddRowOption\" [hideDeleteOption]=\"config.hideDeleteOption\" #form=\"dynamicFormTable\" (submit)=\"submitForm($event)\"></csps-dynamic-form-table>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" *ngFor=\"let b of config.extraButtons\" (click)=\"dismissForm(b.reason)\" [disabled]=\"b.disabled\" class=\"btn btn-secondary\">{{b.label}}</button>\r\n    <button type=\"button\" *ngIf=\"!config.hideCloseButton\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary\">{{config.closeText}}</button>\r\n    <button type=\"button\" (click)=\"submitForm('OK')\" [disabled]=\"!form.valid\" class=\"btn btn-primary\">{{config.submitText}}</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EffortsComponent",
            "id": "component-EffortsComponent-1bd3633eb8f1c856c43c7da6ac6fe05900b09b0856f6f5f17e6f29beb6420b290b63b9320937f9434cb4b4f41987b2aee9b3fc92b5817406b9640ae1429cee17",
            "file": "projects/main/src/app/features/work/planning/efforts/efforts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-efforts",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./efforts.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-efforts',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './efforts.component.html',\r\n  styleUrl: './efforts.component.scss'\r\n})\r\nexport class EffortsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n",
            "styleUrl": "./efforts.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Efforts</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "ExportGroupsComponent",
            "id": "component-ExportGroupsComponent-56edf8e26fda0b1740eae74f7c32f04b67241734cbf46428b6bc87d56d6f5f216a100ce2cf1ea27ef7d2fd6413c5ef29fdf586f76555092321563a07a76c2bea",
            "file": "projects/main/src/app/features/admin/export-groups/export-groups.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-export-groups",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./export-groups.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-export-groups',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './export-groups.component.html',\r\n  styleUrl: './export-groups.component.scss'\r\n})\r\nexport class ExportGroupsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./export-groups.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Export Groups</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "FactoriesComponent",
            "id": "component-FactoriesComponent-e73324d9a611b0c7dbac933da300f514841b94c95a8eb8dd170fb3ab75a62c07ae30f809293ccba0b180b4ff18ef987e633c124c39115fc34c0462536f6f9e40",
            "file": "projects/main/src/app/features/admin/factories/factories.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-factories",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./factories.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-factories',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './factories.component.html',\r\n  styleUrl: './factories.component.scss'\r\n})\r\nexport class FactoriesComponent {\r\n\r\n}\r\n",
            "styleUrl": "./factories.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Factories</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "FeatureAnalyzerComponent",
            "id": "component-FeatureAnalyzerComponent-f4af8560fa745fe0a93200aca8120b033cda954c5056eb6ef923576248b289dc56a6bfe29042884055c8e5107ea6a6757620da774c6a389793e0bb0eadbeb564",
            "file": "projects/main/src/app/features/products/features/shared/feature-analyzer/feature-analyzer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-feature-analyzer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./feature-analyzer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'csps-feature-analyzer',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './feature-analyzer.component.html',\r\n  styleUrl: './feature-analyzer.component.scss'\r\n})\r\nexport class FeatureAnalyzerComponent {\r\n\r\n}\r\n",
            "styleUrl": "./feature-analyzer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>feature-analyzer works!</p>\r\n"
        },
        {
            "name": "FeatureMapComponent",
            "id": "component-FeatureMapComponent-58387ce1986f687c09e602d7038f9258fc4741595fcec01c6b1ee4d4d7ea2ba578f0674f5534fbc38a32a810149e7fbc4e4f400cdc7401f1ba6c632848bd8221",
            "file": "projects/main/src/app/shared/feature-map/feature-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-feature-map",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./feature-map.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "epics",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Epic[]",
                    "decorators": []
                },
                {
                    "name": "programIncrements",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ProgramIncrement[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "epicMoved",
                    "defaultValue": "new EventEmitter<Feature>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "featureMoved",
                    "defaultValue": "new EventEmitter<Feature>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "featureOpenRequested",
                    "defaultValue": "new EventEmitter<Feature>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "actualProgramIncrements",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProgramIncrement[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "faEdit",
                    "defaultValue": "faEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "featuresByEpicAndProgramIncrement",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "addFeatureToEpicAndProgramIncrement",
                    "args": [
                        {
                            "name": "epicId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "programIncrementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epicId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "programIncrementId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "distributeFeaturestoEpicsAndProgramIncrements",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editEpic",
                    "args": [
                        {
                            "name": "epic",
                            "type": "Epic",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epic",
                            "type": "Epic",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getConnectedList",
                    "args": [],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openFeature",
                    "args": [
                        {
                            "name": "feature",
                            "type": "Feature",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feature",
                            "type": "Feature",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "DragDropModule",
                    "type": "module"
                },
                {
                    "name": "DoubleClickDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkDragDrop, DragDropModule, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\r\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { DoubleClickDirective } from '../double-click/double-click.directive';\r\nimport { Epic } from './model/epic.model';\r\nimport { Feature } from './model/feature.model';\r\nimport { ProgramIncrement } from './model/program-increment.model';\r\n\r\n@Component({\r\n  selector: 'csps-feature-map',\r\n  standalone: true,\r\n  imports: [CommonModule, FontAwesomeModule, DragDropModule, DoubleClickDirective],\r\n  templateUrl: './feature-map.component.html',\r\n  styleUrl: './feature-map.component.scss'\r\n})\r\nexport class FeatureMapComponent implements OnChanges {\r\n  // Icons\r\n  faEdit: IconDefinition = faEdit;\r\n\r\n  @Input() epics: Epic[] = [];\r\n  @Input() programIncrements: ProgramIncrement[] = [];\r\n\r\n  @Output() featureOpenRequested = new EventEmitter<Feature>();\r\n  @Output() epicMoved = new EventEmitter<Feature>();\r\n  @Output() featureMoved = new EventEmitter<Feature>();\r\n\r\n\r\n  actualProgramIncrements: ProgramIncrement[] = [];\r\n\r\n  featuresByEpicAndProgramIncrement = [];\r\n\r\n\r\n \r\n\r\n  ngOnChanges(): void {\r\n    // Create an \"unplanned\" program increment to display yet-to-be-scheduled features\r\n    this.actualProgramIncrements = [{ id: '0', name: 'Unplanned' }, ...this.programIncrements];\r\n\r\n    this.distributeFeaturestoEpicsAndProgramIncrements();\r\n  }\r\n\r\n  distributeFeaturestoEpicsAndProgramIncrements(): void {\r\n    // Generate the list of features per epic and program increment\r\n    this.featuresByEpicAndProgramIncrement = this.epics.reduce((acc, e) => {\r\n      // Create all program increment \"containers\"\r\n      acc[e.id] = this.actualProgramIncrements.reduce((acc2, p) => {\r\n        acc2[p.id] = [];\r\n        return acc2;\r\n      }, {} as any);\r\n\r\n      // Distribute features to program increment \"containers\"\r\n      e.features.forEach(f => {\r\n        const id = f.targetProgramIncrementId || '0';\r\n        acc[e.id][id].push(f);\r\n      });\r\n\r\n      return acc;\r\n    }, {} as any)\r\n  }\r\n\r\n\r\n  addFeatureToEpicAndProgramIncrement(epicId: string, programIncrementId: string): void {\r\n    // Locate epic\r\n    const epic = this.epics.find(x => x.id == epicId);\r\n    epic?.features.push({ id: '0', name: 'New feature', targetProgramIncrementId: programIncrementId });\r\n\r\n    this.distributeFeaturestoEpicsAndProgramIncrements();\r\n  }\r\n\r\n\r\n  editEpic(epic: Epic): void {\r\n    alert('Edit Epic: ' + epic.name);\r\n  }\r\n\r\n\r\n  openFeature(feature: Feature): void {\r\n    this.featureOpenRequested.emit(feature);\r\n  }\r\n\r\n  getConnectedList(): any[] {\r\n    return this.epics.reduce((acc, e) => {\r\n      acc.push(...this.actualProgramIncrements.map(p => `${e.id}${p.id}`));\r\n      return acc;\r\n    }, new Array());\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    // TODO: Emit on feature or epic moved \r\n\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(\r\n        event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex,\r\n      );\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./feature-map.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div cdkDropList cdkDropListOrientation=\"horizontal\" [cdkDropListData]=\"epics\" class=\"epic-list\" (cdkDropListDropped)=\"drop($event)\">\r\n  @for (epic of epics; track epic.id) {\r\n  <div cdkDropListGroup class=\"epic-box\" cdkDrag [cdkDragData]=\"group\">\r\n    <div class=\"epic-header\">\r\n      <h5>{{epic.name}}</h5>\r\n      <fa-icon class=\"pointer\" [icon]=\"faEdit\" (click)=\"editEpic(epic)\"></fa-icon>\r\n    </div>\r\n\r\n    @for (programIncrement of actualProgramIncrements; track programIncrement.id) {\r\n    <div class=\"feature-list-container\">\r\n      <div class=\"feature-list\" cdkDropList [id]=\"epic.id + programIncrement.id\" [cdkDropListData]=\"featuresByEpicAndProgramIncrement[epic.id]?.[programIncrement.id]\" (cdkDropListDropped)=\"drop($event)\" [cdkDropListConnectedTo]=\"getConnectedList()\">\r\n        <div class=\"feature-placeholder\" *ngIf=\"!featuresByEpicAndProgramIncrement[epic.id]?.[programIncrement.id].length\">Drop feature here</div>\r\n        @for (feature of featuresByEpicAndProgramIncrement[epic.id]?.[programIncrement.id]; track feature.id) {\r\n        <div class=\"feature-box\" cdkDrag [cdkDragData]=\"feature\" (click.double)=\"openFeature(feature)\">\r\n          {{feature.name}}\r\n        </div>\r\n        }\r\n      </div>\r\n      <div class=\"feature-adder\" (click)=\"addFeatureToEpicAndProgramIncrement(epic.id,programIncrement.id)\">+</div>\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</div>\r\n\r\n\r\n{{epics|json}}\r\n<br />\r\n{{featuresByEpicAndProgramIncrement|json}}\r\n"
        },
        {
            "name": "FormAreaComponent",
            "id": "component-FormAreaComponent-332297c62136e3f2d44cc56b2a49695fbf3f5559e13d1410196d041c0e1adfe2675c5e935e464b6de804d1eb5d11472a32774b0c2c22b51bd579f3689e033bf9",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-area/form-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-area",
            "styleUrls": [
                "./form-area.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-area.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'form-area',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-area.component.html',\r\n  styleUrls: ['./form-area.component.css']\r\n})\r\nexport class FormAreaComponent implements Field {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-area.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <div class=\"input-group input-group-sm\">\r\n      <div class=\"input-group-prepend\" *ngIf=\"config.prepend\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.prepend\"></span>\r\n      </div>\r\n      <textarea class=\"form-control\" [attr.placeholder]=\"config.placeholder\" [formControlName]=\"config.name\"></textarea>\r\n      <div class=\"input-group-append\" *ngIf=\"config.append\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.append\"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormButtonComponent",
            "id": "component-FormButtonComponent-e04fa007d52230bfe4e77beed79f1c6309e8d29dc2adde9c1c42ed47cda32a0ab9a7f2c6badfebc287bbee2b5bcc13afc24a5b1c8557de7f178820f958706d47",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-button/form-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-button",
            "styleUrls": [
                "form-button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "form-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'form-button',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: 'form-button.component.html',\r\n  styleUrls: ['form-button.component.css'],\r\n})\r\nexport class FormButtonComponent implements Field {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "form-button.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field form-button\" [formGroup]=\"group\">\r\n  <button [disabled]=\"config.disabled\" type=\"submit\">\r\n    {{ config.label }}\r\n  </button>\r\n</div>"
        },
        {
            "name": "FormCheckboxComponent",
            "id": "component-FormCheckboxComponent-160bfac9a9490e117099435343160189174f4a797f17075e4658bd2183ef5574814d9bb27a02f409956ecaf8c42cd6963ebac03eedbdc3cefbb126616abe07b1",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-checkbox/form-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-checkbox",
            "styleUrls": [
                "./form-checkbox.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'form-checkbox',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-checkbox.component.html',\r\n  styleUrls: ['./form-checkbox.component.css']\r\n})\r\nexport class FormCheckboxComponent implements Field {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-checkbox.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n    <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\"></label>\r\n    <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n      <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" [id]=\"config.name\" [formControlName]=\"config.name\">\r\n        <label class=\"form-check-label\" [for]=\"config.name\">\r\n          {{ config.label }}\r\n        </label>\r\n      </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "FormCheckboxListComponent",
            "id": "component-FormCheckboxListComponent-e7524b4b72d3769ff2c2910f61bed685f20ddc66f22ee03378d4dc6093c1006400a222e5314e9ef0d450ade1b3f9cdb8f230c68179ffeece58a2c3125e76af82",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-checkbox-list/form-checkbox-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-form-checkbox-list",
            "styleUrls": [
                "./form-checkbox-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-checkbox-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'csps-form-checkbox-list',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-checkbox-list.component.html',\r\n  styleUrls: ['./form-checkbox-list.component.css']\r\n})\r\nexport class FormCheckboxListComponent implements Field {\r\n\r\n  constructor() { }\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-checkbox-list.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <div class=\"form-check\" *ngFor=\"let cb of config.checkboxes\">\r\n      <input class=\"form-check-input\" type=\"checkbox\" [id]=\"cb.name\" [formControlName]=\"cb.name\">\r\n      <label class=\"form-check-label\" [for]=\"cb.name\">\r\n        {{ cb.label }}\r\n      </label>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormDateComponent",
            "id": "component-FormDateComponent-f532c8b2add49e83b5fd53a99da78cceb045cd82abc319aea9cb81d60adca1058309a27e9c570fb75ee2bddfb2141232d43d8e76aa193f07e0f686295bfd5ee0",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-date/form-date.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-form-date",
            "styleUrls": [
                "./form-date.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-date.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'csps-form-date',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-date.component.html',\r\n  styleUrls: ['./form-date.component.css']\r\n})\r\nexport class FormDateComponent implements Field {\r\n\r\n  config!: FieldConfig;\r\n  group!:FormGroup;\r\n\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-date.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\"  [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <div class=\"input-group input-group-sm\">\r\n      <div class=\"input-group-prepend\" *ngIf=\"config.prepend\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.prepend\"></span>\r\n      </div>\r\n      <input type=\"date\" class=\"form-control\" [formControlName]=\"config.name\">\r\n      <div class=\"input-group-append\" *ngIf=\"config.append\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.append\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"invalid-feedback\">Invalid message!</div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormDateTimeComponent",
            "id": "component-FormDateTimeComponent-c06c2bdcdf8af71ccc18de163831ade17685494342655627b93b51a0ea4da9cafb244ac61de442479b6331e6bc96cc264a491d0c2e456fba75e6bbd1a7d835a5",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-date-time/form-date-time.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-form-date-time",
            "styleUrls": [
                "./form-date-time.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-date-time.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'csps-form-date-time',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-date-time.component.html',\r\n  styleUrls: ['./form-date-time.component.css']\r\n})\r\nexport class FormDateTimeComponent implements Field  {\r\n  config!: FieldConfig;\r\n  group!:FormGroup;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-date-time.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\"  [formGroup]=\"group\">\r\n    <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n    <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n      <div class=\"input-group input-group-sm\">\r\n        <div class=\"input-group-prepend\" *ngIf=\"config.prepend\">\r\n          <span class=\"input-group-text\" [innerHTML]=\"config.prepend\"></span>\r\n        </div>\r\n        <input type=\"datetime-local\" class=\"form-control\" [formControlName]=\"config.name\">\r\n        <div class=\"input-group-append\" *ngIf=\"config.append\">\r\n          <span class=\"input-group-text\" [innerHTML]=\"config.append\"></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"invalid-feedback\">Invalid message!</div>\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "FormFileComponent",
            "id": "component-FormFileComponent-cdeba866d70c016af3441cfe2ce1cdca76a3a50f360a02e93eb736018ea7b385bf7d3e9da662ec2ac84ce47de21b59a444814c0c9be16c73e105700445c835a7",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-file/form-file.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-file",
            "styleUrls": [
                "./form-file.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-file.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "label",
                    "defaultValue": "\"Choose file\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "onFileChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'form-file',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.css']\r\n})\r\nexport class FormFileComponent implements Field {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n  label: string = \"Choose file\";\r\n\r\n  public onFileChange($event: any) {\r\n    if ($event.target && $event.target.files) {\r\n      let file = $event.target.files[0];\r\n      this.label = file ? file.name : 'Choose file';\r\n    }\r\n    else {\r\n      this.label = 'Choose file';\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-file.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <div class=\"custom-file input-group-sm\">\r\n      <input type=\"file\" class=\"custom-file-input cursor-pointer\" id=\"customFile\" [formControlName]=\"config.name\" (change)=\"onFileChange($event)\">\r\n      <label class=\"custom-file-label\" for=\"customFile\">{{label}}</label>\r\n      <div class=\"invalid-feedback\">Invalid message!</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormImagePreviewComponent",
            "id": "component-FormImagePreviewComponent-6c9b21df3a4e2e70bb1079d1658eca9b9800b19674ca3e0665f3c47e663f7cc2a5ed28ed792890c7bad3687a7117214f4a7cfcb6f0ebf8d5e49d4d0271a746eb",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-image-preview/form-image-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-image-preview",
            "styleUrls": [
                "./form-image-preview.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-image-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'form-image-preview',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-image-preview.component.html',\r\n  styleUrls: ['./form-image-preview.component.css']\r\n})\r\nexport class FormImagePreviewComponent implements Field, OnInit {\r\n\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-image-preview.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field",
                "OnInit"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n    <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n    <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n      <image-preview [formControlName]=\"config.name\"></image-preview>\r\n    </div>\r\n</div>"
        },
        {
            "name": "FormInputComponent",
            "id": "component-FormInputComponent-5417ac5632c7c30fdfc79d819cd7a356406d2581ede2a10fd8de658270d63b40c822fc877b37259328e47382bdf75634a397bda372c5e3558f9e47dc5e2f9f76",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-input/form-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-form-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "defaultFormatter",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "defaultTypeAhead",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "formatter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "typeAhead",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "NgbTypeaheadModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { debounceTime, distinctUntilChanged, map, Observable } from 'rxjs';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { Field } from '../../models/field.interface';\r\n\r\n@Component({\r\n  selector: 'csps-form-input',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, NgbTypeaheadModule],\r\n  templateUrl: './form-input.component.html',\r\n  styleUrl: './form-input.component.scss'\r\n})\r\nexport class FormInputComponent implements Field, OnInit {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n\r\n  formatter!: (x: any) => any;\r\n  typeAhead!: (text$: Observable<string>) => Observable<any>;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.formatter = this.config.formatter ?? this.defaultFormatter;\r\n    this.typeAhead = this.config.typeAhead ?? this.defaultTypeAhead;\r\n  }\r\n\r\n\r\n  defaultTypeAhead = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(2000),\r\n      distinctUntilChanged(),\r\n      map(term => [])\r\n    );\r\n\r\n  defaultFormatter = (x: any) => x;\r\n}\r\n",
            "styleUrl": "./form-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field",
                "OnInit"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <div class=\"input-group input-group-sm\">\r\n      <div class=\"input-group-prepend\" *ngIf=\"config.prepend\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.prepend\"></span>\r\n      </div>\r\n      <input type=\"text\" class=\"form-control\" [attr.placeholder]=\"config.placeholder\" [formControlName]=\"config.name\" [ngbTypeahead]=\"typeAhead\"\r\n             [inputFormatter]=\"formatter\" [resultFormatter]=\"formatter\">\r\n      <div class=\"input-group-append\" *ngIf=\"config.append\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.append\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"invalid-feedback\">Invalid message!</div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormMultiSelectComponent",
            "id": "component-FormMultiSelectComponent-155800c15c4b70363dbbc4ad97a497c6842364bc4a830659dc5fff4b39828b8558980fcfd6eefecb0658bec2d8519e08cc3a74dfc6df8ba7f866d648688ff9c3",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-multi-select/form-multi-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-multi-select",
            "styleUrls": [
                "./form-multi-select.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-multi-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MultiSelectComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MultiSelectComponent } from './multi-select/multi-select.component';\r\n\r\n@Component({\r\n  selector: 'form-multi-select',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, MultiSelectComponent],\r\n  templateUrl: './form-multi-select.component.html',\r\n  styleUrls: ['./form-multi-select.component.css']\r\n})\r\nexport class FormMultiSelectComponent implements Field, OnInit {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n  options!: { key: any, value: string, selected: boolean }[];\r\n\r\n  ngOnInit() {\r\n    // Retrieve the value\r\n    const selectedOptions = this.group?.get(this.config.name)?.value || [];\r\n\r\n    if (this.config.options)\r\n      this.options = this.config.options.map(o => ({ ...o, selected: selectedOptions.includes(o.key) }));\r\n    else\r\n      this.options = [];\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".drop-show {\r\n  padding: 4px;\r\n  width: 222px;\r\n  background-color: #FFF;\r\n  border: 1px solid #BABABA;\r\n  position: absolute;\r\n  z-index: 100;\r\n  -webkit-box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  -moz-box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  margin-left: 1px;\r\n}\r\n\r\n  .drop-show label {\r\n    display: block;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n  }\r\n\r\n    .drop-show label input {\r\n      vertical-align: top;\r\n    }\r\n\r\n    .drop-show label span {\r\n      display: inline-block;\r\n    }\r\n",
                    "styleUrl": "./form-multi-select.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field",
                "OnInit"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <multi-select [formControlName]=\"config.name\" [options]=\"options\" [placeholder]=\"config.placeholder || 'Select...'\"></multi-select>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormMultiSelectListComponent",
            "id": "component-FormMultiSelectListComponent-e993ad844988eb01f486b85da7ed0ff33fdc06c23a19aef47f7079dddbd4cf97703d5f1c534c6676434b2dbb2cd28609022cb6569182f05ab064e96a7d9b8b6c",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-multi-select-list/form-multi-select-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-multi-select-list",
            "styleUrls": [
                "./form-multi-select-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-multi-select-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MultiSelectListComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MultiSelectListComponent } from './multi-select-list/multi-select-list.component';\r\n\r\n@Component({\r\n  selector: 'form-multi-select-list',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, MultiSelectListComponent],\r\n  templateUrl: './form-multi-select-list.component.html',\r\n  styleUrls: ['./form-multi-select-list.component.css']\r\n})\r\nexport class FormMultiSelectListComponent implements Field {\r\n  config!: FieldConfig;\r\n  group!: FormGroup; \r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-multi-select-list.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <multi-select-list class=\"d-flex flex-wrap\" [formControlName]=\"config.name\" [placeholder]=\"config.placeholder || 'Select...'\" [options]=\"config.options || []\"></multi-select-list>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormNumberComponent",
            "id": "component-FormNumberComponent-4b70c28d77459f637c61ece93b525abe10d3546cba011c5d51945b667ddfeee828215bc458606d15d30f0cf58bf9f703ac4e6f1dc6f89232de00b88eae8a9ab7",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-number/form-number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-number",
            "styleUrls": [
                "./form-number.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-number.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "defaultFormatter",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "defaultTypeAhead",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "formatter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "typeAhead",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "NgbTypeaheadModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { debounceTime, distinctUntilChanged, map, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'form-number',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, NgbTypeaheadModule],\r\n  templateUrl: './form-number.component.html',\r\n  styleUrls: ['./form-number.component.css']\r\n})\r\nexport class FormNumberComponent implements Field, OnInit {\r\n\r\n  config!: FieldConfig;\r\n  group!:FormGroup;\r\n\r\n  formatter!: (x: any) => any;\r\n  typeAhead!: (text$: Observable<string>) => Observable<any>;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.formatter = this.config.formatter ?? this.defaultFormatter;\r\n    this.typeAhead = this.config.typeAhead ?? this.defaultTypeAhead;\r\n  }\r\n\r\n\r\n  defaultTypeAhead = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(2000),\r\n      distinctUntilChanged(),\r\n      map(term => [])\r\n    );\r\n\r\n  defaultFormatter = (x: any) => x;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-number.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field",
                "OnInit"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n    <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n    <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n      <div class=\"input-group input-group-sm\">\r\n        <div class=\"input-group-prepend\" *ngIf=\"config.prepend\">\r\n          <span class=\"input-group-text\" [innerHTML]=\"config.prepend\"></span>\r\n        </div>\r\n        <input type=\"number\" class=\"form-control\" [attr.placeholder]=\"config.placeholder\" [formControlName]=\"config.name\" [ngbTypeahead]=\"typeAhead\"\r\n               [inputFormatter]=\"formatter\" [resultFormatter]=\"formatter\">\r\n        <div class=\"input-group-append\" *ngIf=\"config.append\">\r\n          <span class=\"input-group-text\" [innerHTML]=\"config.append\"></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"invalid-feedback\">Invalid message!</div>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "FormPasswordComponent",
            "id": "component-FormPasswordComponent-ae6905236bbb8710f90d5d26beb8795eb2bf50dc3932f82e2e2de94ba6975793b269a79ea7db140241b1ff870bdd38a40065dcbf1fd404669fa973b562f79b9e",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-password/form-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-password",
            "styleUrls": [
                "form-password.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "form-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "defaultFormatter",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "defaultTypeAhead",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "formatter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "typeAhead",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "NgbTypeaheadModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit} from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { debounceTime, distinctUntilChanged, map, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'form-password',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, NgbTypeaheadModule],\r\n  templateUrl: 'form-password.component.html',\r\n  styleUrls: ['form-password.component.css']\r\n})\r\nexport class FormPasswordComponent implements Field, OnInit {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n\r\n  formatter!: (x: any) => any;\r\n  typeAhead!: (text$: Observable<string>) => Observable<any>;\r\n\r\n  ngOnInit(): void {\r\n    this.formatter = this.config.formatter ?? this.defaultFormatter;\r\n    this.typeAhead = this.config.typeAhead ?? this.defaultTypeAhead;\r\n  }\r\n\r\n  defaultTypeAhead = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(2000),\r\n      distinctUntilChanged(),\r\n      map(term => [])\r\n    );\r\n\r\n  defaultFormatter = (x: any) => x;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "form-password.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field",
                "OnInit"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <div class=\"input-group input-group-sm\">\r\n      <div class=\"input-group-prepend\" *ngIf=\"config.prepend\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.prepend\"></span>\r\n      </div>\r\n      <input type=\"password\" class=\"form-control\" [attr.placeholder]=\"config.placeholder\" [formControlName]=\"config.name\" [ngbTypeahead]=\"typeAhead\"\r\n             [inputFormatter]=\"formatter\" [resultFormatter]=\"formatter\">\r\n      <div class=\"input-group-append\" *ngIf=\"config.append\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.append\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"invalid-feedback\">Invalid message!</div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "FormSelectComponent",
            "id": "component-FormSelectComponent-8ff2fc7a7ff8b542d29fa70860bdf8643e8c485b300a4407917566f0820045b62fc58d0a07511179e086b73bd3def9299800c014fa68b87da9f63860b327379d",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-select/form-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-select",
            "styleUrls": [
                "form-select.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "form-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'form-select',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: 'form-select.component.html',\r\n  styleUrls: ['form-select.component.css']\r\n})\r\nexport class FormSelectComponent implements Field, OnInit {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n  options!: { key: any, value: string }[];\r\n\r\n  ngOnInit() {\r\n    const sorter = {\r\n      asc: (a: { value: string }, b: { value: string }) => { return a.value === b.value ? 0 : (a.value > b.value ? 1 : -1) },\r\n      desc: (a: { value: string }, b: { value: string }) => { return a.value === b.value ? 0 : (a.value < b.value ? 1 : -1) },\r\n      none: undefined\r\n    }\r\n\r\n    this.config.sortOptions = this.config.sortOptions || 'none';\r\n\r\n    if (this.config.options)\r\n      this.options = this.config.options.sort(sorter[this.config.sortOptions]);\r\n    else\r\n      this.options = [];\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "form-select.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field",
                "OnInit"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <div class=\"input-group input-group-sm\">\r\n      <div class=\"input-group-prepend\" *ngIf=\"config.prepend\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.prepend\"></span>\r\n      </div>\r\n      <select [formControlName]=\"config.name\" class=\"form-control\">\r\n        <option [ngValue]=\"undefined\" *ngIf=\"config.placeholder\">{{ config.placeholder }}</option>\r\n        <option [ngValue]=\"option.key\" *ngFor=\"let option of options\">\r\n          {{ option.value }}\r\n        </option>\r\n      </select>\r\n      <div class=\"input-group-append\" *ngIf=\"config.append\">\r\n        <span class=\"input-group-text\" [innerHTML]=\"config.append\"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormStaticAreaComponent",
            "id": "component-FormStaticAreaComponent-22e712a18a5047617ae34333a0e8ece636e6c2c221885bab134091012c2843dbb154616002185a6f697363dc048bc26a556d10b7c0d88d375a198e6002de83e8",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-static-area/form-static-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-form-static-area",
            "styleUrls": [
                "./form-static-area.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-static-area.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'csps-form-static-area',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './form-static-area.component.html',\r\n  styleUrls: ['./form-static-area.component.css']\r\n})\r\nexport class FormStaticAreaComponent implements Field {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-static-area.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <textarea readonly class=\"form-control-plaintext form-control-sm\" [formControlName]=\"config.name\"></textarea>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormStaticComponent",
            "id": "component-FormStaticComponent-a4bd67cf2c727aa09abeea0e44a10a60ebea2447491f26cc46507e294f3b37773256ee66be1b6fc887219ea49162f720eed3b92f5bcdc4b1e3cc70fce4b776fd",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-static/form-static.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "form-static",
            "styleUrls": [
                "form-static.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "form-static.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'form-static',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: 'form-static.component.html',\r\n  styleUrls: ['form-static.component.css']\r\n})\r\nexport class FormStaticComponent implements Field {\r\n  config!: FieldConfig;\r\n  group!: FormGroup;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "form-static.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "Field"
            ],
            "templateData": "<div class=\"dynamic-field row\" [formGroup]=\"group\">\r\n  <label class=\"col-form-label\" [ngClass]=\"'col-'+config.labelSize\" *ngIf=\"config.labelSize!==0\">{{ config.label }}</label>\r\n  <div [ngClass]=\"'col-'+ (12 - (config.labelSize||0))\">\r\n    <input type=\"text\" readonly class=\"form-control-plaintext form-control-sm\" [formControlName]=\"config.name\">\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "GroupsComponent",
            "id": "component-GroupsComponent-2a2f52cb54a8ff0ed71209d03bb8ed05803e3a423c2d3805bda7af8be67dd9903cfcf34cca1d025e8ae8fa84a95ca096a58fb2d058fdf6e97e5b712fd37de58b",
            "file": "projects/main/src/app/features/admin/groups/groups.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-groups",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./groups.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-groups',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './groups.component.html',\r\n  styleUrl: './groups.component.scss'\r\n})\r\nexport class GroupsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./groups.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Groups</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-07f894be6f38e12f30e1e7e5d9e999c27c78ce2f0be03c15c8c5f39207229e147892a2fd1fdb54e935c4f04f03c2162e39a22c28cdc64e027ea15824ddf0f3c9",
            "file": "projects/main/src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ButtonComponent } from './button.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent],\r\n  template: `<header>\r\n    <div class=\"storybook-header\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            [primary]=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.storybook-header svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header h1 {\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header button + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.storybook-header .welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-16a8ea4bb77e3fc5e5374598f3f44d6c91a3649ab29237f08f323df09f01b354351679b367c1a4090d4941215b0e062c514cd4c257fd3e294cabdb583d704d34",
            "file": "projects/main/src/app/features/home/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "counter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "ids",
                    "defaultValue": "[\r\n    '52bf9b4b-b5fa-4e25-969c-03fd589a5a69',\r\n    'd27d550c-1348-4895-9fb8-0f3cd01bd674',\r\n    'cb4f9df5-3d7b-46c2-95e9-e1cb236f8f96'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "response",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getData",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "memoize",
                            "stringifiedArguments": "{extractUniqueId: args => , clearCacheTimeout: 5000}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "test",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Observable, take } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { memoize } from '../../../shared/memoize/memoize.decorator';\r\n\r\n@Component({\r\n  selector: 'csps-home',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.scss'\r\n})\r\nexport class HomeComponent {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  response!: any;\r\n\r\n  counter: number = 0;\r\n\r\n  ids: string[] = [\r\n    '52bf9b4b-b5fa-4e25-969c-03fd589a5a69',\r\n    'd27d550c-1348-4895-9fb8-0f3cd01bd674',\r\n    'cb4f9df5-3d7b-46c2-95e9-e1cb236f8f96'\r\n  ];\r\n\r\n\r\n  test(): void {\r\n    this.response = null;\r\n    this.getData(this.ids[this.counter++ % 3]).subscribe(x => {\r\n      this.response = x;\r\n    })\r\n  }\r\n\r\n\r\n  @memoize({ extractUniqueId: (args) => args?.[0], clearCacheTimeout: 5000 })\r\n  getData(id: string): Observable<any> {\r\n    const url = environment.baseUrl + 'factories/' + id;\r\n    return this.httpClient.get(url).pipe(take(1));\r\n  }\r\n}\r\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<p>Api connection test</p>\r\n\r\n\r\n<button (click)=\"test()\">Test API</button>\r\n\r\n<p>\r\n  Response: {{response|json}}\r\n</p>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-f97d64a32fcc52e253d860c2f4adb0943fd8b499db6b5078eee716732d9ef90819591256efbcfa7805eb94538c6936ebdae7dd216a896ccc5f837bf5904caa90-1",
            "file": "projects/main/src/app/features/work/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'csps-home',\r\n  standalone: true,\r\n  imports: [RouterModule],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.scss'\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HomeComponent-1",
            "templateData": "<p>home works!</p>\r\n\r\n<ul>\r\n  <li><a [routerLink]=\"['..','projects']\">Projects</a></li>\r\n  <li><a [routerLink]=\"['..','budget']\">Budget</a></li>\r\n  <li><a [routerLink]=\"['..','planning']\">Planning</a></li>\r\n  <li><a [routerLink]=\"['..','change']\">Change</a></li>\r\n</ul>\r\n\r\n"
        },
        {
            "name": "ImagePreviewComponent",
            "id": "component-ImagePreviewComponent-9391fafa1472f1fb45942d66f13778c6a5c5304745d897e86dd818d97cedda1b780502e0cade00bd576de18740f64300e8601208cac8f2df2c710aa209c52da8",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-image-preview/image-preview/image-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ImagePreviewComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "image-preview",
            "styleUrls": [
                "./image-preview.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./image-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "val",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, EventEmitter, forwardRef, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'image-preview',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './image-preview.component.html',\r\n  styleUrls: ['./image-preview.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => ImagePreviewComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n})\r\nexport class ImagePreviewComponent implements ControlValueAccessor {\r\n  @Output() disabled: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private onChange!: (m: any) => void;\r\n  private onTouched!: (m: any) => void;\r\n\r\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) { }\r\n\r\n  src!: Observable<any>;\r\n  url!: string;\r\n\r\n  get value() {\r\n    return this.url;\r\n  }\r\n\r\n  writeValue(val: string): void {\r\n\r\n    if (!val) this.src = of(null);\r\n    this.src = this.http\r\n      .get(val, { responseType: 'blob' })\r\n      .pipe(map(val => this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(val))));\r\n\r\n    this.url = val;\r\n    if (this.onChange)\r\n      this.onChange(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled.emit(isDisabled);\r\n  }\r\n\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./image-preview.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 34
                    }
                }
            },
            "templateData": "<div class=\"input-group input-group-sm\">\r\n    <img class=\"img-fluid\" [src]=\"src | async\" alt=\"\">\r\n</div>\r\n"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-b2d938f964fc4b67b8ab2983b90664a38ade90e0699028bbcf7463c22fbec1185316700934b659e0b13f0da23f72511599c3360052122814dc9d11d5e0ed12d5",
            "file": "projects/main/src/app/core/loader/loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-loader",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "progress",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "stopTimer",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleTimer",
                    "args": [
                        {
                            "name": "start",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateProgress",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NgbProgressbarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\nimport { NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { filter, map, Observable, Subject, takeUntil, tap, timer } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'csps-loader',\r\n  standalone: true,\r\n  imports: [CommonModule, NgbProgressbarModule],\r\n  templateUrl: './loader.component.html',\r\n  styleUrl: './loader.component.scss'\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n  // Indicates whether navigation is on-going \r\n  loading$!: Observable<boolean>;\r\n\r\n  // The progress status for the progress bar\r\n  progress: number = 0;\r\n\r\n  // Used for cleaning subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  // Used to stop timer observable\r\n  private stopTimer: Subject<void> = new Subject();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to navigation events\r\n    this.loading$ = this.router.events.pipe(\r\n      takeUntil(this.unsubscribe),\r\n      filter(evt => evt instanceof NavigationStart || evt instanceof NavigationEnd || evt instanceof NavigationCancel || evt instanceof NavigationError),\r\n      tap(evt => this.toggleTimer(evt instanceof NavigationStart)),\r\n      map(evt => evt instanceof NavigationStart)\r\n    );\r\n  }\r\n\r\n  // Start/stop a timer to simulate progress\r\n  toggleTimer(start: boolean) {\r\n    if (start) {\r\n      this.stopTimer = new Subject();\r\n      timer(0, 250).pipe(takeUntil(this.stopTimer)).subscribe(x => this.updateProgress());\r\n    } else {\r\n      this.progress = 0;\r\n      this.stopTimer.next();\r\n      this.stopTimer.complete();\r\n    }\r\n  }\r\n\r\n  // Update the progress bar value\r\n  updateProgress() {\r\n\r\n    if (this.progress >= 0 && this.progress < 25) {\r\n      // Start out between 3 - 6% increments\r\n      this.progress += (Math.random() * (5 - 3 + 1) + 3);\r\n    } else if (this.progress >= 25 && this.progress < 65) {\r\n      // increment between 0 - 3%\r\n      this.progress += (Math.random() * 3);\r\n    } else if (this.progress >= 65 && this.progress < 90) {\r\n      // increment between 0 - 2%\r\n      this.progress += (Math.random() * 2);\r\n    } else if (this.progress >= 90 && this.progress < 99) {\r\n      // finally, increment it .5 %\r\n      this.progress += 0.5;\r\n    } else {\r\n      // after 99%, don't increment\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./loader.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ngb-progressbar type=\"info\" [value]=\"progress\" height=\".3rem\" *ngIf=\"loading$|async\"></ngb-progressbar>\r\n"
        },
        {
            "name": "LoginFailedComponent",
            "id": "component-LoginFailedComponent-bb97fc12a98660cc050886b2ac5c6a033d3b85d3472e66a01ad2e4e8e0a106a22cd80ac87c5f2ddf573f0bf6413416d522429ffae61572fda0efe4fee2bdcb11",
            "file": "projects/main/src/app/login-failed/login-failed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-login-failed",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login-failed.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'csps-login-failed',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './login-failed.component.html',\r\n  styleUrl: './login-failed.component.scss'\r\n})\r\nexport class LoginFailedComponent {\r\n\r\n}\r\n",
            "styleUrl": "./login-failed.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "This component is meant to be deleted but serves currently as an identifier of a login failure\r\n\r\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-d11b92c40648ae040e37d844d4c73f97e6d727caf762ebc765181b58f2451c551798141bd3c1c91c4b79d33283de0c68edb523a447e67649b9e8db9a71ea09af",
            "file": "projects/main/src/app/core/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authenticatedUser",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticatedUser | null",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "faCircleUser",
                    "defaultValue": "faCircleUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "faCog",
                    "defaultValue": "faCog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "faEnvelope",
                    "defaultValue": "faEnvelope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "faGlobe",
                    "defaultValue": "faGlobe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "faMoon",
                    "defaultValue": "faMoon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "faSun",
                    "defaultValue": "faSun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "faUser",
                    "defaultValue": "faUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isAuthenticated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "languages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Language[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "navbarCollapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "selectedLanguage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Language | null>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "themeIcon",
                    "defaultValue": "faSun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLanguage",
                    "args": [
                        {
                            "name": "lang",
                            "type": "Language",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "Language",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "\"light\" | \"dark\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "\"light\" | \"dark\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "NgbDropdownModule",
                    "type": "module"
                },
                {
                    "name": "NgbPopoverModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faCircleUser, faCog, faGlobe, faMoon, faSun, faUser, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbDropdownModule, NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BehaviorSubject, Subject, takeUntil } from 'rxjs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { Language } from '../translation/language.model';\r\nimport { TranslationService } from '../translation/translation.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { AuthenticatedUser } from '../user/model/authenticated-user.model';\r\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\r\n \r\n@Component({\r\n  selector: 'csps-menu',\r\n  standalone: true,\r\n  imports: [RouterLink, RouterLinkActive, RouterOutlet, FontAwesomeModule, NgbDropdownModule, NgbPopoverModule, CommonModule, TranslateModule],\r\n  templateUrl: './menu.component.html',\r\n  styleUrl: './menu.component.scss'\r\n})\r\nexport class MenuComponent implements OnInit, OnDestroy {\r\n  // Collapsed status of menu navbar\r\n  navbarCollapsed = false;\r\n\r\n  // User profile icons\r\n  faUser: IconDefinition = faUser;\r\n  faCircleUser: IconDefinition = faCircleUser;\r\n  faGlobe: IconDefinition = faGlobe;\r\n  faCog: IconDefinition = faCog;\r\n  faEnvelope: IconDefinition = faEnvelope;\r\n  \r\n  // Dark/light theme icons\r\n  themeIcon: IconDefinition = faSun;\r\n  faMoon: IconDefinition = faMoon;\r\n  faSun: IconDefinition = faSun;\r\n\r\n  // The list of languages and the selected language\r\n  languages: Language[] = [];\r\n  selectedLanguage$!: BehaviorSubject<Language | null>;\r\n\r\n  // Indicates whether the user is authenticated\r\n  public isAuthenticated: boolean = false;\r\n\r\n  // The authenticated user\r\n  public authenticatedUser: AuthenticatedUser | null = null;\r\n\r\n  // Used for cleaning subscription \r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private userService: UserService, private translationService: TranslationService, private Renderer2: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.searchService.init();\r\n\r\n    // Wire languages\r\n    this.languages = this.translationService.languages\r\n    this.selectedLanguage$ = this.translationService.selectedApplicationLanguage$;\r\n\r\n    //this.menuService.menuItems$.pipe(takeUntil(this.unsubscribe)).subscribe(menu => this.menu = menu);\r\n\r\n    this.userService.authenticatedUserSubject$.pipe(takeUntil(this.unsubscribe)).subscribe(authenticatedUser => {\r\n      this.authenticatedUser = authenticatedUser;\r\n      this.isAuthenticated = authenticatedUser !== null\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  // Set the theme of the app\r\n  setTheme(theme: 'light' | 'dark'): void {\r\n    this.themeIcon = theme === 'light' ? faSun : faMoon;\r\n    this.Renderer2.setAttribute(document.querySelector('html'), 'data-bs-theme', theme);\r\n  }\r\n\r\n  // Set the language of the app\r\n  setLanguage(lang: Language): void {\r\n    this.translationService.setApplicationLanguage(lang);\r\n  }\r\n}\r\n\r\n",
            "styleUrl": "./menu.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translationService",
                        "type": "TranslationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translationService",
                        "type": "TranslationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "Renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<header class=\"navbar navbar-expand navbar-dark bg-primary px-4 flex-column flex-md-row\">\r\n  <a class=\"navbar-brand me-md-2 me-0\" routerLink=\"'.'\" aria-label=\"CSPS\" (click)=\"navbarCollapsed = true\">\r\n    <svg class=\"align-middle\"\r\n         xmlns=\"http://www.w3.org/2000/svg\"\r\n         xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n         width=\"36\"\r\n         height=\"36\"\r\n         viewBox=\"0 0 512 512\"\r\n         [routerLink]=\"['/home']\">\r\n      <defs>\r\n        <linearGradient id=\"a\">\r\n          <stop offset=\"0\" stop-color=\"#0143a3\"></stop>\r\n          <stop offset=\"1\" stop-color=\"#0273d4\"></stop>\r\n        </linearGradient>\r\n        <linearGradient id=\"b\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"matrix(1.33396, 0, 0, 1.33396, 391.773255, -808.022022)\" x1=\"-111\" y1=\"967.862\" x2=\"-110.5\" y2=\"617.362\" xlink:href=\"#a\"></linearGradient>\r\n      </defs>\r\n      <path d=\"M 243.434 16.412 L 450.504 97.638 L 430.484 370.491 L 244.577 483.751 L 57.527 369.347 L 38.08 98.209 L 243.434 16.412 Z\" fill=\"url(#b)\" fill-rule=\"evenodd\" stroke=\"#fff\" stroke-width=\"20\"></path>\r\n      <text style=\"fill: rgb(248, 245, 245); font-family: Arial, sans-serif; font-size: 16px; white-space: pre;\" transform=\"matrix(16.112854, 0, 0, 16.503521, -2039.469849, -1303.556396)\" x=\"135.845\" y=\"99.315\">C</text>\r\n    </svg>\r\n    <span class=\"ms-2 d-xl-none d-lg-none d-md-none d-inline\" [routerLink]=\"['/home']\">CSPS</span>\r\n  </a>\r\n\r\n  <div class=\"navbar-nav-scroll\">\r\n    <ul class=\"navbar-nav flex-row\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/home']\" (click)=\"navbarCollapsed = true\">{{\"Home\" | translate}}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/products']\" (click)=\"navbarCollapsed = true\">{{'TOPMENU.PRODUCTS' | translate}}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/work']\" (click)=\"navbarCollapsed = true\">{{\"Work\" | translate}}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/documentation']\" (click)=\"navbarCollapsed = true\">{{\"Documentation\" | translate}}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/admin']\" (click)=\"navbarCollapsed = true\">{{\"Admin\" | translate}}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <ul class=\"navbar-nav flex-row ms-md-auto\">\r\n    <li ngbDropdown class=\"nav-item\">\r\n      <button type=\"button\" class=\"nav-link cursor-pointer\" ngbDropdownToggle><fa-icon [icon]=\"themeIcon\"></fa-icon></button>\r\n      <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-md-end\">\r\n        <button ngbDropdownItem class=\"cursor-pointer\" (click)=\"setTheme('light')\"><fa-icon [icon]=\"faSun\"></fa-icon> Light Theme</button>\r\n        <button ngbDropdownItem class=\"cursor-pointer\" (click)=\"setTheme('dark')\"><fa-icon [icon]=\"faMoon\"></fa-icon> Dark Theme</button>\r\n      </div>\r\n    </li>\r\n\r\n    <li ngbDropdown class=\"nav-item\">\r\n      <button type=\"button\" class=\"nav-link cursor-pointer\" ngbDropdownToggle>\r\n        <img [class]=\"'mb-1 flag flag-' + (selectedLanguage$ | async)?.flag\" /> {{((selectedLanguage$ | async)?.name || '') | translate}}\r\n      </button>\r\n      <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-md-end\">\r\n        <button ngbDropdownItem class=\"cursor-pointer\" (click)=\"setLanguage(lang)\" *ngFor=\"let lang of languages\"><img [class]=\"'flag flag-' + lang.flag\" /> {{lang.name | translate}}</button>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <p class=\"text-muted small mb-0 ps-1\">\r\n          Translation support is still an experimental feature\r\n        </p>\r\n      </div>\r\n    </li>\r\n\r\n    <li class=\"nav-item\">\r\n      <button type=\"button\" class=\"nav-link cursor-pointer\" placement=\"bottom-right\" container=\"body\" [ngbPopover]=\"popContent\"><fa-icon [icon]=\"faUser\"></fa-icon></button>\r\n    </li>\r\n  </ul>\r\n\r\n  <button class=\"navbar-toggler navbar-toggler-right\"\r\n          type=\"button\"\r\n          (click)=\"navbarCollapsed = !navbarCollapsed\"\r\n          [attr.aria-expanded]=\"!navbarCollapsed\"\r\n          aria-controls=\"navbarContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\">\r\n    &#9776;\r\n  </button>\r\n</header>\r\n\r\n<ng-template #popContent>\r\n  <div class=\"card border-0 p-0\">\r\n    <div class=\"card-body pt-0 d-flex flex-column align-items-center\">\r\n      <h2><fa-icon [icon]=\"faCircleUser\"></fa-icon></h2>\r\n      <span>{{authenticatedUser?.name}}</span>\r\n    </div>\r\n    <div class=\"card-body px-0 d-flex flex-column align-items-s border-top\">\r\n      <ul class=\"list-unstyled\">\r\n        <li><button ngbDropdownItem class=\"cursor-pointer\"><fa-icon [icon]=\"faSun\" [fixedWidth]=\"true\"></fa-icon> Default Theme</button></li>\r\n        <li><button ngbDropdownItem class=\"cursor-pointer\"><fa-icon [icon]=\"faGlobe\" [fixedWidth]=\"true\"></fa-icon> Default Language</button></li>\r\n        <li><button ngbDropdownItem class=\"cursor-pointer\"><fa-icon [icon]=\"faEnvelope\" [fixedWidth]=\"true\"></fa-icon> Notifications (5)</button></li>\r\n        <li><button ngbDropdownItem class=\"cursor-pointer\"><fa-icon [icon]=\"faCog\" [fixedWidth]=\"true\"></fa-icon> Etc...</button></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"card-body pb-0 pt-3 border-0 border-top\">\r\n      <button class=\"btn btn-sm btn-secondary w-100\">Logout</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "MultiSelectComponent",
            "id": "component-MultiSelectComponent-d4add1bd53e01ee2e0d54c12b3e4c89324b80ecc2b3db11c7185788b2c294060b522fb7f61de42fe7a840094abf8df79c58839317a5a68f6a1095c655bc1aca7",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-multi-select/multi-select/multi-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MultiSelectComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "multi-select",
            "styleUrls": [
                "./multi-select.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "filterValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "isDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectAllCheckbox",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "showDropDown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "addOrRemove",
                    "args": [
                        {
                            "name": "option",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearFilterInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filterOptions",
                    "args": [
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDropDown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSelectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateSelectAllCheckbox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, forwardRef, Input, EventEmitter, Output } from '@angular/core';\r\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'multi-select',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\r\n  templateUrl: './multi-select.component.html',\r\n  styleUrls: ['./multi-select.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MultiSelectComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n})\r\nexport class MultiSelectComponent implements ControlValueAccessor {\r\n  @Input() options!: { key: any, value: string, selected: boolean }[];\r\n  @Input() placeholder!: string;\r\n  @Output() disabled: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private onChange!: (m: any) => void;\r\n  private onTouched!: (m: any) => void;\r\n\r\n  model: any;\r\n\r\n  showDropDown: boolean = false;\r\n\r\n  selectAllCheckbox: boolean = false;\r\n\r\n  isDisabled!: boolean;\r\n  filteredOptions: { key: any, value: string, selected: boolean }[] = [];\r\n  filterValue: string = '';\r\n\r\n  get value() {\r\n    return this.options.filter(o => o.selected).map(o => o.key);\r\n  }\r\n\r\n  writeValue(val: any): void {\r\n    const valueArray = val instanceof Array ? val : [val];\r\n    const textArray = valueArray.map(v => this.options.find(o => o.key === v)?.value);\r\n\r\n    this.model = textArray.length <= 2 ? textArray.join(', ') : textArray.slice(0, 2).join(', ') + ' (+' + (textArray.length - 2) + ')';\r\n\r\n    if (this.onChange)\r\n      this.onChange(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n    this.disabled.emit(isDisabled);\r\n  }\r\n\r\n  toggleSelectAll() {\r\n    this.options.forEach((option) => (option.selected = this.selectAllCheckbox));\r\n    this.writeValue(this.value);\r\n  }\r\n\r\n  addOrRemove(option: { key: any, value: string, selected: boolean }) {\r\n    this.writeValue(this.value);\r\n    this.updateSelectAllCheckbox();\r\n  }\r\n\r\n  private updateSelectAllCheckbox() {\r\n    this.selectAllCheckbox = this.options.every((option) => option.selected);\r\n  }\r\n\r\n  filterOptions(filterValue: string) {\r\n    this.filterValue = filterValue;\r\n    this.filteredOptions = this.options.filter(option => option.value.toLowerCase().includes(filterValue.toLowerCase()));\r\n  }\r\n\r\n  clearFilterInput() {\r\n    this.filterValue = '';\r\n    this.filteredOptions = this.options;\r\n  }\r\n\r\n  toggleDropDown() {\r\n    this.showDropDown = !this.showDropDown;\r\n    if (this.showDropDown)\r\n      this.filteredOptions = this.options;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\r\n  cursor: default;\r\n  background-color: #FFF !important;\r\n}\r\n\r\ninput:disabled{\r\n  background-color: #e9ecef!important;\r\n}\r\n\r\n.drop-show {\r\n  position: absolute;\r\n  top: calc(1.5em + 0.5rem - 1px);\r\n  width: 100%;\r\n  padding: 4px;\r\n  background-color: #FFF;\r\n  border: 1px solid #BABABA;\r\n  z-index: 100;\r\n  -webkit-box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  -moz-box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  margin-left: 1px;\r\n  overflow-y: auto;\r\n  max-height: 50vh;\r\n}\r\n\r\n.drop-show label {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n }\r\n\r\n.drop-show label input {\r\n  margin-right: 5px;\r\n}\r\n\r\n.input-filter {\r\n  position: relative;\r\n  width: 99%;\r\n}\r\n\r\n.input-filter input {\r\n  border: 1px solid #d9cfcf;\r\n}\r\n\r\n.clear-icon {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n}\r\n",
                    "styleUrl": "./multi-select.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                }
            },
            "templateData": "<div class=\"input-group input-group-sm\" (mouseleave)=\"showDropDown = false\">\r\n  <input type=\"text\" class=\"form-control form-control-sm\" [placeholder]=\"placeholder\" [disabled]=\"isDisabled\" readonly [(ngModel)]=\"model\" (click)=\"toggleDropDown()\" />\r\n  <div class=\"drop-show\" *ngIf=\"showDropDown\">\r\n    <label>\r\n      <div class=\"input-filter mx-auto\">\r\n        <input type=\"text\" class=\"w-100\" placeholder=\"Filter\" [(ngModel)]=\"filterValue\" (input)=\"filterOptions($any($event.target).value)\" />\r\n        <span class=\"clear-icon\" (click)=\"clearFilterInput()\">&#x2716;</span>\r\n      </div>\r\n    </label>\r\n    <label>\r\n      <input type=\"checkbox\" [(ngModel)]=\"selectAllCheckbox\" (change)=\"toggleSelectAll()\" />\r\n      <span>Select All</span>\r\n    </label>\r\n    <label *ngFor=\"let o of filteredOptions\">\r\n      <input type=\"checkbox\" [(ngModel)]=\"o.selected\" (change)=\"addOrRemove(o)\" />\r\n      <span>{{ o.value }}</span>\r\n    </label>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "MultiSelectListComponent",
            "id": "component-MultiSelectListComponent-61195293f14a14035f1f84c6b852817ea370b215684ed6803322058e4d10f3ef1239244a0d8fbd45f664f86071d77833063c3427e99f3e2a02809afbf50e0752",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-multi-select-list/multi-select-list/multi-select-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MultiSelectListComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "multi-select-list",
            "styleUrls": [
                "./multi-select-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-select-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "groups",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "v",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MultiSelectListItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { MultiSelectListItemComponent } from '../multi-select-item/multi-select-item.component';\r\n\r\n@Component({\r\n  selector: 'multi-select-list',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, MultiSelectListItemComponent],\r\n  templateUrl: './multi-select-list.component.html',\r\n  styleUrls: ['./multi-select-list.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MultiSelectListComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n})\r\nexport class MultiSelectListComponent implements ControlValueAccessor {\r\n  private onChange!: (m: any) => void;\r\n  private onTouched!: (m: any) => void;\r\n\r\n  @Input() options!: { key: any, value: string }[];\r\n  @Input() placeholder!: string;\r\n\r\n  groups: { options: { key: any, value: string, selected: boolean }[] }[] = [];\r\n\r\n  get value() {\r\n    return this.groups.map(g => g.options.filter(o => o.selected).map(o => o.key));\r\n  }\r\n\r\n  writeValue(v: any): void {\r\n    if (v)\r\n      this.groups = v.map((x: any) => ({\r\n        options: this.options.map(o => ({\r\n          ...o,\r\n          selected: !!x?.includes(o.key)\r\n        }))\r\n      }))\r\n\r\n    if (this.onChange)\r\n      this.onChange(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  addGroup(): void {\r\n    this.writeValue([...this.value, []])\r\n  }\r\n\r\n  updateValue() {\r\n    if (this.onChange)\r\n      this.onChange(this.value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./multi-select-list.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                }
            },
            "templateData": "<multi-select-item class=\"me-2 mb-2\" *ngFor=\"let g of groups\" [placeholder]=\"placeholder\" [options]=\"g.options\" (valueUpdated)=\"updateValue()\"></multi-select-item>\r\n<div>\r\n  <button class=\"btn btn-sm btn-primary\" (click)=\"addGroup()\">+</button>\r\n</div>\r\n"
        },
        {
            "name": "MultiSelectListItemComponent",
            "id": "component-MultiSelectListItemComponent-df7ad037736a49bc3191a48d19932a6aa327bdfbb149dc05782bd8e3a04b095960267150c27f6ea5211ddf79d254332fda604ca6539dc08c09252e706c6046b2",
            "file": "projects/main/src/app/shared/dynamic-form/components/form-multi-select-list/multi-select-item/multi-select-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-select-item",
            "styleUrls": [
                "./multi-select-item.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-select-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueUpdated",
                    "defaultValue": "new EventEmitter<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<string[]>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "showDropDown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "addOrRemove",
                    "args": [
                        {
                            "name": "option",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Host, Input, OnInit, Output, ChangeDetectorRef } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'multi-select-item',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\r\n  templateUrl: './multi-select-item.component.html',\r\n  styleUrls: ['./multi-select-item.component.css']\r\n})\r\n\r\nexport class MultiSelectListItemComponent implements OnInit {\r\n  @Input() placeholder!: string;\r\n  @Input() options!: { key: any, value: string, selected: boolean }[];\r\n  @Input() disabled!: boolean;\r\n  @Output() valueUpdated: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  model: any;\r\n\r\n  showDropDown: boolean = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.writeValue(this.value);\r\n    });\r\n  }\r\n\r\n  get value() {\r\n    return this.options.filter(o => o.selected).map(o => o.key);\r\n  }\r\n\r\n  writeValue(val: any): void {\r\n    const valueArray = val instanceof Array ? val : [val];\r\n    const textArray = valueArray.map(v => this.options.find(o => o.key === v)?.value);\r\n    this.model = textArray.length <= 2 ? textArray.join(', ') : textArray.slice(0, 2).join(', ') + ' (+' + (textArray.length - 2) + ')';\r\n\r\n    this.valueUpdated.emit(this.value);\r\n  }\r\n\r\n  addOrRemove(option: { key: any, value: string, selected: boolean }) {\r\n    setTimeout(() => {\r\n      this.writeValue(this.value);\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\r\n  cursor: default;\r\n  background-color: #FFF !important;\r\n}\r\n\r\ninput:disabled{\r\n  background-color: #e9ecef!important;\r\n}\r\n\r\n.drop-show {\r\n  position: absolute;\r\n  top: calc(1.5em + 0.5rem - 1px);\r\n  width: 100%;\r\n  padding: 4px;\r\n  background-color: #FFF;\r\n  border: 1px solid #BABABA;\r\n  z-index: 100;\r\n  -webkit-box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  -moz-box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  box-shadow: 0 6px 10px rgba(0,0,0,.15);\r\n  margin-left: 1px;\r\n  overflow-y: auto;\r\n  max-height: 50vh;\r\n}\r\n\r\n.drop-show label {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n }\r\n\r\n.drop-show label input {\r\n  margin-right: 5px;\r\n}",
                    "styleUrl": "./multi-select-item.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                }
            },
            "templateData": "<div class=\"input-group input-group-sm\" (mouseleave)=\"showDropDown = false\">\r\n  <input type=\"text\" class=\"form-control form-control-sm\" [placeholder]=\"placeholder\" [disabled]=\"disabled\" readonly [(ngModel)]=\"model\" (click)=\"showDropDown=!showDropDown\" />\r\n  <div class=\"drop-show\" *ngIf=\"showDropDown\">\r\n    <label *ngFor=\"let o of options\">\r\n      <input type=\"checkbox\" [(ngModel)]=\"o.selected\" (change)=\"addOrRemove(o)\" />\r\n      <span>{{o.value}}</span>\r\n    </label>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "OverviewComponent",
            "id": "component-OverviewComponent-8abbee814c202d41ff09dbfc0eded5b2a140b6dd1f76a91b691b0509125e28e2827b9eb5e6a1372a12c8390a215e7b192df45ea723e26e5820714bf201166089",
            "file": "projects/main/src/app/features/products/settings/overview/overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-overview",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./overview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'csps-overview',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './overview.component.html',\r\n  styleUrl: './overview.component.scss'\r\n})\r\nexport class OverviewComponent {\r\n\r\n}\r\n",
            "styleUrl": "./overview.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>overview works!</p>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-92f4cc9cc0054ccf9d578fc1ebe06b6d7ed1424277151dbedd6cfe73ba15609d9919dcba6e9acbd021b43117d9ce1f28adf6630c681037299b01a4c726c15a8e",
            "file": "projects/main/src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  standalone: true,\r\n  imports: [CommonModule, HeaderComponent],\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section class=\"storybook-page\">\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\n.storybook-page h2 {\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page p {\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\n.storybook-page ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.storybook-page .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageTemplateComponent",
            "id": "component-PageTemplateComponent-d352d559cb7289ef29208b4831a6c73d7aafbe1b19ae2750b49f678951e5cb8746bdbae0083dab51f158a48745e86a2e61d419b5153a749bddec5cc5a5642e73",
            "file": "projects/main/src/app/shared/page-template/page-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-page-template",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-template.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "subMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "SubMenuItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SubMenuItem } from './model/sub-menu-item.model';\r\n\r\n@Component({\r\n  selector: 'csps-page-template',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './page-template.component.html',\r\n  styleUrl: './page-template.component.scss'\r\n})\r\nexport class PageTemplateComponent {\r\n  @Input() subMenu?: SubMenuItem[];\r\n}\r\n",
            "styleUrl": "./page-template.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"row border-bottom justify-content-between align-items-center py-3\">\r\n  <div class=\"col\">\r\n    <h2 class=\"mb-0\"><ng-content select=\"[header]\"></ng-content></h2>\r\n  </div>\r\n  <div class=\"col-auto\">\r\n    <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n      <ng-content select=\"[toolbar]\"></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row flex-fill overflow-auto\">\r\n  <div class=\"col h-100 d-flex flex-column\">\r\n    <ul class=\"nav nav-tabs mb-3 submenu\" *ngIf=\"subMenu?.length\">\r\n      <li class=\"nav-item\" *ngFor=\"let subMenuItem of subMenu\">\r\n        <a class=\"nav-link cursor-pointer\" [routerLinkActive]=\"['active']\" [routerLink]=\"subMenuItem.route\">\r\n          {{subMenuItem.name}}\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <ng-content select=\"[notifications]\"></ng-content>\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </div>\r\n</div>\r\n<div class=\"row justify-content-end gray-200-background\">\r\n  <div class=\"col-auto\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PageWrapperComponent",
            "id": "component-PageWrapperComponent-ee0b1e2117609dc9fa5b00b2cd74d598ff234be870a294d3b54b4a12c19e5e377861d74e4126c12f65b248715abbe64bff2eacdff7aef6e91ad7587bb44299dd",
            "file": "projects/main/src/app/shared/page-wrapper/page-wrapper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-page-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-wrapper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "menuHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "MenuItem[]",
                    "decorators": []
                },
                {
                    "name": "quickLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "QuickLink[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faBars",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isMenuCollapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "NgbCollapseModule",
                    "type": "module"
                },
                {
                    "name": "SideBarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faBars, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MenuItem } from '../side-bar/model/menu-item.model';\r\nimport { QuickLink } from '../side-bar/model/quick-link.model';\r\nimport { SideBarComponent } from '../side-bar/side-bar.component';\r\n\r\n@Component({\r\n  selector: 'csps-page-wrapper',\r\n  standalone: true,\r\n  imports: [CommonModule, FontAwesomeModule, NgbCollapseModule, SideBarComponent],\r\n  templateUrl: './page-wrapper.component.html',\r\n  styleUrl: './page-wrapper.component.scss'\r\n})\r\nexport class PageWrapperComponent {\r\n  // Icons\r\n  faBars: IconDefinition = faBars;\r\n\r\n  // Indicates if the menu is collapsed\r\n  isMenuCollapsed: boolean = false;\r\n\r\n  @Input() menuItems!: MenuItem[];\r\n  @Input() quickLinks!: QuickLink[];\r\n  @Input() menuHeader!: string;\r\n}\r\n",
            "styleUrl": "./page-wrapper.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container-fluid h-100\">\r\n  <div class=\"row flex-lg-row flex-lg-nowrap h-100\">\r\n\r\n    <div role=\"button\" class=\"d-flex d-lg-none py-2 align-items-center bg-body-tertiary text-body border-bottom\" *ngIf=\"menuItems?.length\">\r\n      <span class=\"me-auto\">{{menuHeader}}</span>\r\n      <button class=\"btn btn-link p-0\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n        <fa-icon [icon]=\"faBars\"></fa-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <csps-side-bar class=\"d-none d-lg-block col-lg-2 border-end bg-body-tertiary px-0\" [header]=\"menuHeader\" [quickLinks]=\"quickLinks\" [menuItems]=\"menuItems\" *ngIf=\"menuItems?.length\"></csps-side-bar>\r\n\r\n    <div class=\"col-12 col-lg d-flex flex-column flex-fill min-height-0\">\r\n      <ng-content select=\"[body]\"></ng-content>\r\n      <!--<div class=\"row border-bottom py-3\">\r\n        <h2 class=\"mb-0\"><ng-content select=\"[header]\"></ng-content></h2>\r\n      </div>\r\n      <div class=\"row flex-fill overflow-auto\">\r\n        <div class=\"col h-100 d-flex flex-column\">\r\n          <ng-content select=\"[body]\"></ng-content>\r\n        </div>\r\n      </div>-->\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PermissionsComponent",
            "id": "component-PermissionsComponent-2cf161ee2c97a8b0581c2ccb2ce3be4b4029e98e58f5726bde55a55fec76ff18aafba6b6b307fcfd5359220fbb92aafd7b9e727d756fbca5f055a42894783d92",
            "file": "projects/main/src/app/features/admin/permissions/permissions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-permissions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./permissions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-permissions',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './permissions.component.html',\r\n  styleUrl: './permissions.component.scss'\r\n})\r\nexport class PermissionsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./permissions.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Permissions</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "PriceReportsComponent",
            "id": "component-PriceReportsComponent-a686aa931114e6e6e12d77029c608d0d624e83056b90eefa1d7ecc05820c6c787f9bbb915bc4e65372f65a470384418b52d2e249170598b8eb6c630e1453404c",
            "file": "projects/main/src/app/features/admin/price-reports/price-reports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-price-reports",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./price-reports.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-price-reports',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './price-reports.component.html',\r\n  styleUrl: './price-reports.component.scss'\r\n})\r\nexport class PriceReportsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./price-reports.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Price Reports</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "PrioritiesComponent",
            "id": "component-PrioritiesComponent-cfe634f88d60ef1f40d62390552324a9414312eef2584525d6cee845dc9c1436a56d3ef674b984144b0cc4ca32a63a6be49a7db6ea1696b68bca6d86c3f774cb",
            "file": "projects/main/src/app/features/work/planning/priorities/priorities.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-priorities",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./priorities.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-priorities',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './priorities.component.html',\r\n  styleUrl: './priorities.component.scss'\r\n})\r\nexport class PrioritiesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n",
            "styleUrl": "./priorities.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Priorities</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "ProductComponent",
            "id": "component-ProductComponent-86f7c12bf2f48c6ec5eed5b0c532554e25e7435ee4d246983c98fcee6983415989ee8ac8529e93d6432d74319629f24a72d1cbc9254b7ad53ce62d0076659585",
            "file": "projects/main/src/app/features/products/product/product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-product",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuHeader",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "quickLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuickLink[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { faCalculator, faClock, faCog, faCogs, faDesktop, faDollarSign, faFile, faHome, faLanguage, faUsersCog, faWeightHanging } from '@fortawesome/free-solid-svg-icons';\r\nimport { combineLatest, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\nimport { PageWrapperComponent } from '../../../shared/page-wrapper/page-wrapper.component';\r\nimport { MenuItem } from '../../../shared/side-bar/model/menu-item.model';\r\nimport { QuickLink } from '../../../shared/side-bar/model/quick-link.model';\r\nimport { ProductMenuItem } from '../shared/models/menu/product-menu-item.model';\r\nimport { Product } from '../shared/models/product/product.model';\r\nimport { ProductMenuService } from '../shared/product-menu.service';\r\nimport { ProductService } from '../shared/product.service';\r\n\r\n@Component({\r\n  selector: 'csps-product',\r\n  standalone: true,\r\n  imports: [CommonModule, PageWrapperComponent, PageTemplateComponent, RouterModule],\r\n  templateUrl: './product.component.html',\r\n  styleUrl: './product.component.scss'\r\n})\r\nexport class ProductComponent implements OnInit, OnDestroy {\r\n  // The menu items, quickLinks\r\n  menuItems!: MenuItem[];\r\n  quickLinks!: QuickLink[];\r\n  menuHeader: string = '';\r\n\r\n  // The selected product\r\n  product!: Product;\r\n\r\n  // Used for cleaning subscription \r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private productMenuService: ProductMenuService, private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    const observables: [Observable<Product | null>, Observable<{ [key: string]: ProductMenuItem[] } | null>] = [\r\n      this.productService.product$.pipe(takeUntil(this.unsubscribe)),\r\n      this.productMenuService.productMenuItems$.pipe(takeUntil(this.unsubscribe))\r\n    ];\r\n\r\n    combineLatest(observables).pipe(takeUntil(this.unsubscribe)).subscribe(([product, menuItems]: [Product | null, { [key: string]: ProductMenuItem[] } | null]) => {\r\n      if (product && menuItems) {\r\n        this.product = product;\r\n        this.menuHeader = this.product.name;\r\n        this.quickLinks = []; // this.productMenuService.quickLinks;\r\n\r\n\r\n        const items : MenuItem[] = [\r\n          {\r\n            id: '1', label: 'Product Features', icon: faHome, children: [\r\n              ...(menuItems['productFeatureList']?.map((x, i) => ({ id: '101' + (i + 1), label: x.name, icon: faHome, route: ['features'] })) || []),\r\n              ...(menuItems['featureLimitsList']?.map((x, i) => ({ id: '102' + (i + 1), label: x.name, icon: faHome, route: ['feature-limits'] })) || []),\r\n              ...(menuItems['productRuleSet']?.map((x, i) => ({ id: '103' + (i + 1), label: x.name, icon: faHome, route: ['rules'] })) || []),\r\n              ...(menuItems['attributes']?.map((x, i) => ({ id: '104' + (i + 1), label: x.name, icon: faHome, route: ['attributes'] })) || []),\r\n              {\r\n                id: '105', label: 'PIN', icon: faHome, children: [\r\n                  ...(menuItems['pinDefinitions']?.map((x, i) => ({ id: '105' + (i + 1), label: x.name, icon: faHome, route: ['pin-definitions', ...x.routeArgs] })) || []),\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: '2', label: 'Eoms', icon: faFile, children: [\r\n              ...(menuItems['eoms']?.map((x, i) => ({ id: '2' + (i + 1), label: x.name, icon: faFile, route: ['eoms', ...x.routeArgs] })) || []),\r\n            ]\r\n          },\r\n          {\r\n            id: '5', label: 'Lead Time', icon: faClock, children: [\r\n              ...(menuItems['leadTimeBooks']?.map((x, i) => ({ id: '5' + (i + 1), label: x.name, icon: faFile, route: ['lead-time', ...x.routeArgs] })) || [])\r\n            ]\r\n          },\r\n          {\r\n            id: '6', label: 'Pricing', icon: faDollarSign, children: [\r\n              ...(menuItems['priceBooks']?.map((x, i) => ({ id: '6' + (i + 1), label: x.name, icon: faFile, route: ['pricing', ...x.routeArgs] })) || [])\r\n            ]\r\n          },\r\n          {\r\n            id: '7', label: 'Sel. Nav', icon: faHome, children: [\r\n              {\r\n                id: '71', label: 'Screen builders', icon: faDesktop, children: [\r\n                  ...(menuItems['batchScreen']?.map((x, i) => ({ id: '711' + (i + 1), label: x.name, icon: faHome, route: ['sel-nav', 'screen-builder', 'batch-screens'] })) || []),\r\n                  ...(menuItems['unitScreen']?.map((x, i) => ({ id: '712' + (i + 1), label: x.name, icon: faHome, route: ['sel-nav', 'screen-builder', 'unit-screens'] })) || []),\r\n                  ...(menuItems['configureScreen']?.map((x, i) => ({ id: '713' + (i + 1), label: x.name, icon: faHome, route: ['sel-nav', 'screen-builder', 'configure-screens'] })) || []),\r\n                ]\r\n              },\r\n              {\r\n                id: '72', label: 'CRS Mapping Files', icon: faCalculator, children: [\r\n                  ...(menuItems['crsMappingBatchInput']?.map((x, i) => ({ id: '721' + (i + 1), label: x.name, icon: faHome, route: ['sel-nav', 'crs-mapping', 'batch-input'] })) || []),\r\n                  ...(menuItems['crsMappingBatchOutput']?.map((x, i) => ({ id: '722' + (i + 1), label: x.name, icon: faHome, route: ['sel-nav', 'crs-mapping', 'batch-output'] })) || []),\r\n                  ...(menuItems['crsMappingUnitInput']?.map((x, i) => ({ id: '723' + (i + 1), label: x.name, icon: faHome, route: ['sel-nav', 'crs-mapping', 'unit-input'] })) || []),\r\n                  ...(menuItems['crsMappingUnitOutput']?.map((x, i) => ({ id: '724' + (i + 1), label: x.name, icon: faHome, route: ['sel-nav', 'crs-mapping', 'unit-output'] })) || []),\r\n                ]\r\n              },\r\n              ...(menuItems['flexGroupDefinitionScreen']?.map((x, i) => ({ id: '74' + (i + 1), label: x.name, icon: faUsersCog, route: ['sel-nav', 'flex-groups'] })) || []),\r\n              ...(menuItems['defaultValues']?.map((x, i) => ({ id: '75' + (i + 1), label: x.name, icon: faUsersCog, route: ['sel-nav', 'default-values'] })) || []),\r\n              ...(menuItems['optionExclusions']?.map((x, i) => ({ id: '76' + (i + 1), label: x.name, icon: faUsersCog, route: ['sel-nav', 'option-exclusions'] })) || []),\r\n              ...(menuItems['brandingMask']?.map((x, i) => ({ id: '77' + (i + 1), label: x.name, icon: faUsersCog, route: ['sel-nav', 'branding-masks'] })) || []),\r\n              ...(menuItems['featureConcatenations']?.map((x, i) => ({ id: '78' + (i + 1), label: x.name, icon: faUsersCog, route: ['sel-nav', 'feature-concatenations'] })) || []),\r\n              ...(menuItems['erpString']?.map((x, i) => ({ id: '781' + (i + 1), label: x.name, icon: faUsersCog, route: ['sel-nav', 'erp-strings'] })) || []),\r\n              ...(menuItems['onScreenAssistance']?.map((x, i) => ({ id: '79' + (i + 1), label: x.name, icon: faUsersCog, route: ['sel-nav', 'on-screen-assistance'] })) || []),\r\n              {\r\n                id: '79', label: 'Emulator', icon: faUsersCog, children: [\r\n                  ...(menuItems['batchScreen']?.map((x, i) => ({ id: '791' + (i + 1), label: 'Batch', icon: faHome, route: ['sel-nav', 'emulator', 'batch'] })) || []),\r\n                  ...(menuItems['unitScreen']?.map((x, i) => ({ id: '792' + (i + 1), label: 'Unit', icon: faHome, route: ['sel-nav', 'emulator', 'unit'] })) || []),\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            id: '8', label: 'Code Calculations', icon: faCogs, children: [\r\n              ...(menuItems['codeCalculations']?.map((x, i) => ({ id: '801' + (i + 1), label: x.name, icon: faFile, route: ['code-calculations'] })) || []),\r\n            ]\r\n          },\r\n          {\r\n            id: '10', label: 'Weights', icon: faWeightHanging, children: [\r\n              ...(menuItems['weightBooks']?.map((x, i) => ({ id: '1001' + (i + 1), label: x.name, icon: faHome, route: ['weighting'] })) || [])\r\n            ]\r\n          },\r\n          {\r\n            id: '11', label: 'Translations', icon: faLanguage, children: [\r\n              ...(menuItems['translations']?.map((x, i) => ({ id: '1101' + (i + 1), label: x.name, icon: faHome, route: ['translations'] })) || []),\r\n            ]\r\n          },\r\n          ...(menuItems['productMenuSettings']?.map((x, i) => ({ id: '12' + (i + 1), label: x.name, icon: faCog, route: ['settings'], stickyBottom: true, collpaseOnClick: true })) || []),\r\n        ];\r\n\r\n        // Filter menu item without children & without route\r\n        this.menuItems = items.reduce((acc, top) => {\r\n          top.children = top.children?.filter(child => child.route || child.children?.length);\r\n          if (top.children?.length || top.route)\r\n            acc.push(top); return acc;\r\n        }, new Array());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n",
            "styleUrl": "./product.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productMenuService",
                        "type": "ProductMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "productMenuService",
                        "type": "ProductMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<csps-page-wrapper [menuItems]=\"menuItems\" [quickLinks]=\"quickLinks\" [menuHeader]=\"menuHeader\">\r\n\r\n  <ng-container body>\r\n    <router-outlet></router-outlet>\r\n  </ng-container>\r\n\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "ProductFeatureListComponent",
            "id": "component-ProductFeatureListComponent-f4aacd74b5212a55e993245f02d3a7756929f5ea31c0b661ae795bf2d69fd7d3927636491a05353914df26de7d67fe26b712a6bc55b30ffa3c046d0e70cc3687",
            "file": "projects/main/src/app/features/products/features/product-feature-list/product-feature-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-product-feature-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-feature-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "anomalyClearingMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "AUTOGEN_CATEGORY",
                    "defaultValue": "\"AUTO GENERATED\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "AUTOGEN_FEATURE_LOC",
                    "defaultValue": "[\"LOC\", \"Manufacturing Location\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[string, string]",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "AUTOGEN_FEATURE_MODLEVEL",
                    "defaultValue": "[\"MODLEVEL\", \"Mod Level\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[string, string]",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "AUTOGEN_FEATURE_QTY",
                    "defaultValue": "[\"QTY\", \"Unit Quantity\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[string, string]",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "AUTOGEN_FEATURE_SPECL",
                    "defaultValue": "[\"SPECL\", \"Special Flag\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[string, string]",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "AUTOGEN_FEATURE_STYLE",
                    "defaultValue": "[\"STYLE\", \"Style\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[string, string]",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "AUTOGEN_FEATURE_TAG",
                    "defaultValue": "[\"TAG\", \"Unit Tag\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[string, string]",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "dimensions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dimension[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "featureFactories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductFeatureListTableFactory[]",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "featureListService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FeatureListService",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "features",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductFeatureListTableFeature[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "kernel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VersionPageTemplateComponent<FeatureListVersion | FeatureListVersionComparison>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "VersionPageTemplateComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "optionLookup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "rules",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "selectedDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BaseDocument",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "selectedVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FeatureListVersion",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<ProductFeatureListTableFeature>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "styleFilter$",
                    "defaultValue": "new BehaviorSubject<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "styles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductStyle[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ProductFeatureListTableComponent",
                    "type": "component"
                },
                {
                    "name": "VersionPageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "NgbTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { VersionPageTemplateComponent } from '../../shared/components/version-page-template/version-page-template.component';\r\nimport { Dimension } from '../../shared/models/dimensions/dimension.model';\r\nimport { ProductFeatureListTableFactory } from '../shared/product-feature-list-table/model/product-feature-list-table-factory.model';\r\nimport { ProductFeatureListTableFeature } from '../shared/product-feature-list-table/model/product-feature-list-table-feature.model';\r\nimport { ProductFeatureListTableStyle } from '../shared/product-feature-list-table/model/product-feature-list-table-style.model';\r\nimport { ProductFeatureListTableComponent } from '../shared/product-feature-list-table/product-feature-list-table.component';\r\nimport { FeatureListVersion } from '../shared/models/feature-list-version.model';\r\nimport { FeatureListVersionComparison } from '../../shared/components/feature-comparer/models/feature-list-version-comparison.model';\r\nimport { DataTableSettings } from '../../../../shared/data-table/model/data-table-settings.model';\r\nimport { Product } from '../../shared/models/product/product.model';\r\nimport { ProductStyle } from '../../shared/models/product/product-style.model';\r\nimport { BehaviorSubject, combineLatest, Subject, takeUntil } from 'rxjs';\r\nimport { BaseDocument } from '../../shared/components/version-page-template/models/document.model';\r\nimport { FeatureListService } from '../shared/feature-list.service';\r\nimport { FactoryService } from '../../shared/factory.service';\r\nimport { DimensionService } from '../../shared/dimension.service';\r\nimport { DynamicFormService } from '../../../../shared/dynamic-form/services/dynamic-form.service';\r\nimport { LexicalRankService } from '../../../../shared/lexical-rank/lexical-rank.service';\r\nimport { ProductService } from '../../shared/product.service';\r\nimport { TicketService } from '../../shared/ticket.service';\r\nimport { DataTableColumnDefinition } from '../../../../shared/data-table/model/data-table-column-definition.model';\r\nimport { Factory } from '../../shared/models/factory/factory.model';\r\nimport { FeatureFactoryList } from '../shared/models/feature-factory-list.model';\r\n\r\n@Component({\r\n  selector: 'csps-product-feature-list',\r\n  standalone: true,\r\n  imports: [ProductFeatureListTableComponent, VersionPageTemplateComponent, NgbTooltipModule],\r\n  templateUrl: './product-feature-list.component.html',\r\n  styleUrl: './product-feature-list.component.scss'\r\n})\r\nexport class ProductFeatureListComponent implements OnInit, OnDestroy {\r\n  @ViewChild(VersionPageTemplateComponent) kernel!: VersionPageTemplateComponent<FeatureListVersion, FeatureListVersionComparison>;\r\n\r\n  // The datatable settings\r\n  settings!: DataTableSettings<ProductFeatureListTableFeature>;\r\n\r\n  // The selected product\r\n  product!: Product;\r\n\r\n  // The list of dimensions\r\n  dimensions: Dimension[] = [];\r\n\r\n  // The list of product styles\r\n  styles: ProductStyle[] = [];\r\n\r\n  // The selected feature list document\r\n  selectedDocument!: BaseDocument;\r\n\r\n  // The selected feature list version\r\n  selectedVersion!: FeatureListVersion;\r\n\r\n  features: ProductFeatureListTableFeature[] = [];\r\n\r\n  // Indicates that anomalies are being cleared\r\n  anomalyClearingMode: boolean = false;\r\n\r\n  // The list of factories for the feature\r\n  featureFactories: ProductFeatureListTableFactory[] = [];\r\n\r\n  // A fast-searchable object to locate options\r\n  optionLookup!: { [key: string]: any };\r\n\r\n  // The rules\r\n  rules: any[] = [];\r\n\r\n  // The name of the auto generated features\r\n  AUTOGEN_CATEGORY: string = \"AUTO GENERATED\";\r\n  AUTOGEN_FEATURE_LOC: [string, string] = [\"LOC\", \"Manufacturing Location\"];\r\n  AUTOGEN_FEATURE_STYLE: [string, string] = [\"STYLE\", \"Style\"];\r\n  AUTOGEN_FEATURE_MODLEVEL: [string, string] = [\"MODLEVEL\", \"Mod Level\"];\r\n  AUTOGEN_FEATURE_QTY: [string, string] = [\"QTY\", \"Unit Quantity\"];\r\n  AUTOGEN_FEATURE_TAG: [string, string] = [\"TAG\", \"Unit Tag\"];\r\n  AUTOGEN_FEATURE_SPECL: [string, string] = [\"SPECL\", \"Special Flag\"];\r\n\r\n  // The selected style filter\r\n  styleFilter$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\r\n\r\n  // Used for cleaning subscription \r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(\r\n    public featureListService: FeatureListService,\r\n    private factoryService: FactoryService,\r\n    private dimensionService: DimensionService,\r\n    private dynamicFormService: DynamicFormService,\r\n    private lexicalRankService: LexicalRankService,\r\n    private productService: ProductService,\r\n    // private jsonService: JsonService,\r\n    // private excelService: ExcelService,\r\n    private ticketService: TicketService,\r\n    // private exportConfiguratorService: ExportConfiguratorService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to feature list document and feature list version\r\n    const observables = [\r\n      this.featureListService.document$.pipe(takeUntil(this.unsubscribe)),\r\n      this.featureListService.version$.pipe(takeUntil(this.unsubscribe)),\r\n      this.productService.product$.pipe(takeUntil(this.unsubscribe)),\r\n      this.factoryService.factories$.pipe(takeUntil(this.unsubscribe)),\r\n      this.featureListService.factoryList$.pipe(takeUntil(this.unsubscribe)),\r\n      this.dimensionService.dimensions$.pipe(takeUntil(this.unsubscribe)),\r\n      this.styleFilter$.pipe(takeUntil(this.unsubscribe)),\r\n      this.featureListService.ruleSet$.pipe(takeUntil(this.unsubscribe)),\r\n    ];\r\n\r\n    combineLatest(...observables).pipe(takeUntil(this.unsubscribe)).subscribe(([document, version, product, factories, factoryList, dimensions, styleIdFilter, ruleSet]) => {\r\n      this.selectedDocument = document as any;\r\n      this.selectedVersion = version as any;\r\n      this.product = product as any;\r\n      this.styles = this.product.styles || [];\r\n      \r\n\r\n      // // Store rules\r\n      // this.rules = ruleSet?.rules || [];\r\n\r\n      if (version && factoryList && factories && dimensions) {\r\n\r\n        this.features = this.selectedVersion.features;\r\n        this.featureFactories = (factories as Factory[]).filter(x => (factoryList as FeatureFactoryList).finalAssemblyFactoryIds.includes(x.id));\r\n        this.dimensions = dimensions as Dimension[];\r\n\r\n\r\n        // // Create temporary objects for fast feature and option lookups\r\n        // this.optionLookup = this.selectedVersion.features.reduce((acc: any, f) => {\r\n        //   f.options.forEach(o => {\r\n        //     acc[o.id] = { ...o, feature: f };\r\n        //   });\r\n        //   return acc;\r\n        // }, {});\r\n\r\n        // // Flatten the list of options and add dummy options for each unused feature\r\n        // const options = this.selectedVersion.features\r\n        //   .filter(f => !f.styleRestrictions || !f.styleRestrictions.length || !styleIdFilter || f.styleRestrictions.includes(styleIdFilter))\r\n        //   .sort(this.lexicalRankService.lexicalRankSorter())\r\n        //   .reduce((acc, f) => {\r\n        //     const featureMetaData = {\r\n        //       addIcon: f.isNumeric || f.isFreeText || f.isAutoGenerated ? null : faPlus,\r\n        //       editIcon: f.isAutoGenerated ? null : faEdit,\r\n        //       deleteIcon: f.isAutoGenerated ? null : faTrash,\r\n        //       warning:\r\n        //         !this.featureFactories.every(factory => f.options.some(o => o.releases.some(r => r.factoryId === factory.id))) ||\r\n        //           (f.isArray && f.arraySize.featureId === this.emptyGuid && f.arraySize.size === 0) ||\r\n        //           f.options.some(o => o.releases.some(r => r.asSQ && !r.sqRules?.rules?.length && !r.unavailableRules?.rules?.length && !r.contractRules?.rules?.length)) ?\r\n        //           faExclamationCircle : '',\r\n        //       fullName: `${f.name} - ${f.description} ${f.isArray ? (' (Array Feature' + (f.arraySize.featureId !== this.emptyGuid && f.arraySize?.featureId?.length > 0 ? ' - size constrained by ' + this.selectedVersion.features.find(g => g.id === f.arraySize.featureId)?.name : '') + (f.arraySize.size > 0 ? ' - ' + f.arraySize.size + ' elements max' : '')) + ')' : ''}`,\r\n        //       dimension: this.dimensions.find(d => d.id === f.dimensionId),\r\n        //       typeIcon: f.isNumeric ? faBalanceScale : (f.isFreeText ? faEdit : faList),\r\n        //       restrictionIcon: f.styleRestrictions?.length ? faEye : null,\r\n        //       restrictedStyles: this.styles.filter(s => f.styleRestrictions?.includes(s.id)).map(s => s.name).join(', '),\r\n        //       noteIcon: faStickyNote\r\n        //     };\r\n        //     if (!f.options?.length)\r\n        //       acc.push({ isPlaceholder: true, feature: { ...f, ...featureMetaData } });\r\n        //     else {\r\n        //       const { options, ...cleanedFeature } = f;\r\n        //       const opts = f.options.sort(this.lexicalRankService.lexicalRankSorter()).map(o => ({ ...o, feature: { ...cleanedFeature, ...featureMetaData } }));\r\n        //       acc.push(...opts);\r\n        //     }\r\n        //     return acc;\r\n        //   }, new Array());\r\n\r\n\r\n        // //// Detect anomalies\r\n        // // if (!this.anomalyClearingMode && !this.selectedVersion.released)\r\n        // //   this.anomalyClearingMode = this.detectAnomalies();\r\n\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  \r\n  // features: ProductFeatureListTableFeature[] = [\r\n  //   {\r\n  //     id: '1',\r\n  //     category: { name: 'Cat. A' },\r\n  //     name: 'Feat 1',\r\n  //     description: 'Desc. F1',\r\n  //     rank: 'fds',\r\n  //     dimensionId: undefined,\r\n  //     isNumeric: false,\r\n  //     isFreeText: false,\r\n  //     options: [\r\n  //       { id: '11', name: 'option11', rank: 'aaa', description: 'desc11', isActive: true, releases: [], isAutoGenerated: false },\r\n  //       { id: '12', name: 'option12', rank: 'bbb', description: 'desc12', isActive: true, releases: [], isAutoGenerated: false }\r\n  //     ],\r\n  //     styleRestrictions: [],\r\n  //     notes: 'ABC',\r\n  //     isArray: false,\r\n  //     arraySize: undefined,\r\n  //     isAutoGenerated: false\r\n  //   }\r\n  // ];\r\n\r\n  // dimensions: Dimension[] = [];\r\n\r\n  // factories: ProductFeatureListTableFactory[] = [\r\n  //   { id: '1', name: 'San Antonio', abbreviation: 'SAT' },\r\n  //   { id: '2', name: 'Nantes', abbreviation: 'NAN' },\r\n  //   { id: '3', name: 'Wuxi', abbreviation: 'WXF' }\r\n  // ];\r\n\r\n  // styles: ProductFeatureListTableStyle[] = [\r\n  //   { id: '1', name: 'A' },\r\n  //   { id: '2', name: 'B' },\r\n  // ]\r\n}\r\n",
            "styleUrl": "./product-feature-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "factoryService",
                        "type": "FactoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dimensionService",
                        "type": "DimensionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lexicalRankService",
                        "type": "LexicalRankService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ticketService",
                        "type": "TicketService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 82,
                "jsdoctags": [
                    {
                        "name": "featureListService",
                        "type": "FeatureListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "factoryService",
                        "type": "FactoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dimensionService",
                        "type": "DimensionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lexicalRankService",
                        "type": "LexicalRankService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ticketService",
                        "type": "TicketService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<csps-version-page-template>\r\n\r\n  <ng-container header>\r\n    Product Feature List \r\n    <!-- <span class=\"gray-text small\">subtitle</span> -->\r\n  </ng-container>\r\n\r\n  <ng-container toolbar>\r\n    <!-- <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Open Workflow\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 1\r\n    </button>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Manage Versions\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 2\r\n    </button>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Help\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 3\r\n    </button> -->\r\n  </ng-container>\r\n\r\n  <!-- <ng-container notifications>\r\n      Alert  / notif\r\n  </ng-container> -->\r\n\r\n\r\n  <ng-container body>\r\n    <csps-product-feature-list-table [features]=\"features\" [factories]=\"featureFactories\" [styles]=\"styles\" [dimensions]=\"dimensions\"></csps-product-feature-list-table>\r\n  </ng-container>\r\n\r\n</csps-version-page-template>\r\n"
        },
        {
            "name": "ProductFeatureListTableComponent",
            "id": "component-ProductFeatureListTableComponent-5e57448c574e6c950f52aa0fb1e619ac7265a4ba4245e60be0725c115cdff11a6f7a0f9ad965f738d2209bc3b05a7c7b64bc5ce55fdf10fbb91de65f7f695b6f",
            "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-product-feature-list-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-feature-list-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dimensions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Dimension[]",
                    "decorators": []
                },
                {
                    "name": "factories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "ProductFeatureListTableFactory[]",
                    "decorators": []
                },
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "ProductFeatureListTableFeature[]",
                    "decorators": []
                },
                {
                    "name": "styles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "ProductFeatureListTableStyle[]",
                    "decorators": []
                },
                {
                    "name": "tableOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "ProductFeatureListTableOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "featureAnalyzerOpened",
                    "defaultValue": "new EventEmitter<null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "featureDeleted",
                    "defaultValue": "new EventEmitter<{ id: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "featureImporterOpened",
                    "defaultValue": "new EventEmitter<null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "featureMoved",
                    "defaultValue": "new EventEmitter<{ id: string, rank: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "optionDeleted",
                    "defaultValue": "new EventEmitter<{ featureId: string, id: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "optionImporterOpened",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "optionMoved",
                    "defaultValue": "new EventEmitter<{ featureId: string, id: string, rank: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "optionsActivated",
                    "defaultValue": "new EventEmitter<{ featureId: string, optionId: string }[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter<literal type[]>"
                },
                {
                    "name": "optionsDeactivated",
                    "defaultValue": "new EventEmitter<{ featureId: string, optionId: string }[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter<literal type[]>"
                },
                {
                    "name": "optionsReleasedToFactory",
                    "defaultValue": "new EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "optionsUnreleasedFromFactory",
                    "defaultValue": "new EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<ProductFeatureListTableFeature>",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "styleFilter$",
                    "defaultValue": "new BehaviorSubject<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "activateOptions",
                    "args": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 353,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addFeatures",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addOption",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearStyleFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deactivateOptions",
                    "args": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 362,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteFeature",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 295,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteOption",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 337,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editFeature",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 277,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editFeatureNotes",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 282,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editOption",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterStyles",
                    "args": [
                        {
                            "name": "style",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 260,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "style",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateDataTableSettings",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "iconColor",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "manageStyleRestriction",
                    "args": [
                        {
                            "name": "featureData",
                            "type": "ProductFeatureListTableFeature",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 290,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "featureData",
                            "type": "ProductFeatureListTableFeature",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveItem",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 455,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openFeatureImportManager",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 482,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openOptionImportManager",
                    "args": [
                        {
                            "name": "destinationFeatureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 487,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "destinationFeatureId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "releaseOptionsToFactory",
                    "args": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sq",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 371,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sq",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showFeatureAnalyzer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 492,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showFeatureWarning",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 286,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unreleaseOptionsFromFactory",
                    "args": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 380,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOptionContractRules",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 433,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOptionSqRules",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 389,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOptionUnavailableRules",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 411,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "viewActivationStatus",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 327,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "viewReleaseStatus",
                    "args": [
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "factoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rowData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DataTableComponent",
                    "type": "component"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faBalanceScale, faCheck, faCircle as faCircleSolid, faDotCircle, faEdit, faExclamationCircle, faEye, faFilter, faList, faPlus, faSearch, faStickyNote, faTrash, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { BehaviorSubject, combineLatest, Subject, takeUntil } from 'rxjs';\r\nimport { constants } from '../../../../../shared/constants/constants';\r\nimport { DataTableComponent } from '../../../../../shared/data-table/data-table.component';\r\nimport { DataTableColumnDefinition } from '../../../../../shared/data-table/model/data-table-column-definition.model';\r\nimport { DataTableColumn } from '../../../../../shared/data-table/model/data-table-column.model'; import { DataTableSettings } from '../../../../../shared/data-table/model/data-table-settings.model';\r\nimport { DataTableToolbarControl } from '../../../../../shared/data-table/model/data-table-toolbar-control.model';\r\nimport { NotificationConfig } from '../../../../../shared/dynamic-form/models/notification-config.interface';\r\nimport { DynamicFormService } from '../../../../../shared/dynamic-form/services/dynamic-form.service';\r\nimport { LexicalRankService } from '../../../../../shared/lexical-rank/lexical-rank.service';\r\nimport { Dimension } from '../../../shared/models/dimensions/dimension.model';\r\nimport { ProductFeatureListTableFactory } from './model/product-feature-list-table-factory.model';\r\nimport { ProductFeatureListTableFeature } from './model/product-feature-list-table-feature.model';\r\nimport { ProductFeatureListTableOption } from './model/product-feature-list-table-option.model';\r\nimport { ProductFeatureListTableOptions } from './model/product-feature-list-table-options.model';\r\nimport { ProductFeatureListTableStyle } from './model/product-feature-list-table-style.model';\r\n\r\nexport interface optionLookupMap {\r\n  [key: string]: ProductFeatureListTableOption & { feature: ProductFeatureListTableFeature }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'csps-product-feature-list-table',\r\n  standalone: true,\r\n  imports: [DataTableComponent, FontAwesomeModule],\r\n  templateUrl: './product-feature-list-table.component.html',\r\n  styleUrl: './product-feature-list-table.component.scss'\r\n})\r\nexport class ProductFeatureListTableComponent implements OnInit, OnChanges, OnDestroy {\r\n  // The list of features\r\n  @Input() features!: ProductFeatureListTableFeature[];\r\n\r\n  // The list of factories\r\n  @Input() factories!: ProductFeatureListTableFactory[];\r\n\r\n  // The list of dimensions\r\n  @Input() dimensions!: Dimension[];\r\n\r\n  // The list of styles\r\n  @Input() styles!: ProductFeatureListTableStyle[];\r\n\r\n  // The optional feature list table options\r\n  @Input() tableOptions?: ProductFeatureListTableOptions;\r\n\r\n  // Emits whenever a feature is moved\r\n  @Output() featureMoved: EventEmitter<{ id: string, rank: string }> = new EventEmitter<{ id: string, rank: string }>();\r\n\r\n  // Emits whenever an option is moved\r\n  @Output() optionMoved: EventEmitter<{ featureId: string, id: string, rank: string }> = new EventEmitter<{ featureId: string, id: string, rank: string }>();\r\n\r\n  // Emits whenever a feature is deleted\r\n  @Output() featureDeleted: EventEmitter<{ id: string }> = new EventEmitter<{ id: string }>();\r\n\r\n  // Emits whenever an option is deleted\r\n  @Output() optionDeleted: EventEmitter<{ featureId: string, id: string }> = new EventEmitter<{ featureId: string, id: string }>();\r\n\r\n  // Emits whenever an option is activated\r\n  @Output() optionsActivated: EventEmitter<{ featureId: string, optionId: string }[]> = new EventEmitter<{ featureId: string, optionId: string }[]>();\r\n\r\n  // Emits whenever an option is deactivated\r\n  @Output() optionsDeactivated: EventEmitter<{ featureId: string, optionId: string }[]> = new EventEmitter<{ featureId: string, optionId: string }[]>();\r\n\r\n  // Emits whenever an option is released to a factory\r\n  @Output() optionsReleasedToFactory: EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }> = new EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }>();\r\n\r\n  // Emits whenever an option is unreleased from a factory\r\n  @Output() optionsUnreleasedFromFactory: EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }> = new EventEmitter<{ options: { featureId: string, optionId: string }[], factoryId: string }>();\r\n\r\n  // Emits whenever the feature analyzer is opened\r\n  @Output() featureAnalyzerOpened: EventEmitter<null> = new EventEmitter<null>();\r\n\r\n  // Emits whenever the feature importer is opened\r\n  @Output() featureImporterOpened: EventEmitter<null> = new EventEmitter<null>();\r\n\r\n  // Emits whenever the option importer is opened\r\n  @Output() optionImporterOpened: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // The datatable settings\r\n  settings!: DataTableSettings<ProductFeatureListTableFeature>\r\n\r\n  // The selected style filter\r\n  styleFilter$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\r\n\r\n  // Used for cleaning subscriptions\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private dynamicFormService: DynamicFormService, private lexicalRankService: LexicalRankService) { }\r\n\r\n  ngOnInit(): void {\r\n    const observables = [\r\n      //this.data$.pipe(takeUntil(this.unsubscribe)),\r\n      this.styleFilter$.pipe(takeUntil(this.unsubscribe))\r\n    ];\r\n\r\n    combineLatest(...observables).pipe(takeUntil(this.unsubscribe)).subscribe(([data, styleIdFilter]) => {\r\n      // TODO\r\n      // Filter based on style filter\r\n      //this.generateDataTableSettings(data);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    // Create an option lookup\r\n    const optionLookup: optionLookupMap = this.features.reduce((acc, f) => {\r\n      f.options.forEach(o => {\r\n        acc[o.id] = { ...o, feature: f };\r\n      });\r\n      return acc;\r\n    }, {} as optionLookupMap);\r\n\r\n\r\n    // Enrich list of features\r\n    const data = this.features\r\n      //.filter(f => !f.styleRestrictions || !f.styleRestrictions.length || !styleIdFilter || f.styleRestrictions.includes(styleIdFilter))\r\n      .sort(this.lexicalRankService.lexicalRankSorter())\r\n      .reduce((acc, f) => {\r\n        const featureMetaData = {\r\n          addIcon: f.isNumeric || f.isFreeText || f.isAutoGenerated ? null : faPlus,\r\n          editIcon: f.isAutoGenerated ? null : faEdit,\r\n          deleteIcon: f.isAutoGenerated ? null : faTrash,\r\n          warning:\r\n            !this.factories.every(factory => f.options.some(o => o.releases.some(r => r.factoryId === factory.id))) ||\r\n              (f.isArray && f.arraySize?.featureId === constants.emptyGuid && f.arraySize?.size === 0) ||\r\n              f.options.some(o => o.releases.some(r => r.asSQ && !r.sqRules?.rules?.length && !r.unavailableRules?.rules?.length && !r.contractRules?.rules?.length)) ?\r\n              faExclamationCircle : '',\r\n          fullName: `${f.name} - ${f.description} ${f.isArray ? (' (Array Feature' + (f.arraySize?.featureId !== constants.emptyGuid && f.arraySize?.featureId?.length ? ' - size constrained by ' + this.features.find(g => g.id === f.arraySize?.featureId)?.name : '') + (f.arraySize?.size ? ' - ' + f.arraySize.size + ' elements max' : '')) + ')' : ''}`,\r\n          dimension: this.dimensions.find(d => d.id === f.dimensionId),\r\n          typeIcon: f.isNumeric ? faBalanceScale : (f.isFreeText ? faEdit : faList),\r\n          restrictionIcon: f.styleRestrictions?.length ? faEye : null,\r\n          restrictedStyles: this.styles.filter(s => f.styleRestrictions?.includes(s.id)).map(s => s.name).join(', '),\r\n          noteIcon: faStickyNote\r\n        };\r\n        if (!f.options?.length)\r\n          acc.push({ isPlaceholder: true, feature: { ...f, ...featureMetaData } });\r\n        else {\r\n          const { options, ...cleanedFeature } = f;\r\n          const opts = f.options.sort(this.lexicalRankService.lexicalRankSorter()).map(o => ({ ...o, feature: { ...cleanedFeature, ...featureMetaData } }));\r\n          acc.push(...opts);\r\n        }\r\n        return acc;\r\n      }, new Array());\r\n\r\n    //this.data$.next(data);\r\n    this.generateDataTableSettings(data);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  generateDataTableSettings(data:any[]): void {\r\n    this.settings = {\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      draggableRows: true,\r\n      data: data.map(o =>\r\n      ({\r\n        ...o,\r\n        fullName: o.feature.isNumeric ? `${o.feature.dimension.name} (${o.feature.dimension.metric.symbol} | ${o.feature.dimension.english.symbol})` :\r\n          o.feature.isFreeText ? `Free text` : `${o.name} - ${o.description}`,\r\n        type: o.feature.typeIcon,\r\n        activeIcon: o.isActive ? faCircleSolid : faCircle,\r\n        ...this.factories.reduce((acc, f) => {\r\n          var release = o.releases?.find((r:any) => r.factoryId === f.id);\r\n          acc[f.id] = !release ? faCircle : (release.asSQ ? faDotCircle : faCircleSolid);\r\n          return acc;\r\n        }, {} as { [key: string]: IconDefinition }),\r\n        deleteIcon: o.feature.isNumeric || o.feature.isFreeText || o.isAutoGenerated ? null : faTrash,\r\n        editIcon: o.feature.isNumeric || o.feature.isFreeText || o.isAutoGenerated ? null : faEdit\r\n      })\r\n      ), \r\n      hideRow: (row: any) => row.isPlaceholder,\r\n      columnDefinitions: [\r\n        { id: '1', name: '', label: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', name: '', label: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2.1', name: '', label: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', name: 'type', label: '', type: 'icon', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', name: 'fullName', label: '', type: 'text', cellAlignment: 'left', visible: true, searchable: true, filterMode: 'text' },\r\n        { id: '5', name: 'restrictionIcon', label: '', type: 'icon', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '6', name: 'restrictedStyles', label: 'Style Restriction', type: 'text', columnClass: 'w-15', cellAlignment: 'left', visible: true, searchable: false, filterMode: 'text' },\r\n        { id: '7', name: 'activeIcon', label: 'Active', type: 'icon', columnClass: 'w-5', cellClass: this.iconColor.bind(this, 'active'), visible: true, searchable: false, filterMode: 'none', click: this.viewActivationStatus.bind(this) },\r\n        ...this.factories.map((x, i) => ({ id: '8.' + (i + 1), label: x.abbreviation, type: 'icon', name: x.id, cellClass: this.iconColor.bind(this, x.id), columnClass: 'w-5', visible: true, searchable: false, filterMode: 'none', click: this.viewReleaseStatus.bind(this, x.id) }) as DataTableColumnDefinition),\r\n        { id: '9', name: 'deleteIcon', label: 'Delete', type: 'icon', columnClass: 'w-5', visible: true, searchable: false, filterMode: 'none', click: this.deleteOption.bind(this) },\r\n        { id: '10', name: 'editIcon', label: 'Edit', type: 'icon', columnClass: 'w-5', visible: true, searchable: false, filterMode: 'none', click: this.editOption.bind(this) }\r\n      ],\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Activate options', type: 'button', icon: faCheck, callback: this.activateOptions.bind(this), preserveSelection: true },\r\n          { name: 'Deactivate options', type: 'button', icon: faCheck, callback: this.deactivateOptions.bind(this), preserveSelection: true },\r\n          ...this.factories.map((f) => ({\r\n            name: f.name, type: 'dropdown', icon: faCheck, callback: () => { }, controls: [\r\n              { name: 'Activate', type: 'button', callback: (rows) => this.releaseOptionsToFactory(rows, f.id, false), preserveSelection: true } as DataTableToolbarControl,\r\n              ...this.tableOptions?.canReleaseWithRestrictions ? [{ name: 'Activate with restrictions', type: 'button', callback: (rows) => this.releaseOptionsToFactory(rows, f.id, true), preserveSelection: true } as DataTableToolbarControl] : [],\r\n              { name: 'Deactivate', type: 'button', callback: (rows) => this.unreleaseOptionsFromFactory(rows, f.id), preserveSelection: true } as DataTableToolbarControl,\r\n            ]\r\n          } as DataTableToolbarControl))\r\n        ],\r\n        right: [\r\n          { name: 'Search', type: 'search', callback: () => { } },\r\n          { name: 'Feature Analyzer', type: 'button', icon: faSearch, callback: this.showFeatureAnalyzer.bind(this) },\r\n          {\r\n            name: 'Filter Styles', type: 'dropdown', icon: faFilter, controls: [\r\n              { name: 'Clear Filter', type: 'button', callback: this.clearStyleFilter.bind(this) },\r\n              ... this.styles.map(s => ({ name: s.name, type: 'button', callback: this.filterStyles(s) } as DataTableToolbarControl))]\r\n          } as DataTableToolbarControl,\r\n          { name: 'Add Feature(s)', type: 'button', icon: faPlus, callback: this.addFeatures.bind(this) }\r\n        ]\r\n      },\r\n      groupBy: [\r\n        {\r\n          property: 'feature.category.name',\r\n          orderBy: ['feature.category.name'],\r\n          rowClass: 'blue-50-background',\r\n          columns: [\r\n            { name: 'feature.category.name', type: 'text', class: 'text-uppercase font-weight-bold', colspan: 10 + this.factories.length, searchable: true, alignment: 'left' },\r\n          ]\r\n        },\r\n        {\r\n          property: 'feature.id',\r\n          orderBy: ['feature.rank'],\r\n          columns: [\r\n            { name: 'feature.addIcon', type: 'icon', class: 'gray-text', colspan: 1, click: this.addOption.bind(this) }, //...!this.readOnlyMode ?   : []\r\n            { name: 'feature.warning', type: 'icon', class: 'red-text', colspan: 1, click: this.showFeatureWarning.bind(this) }, //...!this.readOnlyMode ?   : []\r\n            { name: 'feature.noteIcon', type: 'icon', class: this.iconColor.bind(this, 'notes'), searchable: false, colspan: 1, click: this.editFeatureNotes.bind(this) }, // trigger modal w/ text area (+ eventually feature comments)\r\n            { name: 'feature.fullName', type: 'text', class: 'blue-text font-weight-bold', searchable: true, alignment: 'left', colspan: 2 },\r\n            { name: 'feature.restrictionIcon', type: 'icon', class: 'blue-text font-weight-bold', searchable: false, alignment: 'left', colspan: 1 },\r\n            { name: 'feature.restrictedStyles', type: 'text', class: 'blue-text font-weight-bold', searchable: false, alignment: 'left', colspan: 2 + this.factories.length },\r\n            { name: 'feature.deleteIcon', type: 'icon', searchable: false, colspan: 1, click: this.deleteFeature.bind(this) },\r\n            { name: 'feature.editIcon', type: 'icon', searchable: false, colspan: 1, click: this.editFeature.bind(this) }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  private iconColor(column: string, data: any): string {\r\n    if (column === 'active')\r\n      return data.isActive ? 'green-text' : '';\r\n    else if (column === 'notes') {\r\n      const feature = this.features.find(f => f.id === data.feature.id);\r\n      return feature?.notes?.trim().length ? 'blue-text' : 'gray-text';\r\n    }\r\n    else {\r\n      // Locate release for corresponding factory\r\n      const release = data.releases.find((r: any) => r.factoryId === column);\r\n\r\n      return !release ? '' :  // No release\r\n        !release.asSQ ? 'green-text' :   // Fully released\r\n          release.sqRules?.rules?.length || release.unavailableRules?.rules?.length || release.contractRules?.rules?.length ? 'orange-text' : // Released with  restrictions\r\n            'gray-text';  // Error (missing rules) is caught in the warning\r\n    }\r\n  }\r\n\r\n  // Set the style filter\r\n  filterStyles(style: { id: string, name: string }): () => void {\r\n    return () => {\r\n      this.styleFilter$.next(style.id);\r\n    }\r\n  }\r\n\r\n  // Clear the style filter\r\n  clearStyleFilter(): void {\r\n    this.styleFilter$.next(null);\r\n  }\r\n\r\n  // Add features\r\n  addFeatures(): void {\r\n\r\n  }\r\n\r\n  // Edit a feature \r\n  editFeature(rowData: any): void {\r\n\r\n  }\r\n\r\n  // Edit the feature notes\r\n  editFeatureNotes(rowData: any): void {\r\n\r\n  }\r\n\r\n  showFeatureWarning(rowData: any): void {\r\n\r\n  }\r\n\r\n  manageStyleRestriction(featureData: ProductFeatureListTableFeature): void {\r\n\r\n  }\r\n\r\n  // Delete a feature\r\n  deleteFeature(rowData: any): void {\r\n    // Retrieve the full data about the feature\r\n    const featureData = this.features.find(f => f.id === rowData.feature.id);\r\n\r\n    if (featureData) {\r\n      const config: NotificationConfig = {\r\n        headerText: `Delete feature ${featureData.name}`,\r\n        submitText: 'Delete',\r\n        closeText: 'Cancel',\r\n        onSubmit: () => this.featureDeleted.emit({ id: featureData.id }),\r\n        notifications: [\r\n          `Are you sure you want to delete feature ${featureData.name}?`,\r\n          ...featureData.options.length ? [`This will also delete the ${featureData.options.length} option(s) belonging to this feature.`] : [],\r\n          `This operation is irreversible and cannot be undone.`\r\n        ]\r\n      };\r\n\r\n      this.dynamicFormService.popNotification(config);\r\n    }\r\n  }\r\n\r\n  // Add options\r\n  addOption(rowData: any): void {\r\n\r\n  }\r\n\r\n  // Update option properties\r\n  editOption(rowData: any): void {\r\n\r\n  }\r\n\r\n  // View option activation\r\n  viewActivationStatus(rowData: any): void {\r\n\r\n  }\r\n\r\n  // View the option release status\r\n  viewReleaseStatus(factoryId: string, rowData: any): void {\r\n\r\n  }\r\n\r\n  // Delete option\r\n  deleteOption(rowData: any): void {\r\n    const config: NotificationConfig = {\r\n      headerText: `Delete option ${rowData.name}`,\r\n      submitText: 'Delete',\r\n      closeText: 'Cancel',\r\n      onSubmit: () => this.optionDeleted.emit({ featureId: rowData.feature.id, id: rowData.id }),\r\n      notifications: [\r\n        `Are you sure you want to delete option ${rowData.name}?`,\r\n        `This operation is irreversible and cannot be undone.`,\r\n      ]\r\n    };\r\n\r\n    this.dynamicFormService.popNotification(config);\r\n  }\r\n\r\n  // Activate a set of options\r\n  activateOptions(rows: any[]): void {\r\n    // Retrieve all options to be activated\r\n    const optionsToActivate = rows.filter(x => x.level === 3 && !x.data?.isActive);\r\n\r\n    if (optionsToActivate?.length)\r\n      this.optionsActivated.emit(optionsToActivate.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id })));\r\n  }\r\n\r\n  // Deactivate a set of options\r\n  deactivateOptions(rows: any[]): void {\r\n    // Retrieve all options to be activated\r\n    const optionsToDeactivate = rows.filter(x => x.level === 3 && x.data?.isActive);\r\n\r\n    if (optionsToDeactivate?.length)\r\n      this.optionsDeactivated.emit(optionsToDeactivate.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id })));\r\n  }\r\n\r\n  // Release a set of options to a factory\r\n  releaseOptionsToFactory(rows: any[], factoryId: string, sq: boolean): void {\r\n    // Retrieve all options to release\r\n    const optionsToRelease = rows.filter(x => x.level === 3 && !x.data?.releases.some((r: any) => r.factoryId === factoryId));\r\n\r\n    if (optionsToRelease?.length)\r\n      this.optionsReleasedToFactory.emit({ options: optionsToRelease.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id, asSQ: sq })), factoryId: factoryId });\r\n  }\r\n\r\n  // Unrelease a set of options from a factory\r\n  unreleaseOptionsFromFactory(rows: any[], factoryId: string): void {\r\n    // Retrieve all options to release\r\n    const optionsToUnrelease = rows.filter(x => x.level === 3 && x.data?.releases.some((r: any) => r.factoryId === factoryId));\r\n\r\n    if (optionsToUnrelease?.length)\r\n      this.optionsUnreleasedFromFactory.emit({ options: optionsToUnrelease.map(y => ({ featureId: y.data?.feature.id, optionId: y.data?.id })), factoryId: factoryId });\r\n  }\r\n\r\n  // Update option SQ Rules\r\n  updateOptionSqRules(rowData: any, factoryId: string): void {\r\n    // Retrieve the full data about the option\r\n    //const optionRelease = rowData?.releases.find(r => r.factoryId === factoryId);\r\n    //this.dynamicFormService.popModal(ConditionTableBuilderModalComponent, {\r\n    //  title: 'Condition Table Builder',\r\n    //  features: this.selectedVersion.features.filter(x => x.id !== rowData?.feature.id),\r\n    //  rules: this.rules,\r\n    //  values: optionRelease?.sqRules?.rules?.map(r => ({ value: true, conditions: r.map(o => ({ optionId: o })) })) || [],\r\n    //  readOnly: false,\r\n    //  renderer: 'check',\r\n    //  onSubmit: (data: { conditions: { optionId: string }[], value: any }[]) => {\r\n    //    const rules = data.map(x => x.conditions.map(o => o.optionId));\r\n    //    this.featureListService.updateOptionReleaseSqRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, rules).pipe(take(1)).subscribe();\r\n    //  },\r\n    //  onDismiss: (e: string) => {\r\n    //    if (e === 'Clear')\r\n    //      this.featureListService.updateOptionReleaseSqRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, []).pipe(take(1)).subscribe();\r\n    //  }\r\n    //});\r\n  }\r\n\r\n  // Update option unavailable Rules\r\n  updateOptionUnavailableRules(rowData: any, factoryId: string): void {\r\n    // Retrieve the full data about the option\r\n    //const optionRelease = rowData?.releases.find(r => r.factoryId === factoryId);\r\n    //this.dynamicFormService.popModal(ConditionTableBuilderModalComponent, {\r\n    //  title: 'Condition Table Builder',\r\n    //  features: this.selectedVersion.features.filter(x => x.id !== rowData?.feature.id),\r\n    //  rules: this.rules,\r\n    //  values: optionRelease?.unavailableRules?.rules?.map(r => ({ value: true, conditions: r.map(o => ({ optionId: o })) })) || [],\r\n    //  readOnly: false,\r\n    //  renderer: 'check',\r\n    //  onSubmit: (data: { conditions: { optionId: string }[], value: any }[]) => {\r\n    //    const rules = data.map(x => x.conditions.map(o => o.optionId));\r\n    //    this.featureListService.updateOptionReleaseUnavailableRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, rules).pipe(take(1)).subscribe();\r\n    //  },\r\n    //  onDismiss: (e: string) => {\r\n    //    if (e === 'Clear')\r\n    //      this.featureListService.updateOptionReleaseUnavailableRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, []).pipe(take(1)).subscribe();\r\n    //  }\r\n    //});\r\n  }\r\n\r\n  // Update option contract Rules\r\n  updateOptionContractRules(rowData: any, factoryId: string): void {\r\n    // Retrieve the full data about the option\r\n    //const optionRelease = rowData?.releases.find(r => r.factoryId === factoryId);\r\n    //this.dynamicFormService.popModal(ConditionTableBuilderModalComponent, {\r\n    //  title: 'Condition Table Builder',\r\n    //  features: this.selectedVersion.features.filter(x => x.id !== rowData?.feature.id),\r\n    //  rules: this.rules,\r\n    //  values: optionRelease?.contractRules?.rules?.map(r => ({ value: true, conditions: r.map(o => ({ optionId: o })) })) || [],\r\n    //  readOnly: false,\r\n    //  renderer: 'check',\r\n    //  onSubmit: (data: { conditions: { optionId: string }[], value: any }[]) => {\r\n    //    const rules = data.map(x => x.conditions.map(o => o.optionId));\r\n    //    this.featureListService.updateOptionReleaseContractRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, rules).pipe(take(1)).subscribe();\r\n    //  },\r\n    //  onDismiss: (e: string) => {\r\n    //    if (e === 'Clear')\r\n    //      this.featureListService.updateOptionReleaseContractRules(this.selectedVersion?.id, rowData?.feature.id, rowData.id, factoryId, []).pipe(take(1)).subscribe();\r\n    //  }\r\n    //});\r\n  }\r\n\r\n  // Move category, feature or option\r\n  moveItem(event: any): void {\r\n    const props = ['category', 'feature', 'option'];\r\n    const level = event.data.level;\r\n    const id = level === 3 ? event.data.id : event.data[props[level - 1]].id;\r\n\r\n    // Get min and max ranks (if after / before undefined => moved to bottom / top)\r\n    const rankBefore = event.movedAfterSibling ? (level === 3 ? event.movedAfterSibling.rank : event.movedAfterSibling[props[level - 1]].rank) : this.lexicalRankService.getMinRank();\r\n    const rankAfter = event.movedBeforeSibling ? (level === 3 ? event.movedBeforeSibling.rank : event.movedBeforeSibling[props[level - 1]].rank) : this.lexicalRankService.getMaxRank();\r\n\r\n    // Get new rank from lexical rank service\r\n    const newRank = this.lexicalRankService.getRankBetween(rankBefore, rankAfter);\r\n\r\n    // Test if move within same parent\r\n    const parentId = event.data.parent?.[props[level - 2]]?.id;\r\n    const newParentId = event.newParentData?.[props[level - 2]]?.id;\r\n\r\n    if (level === 1) {\r\n      //this.categoryMoved(event.data.section.id, newRank);\r\n    }\r\n    else if (level === 2) {\r\n      this.featureMoved.emit({ id, rank: newRank });\r\n    } else {\r\n      this.optionMoved.emit({ featureId: parentId, id, rank: newRank });\r\n    }\r\n  }\r\n\r\n  // Open the feature import manager\r\n  openFeatureImportManager(): void {\r\n    this.featureImporterOpened.emit();\r\n  }\r\n\r\n  // Open the option import manager\r\n  openOptionImportManager(destinationFeatureId: string): void {\r\n    this.optionImporterOpened.emit(destinationFeatureId);\r\n  }\r\n\r\n  // Open the feature analyzer\r\n  showFeatureAnalyzer(): void {\r\n    this.featureAnalyzerOpened.emit();\r\n  }\r\n}\r\n",
            "styleUrl": "./product-feature-list-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lexicalRankService",
                        "type": "LexicalRankService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 89,
                "jsdoctags": [
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lexicalRankService",
                        "type": "LexicalRankService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<csps-data-table [settings]=\"settings\"></csps-data-table>\r\n"
        },
        {
            "name": "ProductRuleListComponent",
            "id": "component-ProductRuleListComponent-3212be7579e4755f31d35e83942fb1fac6e40bd7aa046626c613fe0908d5e4bb3f3ba1afc2c50c0445c292199683d62bc65397953f17ac2f425547c4284ab4d9",
            "file": "projects/main/src/app/features/products/rules/product-rule-list/product-rule-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-product-rule-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-rule-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "NgbTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-product-rule-list',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent, NgbTooltipModule],\r\n  templateUrl: './product-rule-list.component.html',\r\n  styleUrl: './product-rule-list.component.scss'\r\n})\r\nexport class ProductRuleListComponent {\r\n\r\n}\r\n",
            "styleUrl": "./product-rule-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <ng-container header>\r\n    Product Rule List\r\n  </ng-container>\r\n\r\n  <ng-container toolbar>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Open Workflow\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 1\r\n    </button>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Manage Versions\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 2\r\n    </button>\r\n    <button type=\"button\" placement=\"bottom\" ngbtooltip=\"Help\" class=\"btn btn-sm btn-primary\">\r\n      Test btn 3\r\n    </button>\r\n  </ng-container>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "ProductsComponent",
            "id": "component-ProductsComponent-6125eaf0c2442a10c663ee243d6c6c4d3c63bf4bcea14af085cd5a6019bbb0688ea0535a487e9bc9e59b5a1f0dca12215040f1646bed817f39a8deb18fb80dff",
            "file": "projects/main/src/app/features/admin/products/products.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-products",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./products.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-products',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './products.component.html',\r\n  styleUrl: './products.component.scss'\r\n})\r\nexport class ProductsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./products.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Products</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "ProductsComponent",
            "id": "component-ProductsComponent-64a6887594e481008de17bd33c47bcc67597c94562e71cb3c8a92033e805aedf3f005c2af92da466976391542db2686b30b3b201a541bcd7d9b6166baffca753-1",
            "file": "projects/main/src/app/features/products/products/products.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-products",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./products.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faFileArchive",
                    "defaultValue": "faFileArchive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "faSearch",
                    "defaultValue": "faSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "faStar",
                    "defaultValue": "faStar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "faStarEmpty",
                    "defaultValue": "faStarEmpty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "favouriteProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "filterSubject$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "productTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "filterProducts",
                    "args": [
                        {
                            "name": "filterText",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filterText",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "markFavourite",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unmarkFavourite",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "SecurePipe",
                    "type": "pipe"
                },
                {
                    "name": "DefaultImageDirective",
                    "type": "directive"
                },
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faStar as faStarEmpty } from '@fortawesome/free-regular-svg-icons';\r\nimport { faFileArchive, faSearch, faStar, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\nimport { DefaultImageDirective } from '../../../shared/default-image/default-image.directive';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\nimport { PageWrapperComponent } from '../../../shared/page-wrapper/page-wrapper.component';\r\nimport { SecurePipe } from '../../../shared/secure-pipe/secure.pipe';\r\nimport { Product } from '../shared/models/product/product.model';\r\nimport { ProductService } from '../shared/product.service';\r\n\r\n@Component({\r\n  selector: 'csps-products',\r\n  standalone: true,\r\n  imports: [CommonModule, TranslateModule, FontAwesomeModule, RouterModule, SecurePipe, DefaultImageDirective, PageWrapperComponent, PageTemplateComponent],\r\n  templateUrl: './products.component.html',\r\n  styleUrl: './products.component.scss'\r\n})\r\nexport class ProductsComponent implements OnInit, OnDestroy {\r\n  // Icons\r\n  faSearch: IconDefinition = faSearch;\r\n  faStar: IconDefinition = faStar;\r\n  faStarEmpty: IconDefinition = faStarEmpty;\r\n  faFileArchive: IconDefinition = faFileArchive;\r\n\r\n  // The list of products\r\n  products!: Product[];\r\n\r\n  // The list of products grouped by product type\r\n  productTypes!: { type: string, products: Product[] }[];\r\n\r\n  // The list of favourite products\r\n  favouriteProducts!: Product[];\r\n\r\n  // Holds filter text\r\n  filterSubject$: Subject<string> = new Subject<string>();\r\n\r\n  // Used for cleaning subscription \r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productService.products$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(x => {\r\n        this.products = x;\r\n        this.favouriteProducts = x.filter(y => y.favourite)\r\n        this.filterProducts('');\r\n      });\r\n\r\n    this.filterSubject$\r\n      .pipe(\r\n        debounceTime(700),\r\n        distinctUntilChanged(),\r\n        takeUntil(this.unsubscribe)\r\n      )\r\n      .subscribe(x => this.filterProducts(x));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  filterProducts(filterText: string) {\r\n    // Prepare filterText\r\n    filterText = (filterText || '').toLowerCase();\r\n\r\n    // Build filter predicate\r\n    const predicate = (x: Product) =>\r\n      (x.name || '').toLowerCase().includes(filterText);\r\n\r\n    // Filter list of products\r\n    const filteredProducts = this.products.filter(predicate);\r\n\r\n    // Group by product type\r\n    this.productTypes = [...filteredProducts.reduce((acc, x) => {\r\n      // Retrieve the product type if it exists, otherwise create it\r\n      const item = acc.get(x.type.name) || { type: x.type.name, products: [] };\r\n\r\n      // Add current product as child\r\n      item.products.push(x);\r\n\r\n      // Return\r\n      return acc.set(x.type.name, item);\r\n    }, new Map).values()];\r\n  }\r\n\r\n\r\n  markFavourite(product: Product) {\r\n    this.productService.markFavourite(product);\r\n  }\r\n\r\n  unmarkFavourite(product: Product) {\r\n    this.productService.unmarkFavourite(product);\r\n  }\r\n}\r\n",
            "styleUrl": "./products.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ProductsComponent-1",
            "templateData": "<csps-page-wrapper>\r\n  <ng-container body>\r\n    <csps-page-template>\r\n\r\n      <ng-container header>\r\n        Product Portfolio\r\n      </ng-container>\r\n\r\n      <ng-container toolbar>\r\n        <div class=\"input-group input-group-sm\">\r\n          <input type=\"search\" [placeholder]=\"('PRODUCTS.FILTER' | translate)\" class=\"form-control form-control-sm\" (input)=\"filterSubject$.next($any($event.target).value)\" />\r\n          <div class=\"input-group-append\">\r\n            <span class=\"input-group-text\"><fa-icon [icon]=\"faSearch\"></fa-icon></span>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <ng-container body>\r\n        <div class=\"col-12 mb-3 mt-2\" *ngIf=\"favouriteProducts.length>0\">\r\n          <h3>{{'PRODUCTS.FAVOURITE' | translate}}</h3>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-1 col-md-4 col-sm-6\" *ngFor=\"let product of favouriteProducts\">\r\n              <div class=\"card h-100\">\r\n                <img class=\"card-img-top pointer pt-2 px-2\" [src]=\"product.defaultPictureUrl | secure | async\" [routerLink]=\"[product.id]\">\r\n                <div class=\"card-body pb-0\">\r\n                  <div class=\"card-title d-flex justify-content-between\">\r\n                    <h5 class=\"pointer\" [routerLink]=\"[product.id]\">{{product.name}}</h5>\r\n                    <fa-icon class=\"yellow-text pointer\" [icon]=\"faStar\" (click)=\"unmarkFavourite(product)\"></fa-icon>\r\n                  </div>\r\n                  <!--<p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>-->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 mb-3 mt-2\" *ngFor=\"let productType of productTypes\">\r\n          <h3>{{productType.type}}</h3>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-1 col-md-4 col-sm-6\" *ngFor=\"let product of productType.products\">\r\n              <div class=\"card h-100\">\r\n                <img class=\"card-img-top pointer pt-2 px-2\" [src]=\"product.defaultPictureUrl | secure | async\" [routerLink]=\"[product.id]\">\r\n                <div class=\"card-body pb-0\">\r\n                  <div class=\"card-title d-flex justify-content-between\">\r\n                    <h5 class=\"pointer\" [routerLink]=\"[product.id]\">{{product.name}}</h5>\r\n                    <fa-icon *ngIf=\"!product.favourite\" class=\"pointer\" [icon]=\"faStarEmpty\" (click)=\"markFavourite(product)\"></fa-icon>\r\n                    <fa-icon *ngIf=\"product.favourite\" class=\"yellow-text pointer\" [icon]=\"faStar\" (click)=\"unmarkFavourite(product)\"></fa-icon>\r\n                  </div>\r\n                  <!--<p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>-->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <ng-container footer>\r\n        <button type=\"button\" class=\"btn btn-sm btn-link gray-600-text\" [routerLink]=\"['data-bundler']\">\r\n          <fa-icon class=\"pointer\" [icon]=\"faFileArchive\" [fixedWidth]=\"true\"></fa-icon> Selection Navigator Data Bundles\r\n        </button>\r\n      </ng-container>\r\n\r\n    </csps-page-template>\r\n  </ng-container>\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "ProjectBudgetComponent",
            "id": "component-ProjectBudgetComponent-b207d183f31a0258ed188d23d0622c83f7f564fc550f64ed009eb3da70537881e37e0761db31b87a81129879d018395dfdceff3781355dd381886452dd668265",
            "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-project-budget",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project-budget.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "d",
                    "defaultValue": "[\r\n    { department: 'depart1', region: 'Europe', professionalServices: 24500, developmentMaterial: 41526, testHours: 250, engineeringHours: 30, designHours: 95 },\r\n    { department: 'depart1', region: 'Asia', professionalServices: 5265, developmentMaterial: 321, testHours: 0, engineeringHours: 12, designHours: 5 },\r\n    { department: 'depart2', region: 'North America', professionalServices: 454, developmentMaterial: 321, testHours: 0, engineeringHours: 30, designHours: 7 },\r\n    { department: 'depart2', region: 'Europe', professionalServices: 7853, developmentMaterial: 12, testHours: 25, engineeringHours: 8, designHours: 7 },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Budget[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<Budget>",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateGroupBy",
                    "args": [
                        {
                            "name": "groupBy",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "groupBy",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTable",
                    "args": [
                        {
                            "name": "groupBy",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "groupBy",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DataTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { faDollar, faFilter } from '@fortawesome/free-solid-svg-icons';\r\nimport { DataTableComponent } from '../../../../shared/data-table/data-table.component';\r\nimport { DataTableColumnDefinition } from '../../../../shared/data-table/model/data-table-column-definition.model';\r\nimport { DataTableSettings } from '../../../../shared/data-table/model/data-table-settings.model';\r\n \r\n\r\n\r\nexport interface Budget {\r\n  department: string;\r\n  region: string;\r\n  professionalServices: number;\r\n  developmentMaterial: number;\r\n  testHours: number;\r\n  engineeringHours: number;\r\n  designHours: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'csps-project-budget',\r\n  standalone: true,\r\n  imports: [DataTableComponent],\r\n  templateUrl: './project-budget.component.html',\r\n  styleUrl: './project-budget.component.scss'\r\n})\r\nexport class ProjectBudgetComponent implements OnInit {\r\n\r\n  d: Budget[] = [\r\n    { department: 'depart1', region: 'Europe', professionalServices: 24500, developmentMaterial: 41526, testHours: 250, engineeringHours: 30, designHours: 95 },\r\n    { department: 'depart1', region: 'Asia', professionalServices: 5265, developmentMaterial: 321, testHours: 0, engineeringHours: 12, designHours: 5 },\r\n    { department: 'depart2', region: 'North America', professionalServices: 454, developmentMaterial: 321, testHours: 0, engineeringHours: 30, designHours: 7 },\r\n    { department: 'depart2', region: 'Europe', professionalServices: 7853, developmentMaterial: 12, testHours: 25, engineeringHours: 8, designHours: 7 },\r\n  ]\r\n\r\n\r\n  settings!: DataTableSettings<Budget>;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.updateTable('department');\r\n  }\r\n\r\n  updateGroupBy(groupBy: string): () => void {\r\n    return () => {\r\n      this.updateTable(groupBy);\r\n    }\r\n  }\r\n\r\n  updateTable(groupBy: string): void {\r\n    this.settings = {\r\n      columnDefinitions: [\r\n        ...groupBy === 'department' ? [] : [{ id: '1', name: 'department', label: 'Department', type: 'text', visible: true, searchable: false, filterMode: 'none' } as DataTableColumnDefinition] ,\r\n        ...groupBy === 'region' ? [] : [{ id: '2', name: 'region', label: 'Region', type: 'text', visible: true, searchable: false, filterMode: 'none' } as DataTableColumnDefinition],\r\n        { id: '3', name: 'professionalServices', label: 'Prof. Srv.', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', name: 'developmentMaterial', label: 'Dev. Mat.', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '5', name: 'testHours', label: 'Test Hours', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '6', name: 'engineeringHours', label: 'Eng. Hours', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '7', name: 'designHours', label: 'Des. Hours', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      data: this.d,\r\n      toolBar: {\r\n        right: [\r\n          { name: 'My Budget', icon: faDollar, type: 'button', callback: () => alert('Show my budget') },\r\n          {\r\n            name: 'Group By', icon: faFilter, type: 'dropdown', callback: () => { }, controls: [\r\n              { name: 'Department', type: 'button', callback: this.updateGroupBy('department').bind(this) },\r\n              { name: 'Region', type: 'button', callback: this.updateGroupBy('region').bind(this) }\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      groupBy: [\r\n        {\r\n          property: groupBy, orderBy: [groupBy], columns: [\r\n            { name: groupBy, type: 'text', alignment: 'left', class: 'fw-bold', searchable: false, colspan: 7 },\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./project-budget.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<csps-data-table [settings]=\"settings\"></csps-data-table>\r\n"
        },
        {
            "name": "ProjectComponent",
            "id": "component-ProjectComponent-71a70c28a1fa4535ead477c9483aa018ffd214a6f80ae9e1e2fea0e91f9ba61e1873a44cf2ecfe457bed4015839cde6fe720f5386c02b25fd13f8614d543fda7",
            "file": "projects/main/src/app/features/work/projects/project/project.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-project",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "project",
                    "defaultValue": "DEMOPROJECT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "subMenu",
                    "defaultValue": "[\r\n    { name: 'Preview', route: ['./preview'] },\r\n    { name: 'Budget', route: ['./budget'] },\r\n    { name: 'Forecast', route: ['./forecast'] },\r\n    { name: 'Schedule', route: ['./schedule'] },\r\n    { name: 'Design', route: ['./design'] },\r\n    { name: 'Etc...', route: ['./etc'] }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SubMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "childNodeActionClicked",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "parentNodeActionClicked",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pop",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "CdkDropListGroup"
                },
                {
                    "name": "CdkDropList"
                },
                {
                    "name": "CdkDrag"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkDrag, CdkDropList, CdkDropListGroup } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SubMenuItem } from '../../../../shared/page-template/model/sub-menu-item.model';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\nimport { PageWrapperComponent } from '../../../../shared/page-wrapper/page-wrapper.component';\r\nimport { WorldMapContinent } from '../../../../shared/world-map/model/world-map-continent.model';\r\nimport { WorldMapCoordinate } from '../../../../shared/world-map/model/world-map-coordinate.model';\r\n\r\n\r\nexport interface Project {\r\n  name: string;\r\n  impactedContinents: WorldMapContinent[],\r\n  impactedFactories: WorldMapCoordinate[]\r\n}\r\n\r\nconst DEMOPROJECT: Project = {\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'csps-project',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, PageWrapperComponent, PageTemplateComponent, CdkDropListGroup, CdkDropList, CdkDrag, TranslateModule],\r\n  templateUrl: './project.component.html',\r\n  styleUrl: './project.component.scss'\r\n})\r\nexport class ProjectComponent {\r\n  constructor() { }\r\n\r\n  project: Project = DEMOPROJECT;\r\n\r\n  subMenu: SubMenuItem[] = [\r\n    { name: 'Preview', route: ['./preview'] },\r\n    { name: 'Budget', route: ['./budget'] },\r\n    { name: 'Forecast', route: ['./forecast'] },\r\n    { name: 'Schedule', route: ['./schedule'] },\r\n    { name: 'Design', route: ['./design'] },\r\n    { name: 'Etc...', route: ['./etc'] }\r\n  ];\r\n\r\n  pop(item: any) {\r\n    alert('pop' + item.id);\r\n  }\r\n\r\n  childNodeActionClicked(data: any) {\r\n    console.log(data);\r\n  }\r\n  parentNodeActionClicked(data: any) {\r\n    console.log(data);\r\n  }\r\n}\r\n",
            "styleUrl": "./project.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 37
            },
            "extends": [],
            "templateData": "<csps-page-wrapper>\r\n  <ng-container body>\r\n    <csps-page-template [subMenu]=\"subMenu\">\r\n\r\n      <span header>{{project.name}}</span>\r\n\r\n      <ng-container body>\r\n        <router-outlet></router-outlet>\r\n      </ng-container>\r\n\r\n    </csps-page-template>\r\n  </ng-container>\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "ProjectListComponent",
            "id": "component-ProjectListComponent-a012d5eaee0d766bd58070906b17e93f171f5a5e24bef67d4057334febeddf3b7b6f344c993c5567d83ca836a853cc32e5a15172d2926c48900e7ed859982cd6",
            "file": "projects/main/src/app/features/work/projects/project-list/project-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-project-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "PROJECTS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    { id: '1', label: 'test' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "settings",
                    "defaultValue": "{\r\n    data: PROJECTS.map(p => ({ ...p, icon: faExternalLink })),\r\n    columnDefinitions: [\r\n      { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'numeric' },\r\n      { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n      { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'select' },\r\n      { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n      { id: '5', label: 'Link', name: 'icon', type: 'icon', visible: true, searchable: false, filterMode: 'none', click: this.navigate.bind(this) },\r\n    ],\r\n    groupBy: []\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<Project>",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "navigate",
                    "args": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DataTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faExternalLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { DataTableComponent } from '../../../../shared/data-table/data-table.component';\r\nimport { DataTableSettings } from '../../../../shared/data-table/model/data-table-settings.model';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\nimport { PageWrapperComponent } from '../../../../shared/page-wrapper/page-wrapper.component';\r\nimport { MenuItem } from '../../../../shared/side-bar/model/menu-item.model';\r\nimport { Project } from '../../shared/project.model';\r\n \r\nconst PROJECTS: Project[] = [\r\n  {\r\n    id: '1',\r\n    name: 'YKJ',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'YE',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'YMC2 M7',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'TBA',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n];\r\n\r\n\r\n@Component({\r\n  selector: 'csps-project-list',\r\n  standalone: true,\r\n  imports: [PageWrapperComponent, PageTemplateComponent, CommonModule, DataTableComponent],\r\n  templateUrl: './project-list.component.html',\r\n  styleUrl: './project-list.component.scss'\r\n})\r\nexport class ProjectListComponent {\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n  dataSource = PROJECTS;\r\n\r\n  settings: DataTableSettings<Project> = {\r\n    data: PROJECTS.map(p => ({ ...p, icon: faExternalLink })),\r\n    columnDefinitions: [\r\n      { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'numeric' },\r\n      { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n      { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'select' },\r\n      { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n      { id: '5', label: 'Link', name: 'icon', type: 'icon', visible: true, searchable: false, filterMode: 'none', click: this.navigate.bind(this) },\r\n    ],\r\n    groupBy: []\r\n  }\r\n\r\n\r\n  navigate(project: Project): void {\r\n    this.router.navigate(['..', 'projects', project.id], { relativeTo: this.route });\r\n  }\r\n\r\n  menuItems: MenuItem[] = [\r\n    { id: '1', label: 'test' }\r\n  ];\r\n}\r\n",
            "styleUrl": "./project-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<csps-page-wrapper>\r\n  <ng-container body>\r\n    <csps-page-template>\r\n\r\n      <span header>Project List</span>\r\n\r\n      <div body>\r\n        <csps-data-table [settings]=\"settings\"></csps-data-table>\r\n      </div>\r\n\r\n    </csps-page-template>\r\n  </ng-container>\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "ProjectPreviewComponent",
            "id": "component-ProjectPreviewComponent-c36cfeb0a9c3edc193abe926e06e9aadd33625dfe8f3f66f7e71321f2170f04d12500ecbdeadb07389526aca25ff4775a4980adc5b95970262b11bb8896fc7e0",
            "file": "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-project-preview",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "impactedFactories",
                    "defaultValue": "DEMOPROJECT.impactedFactories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WorldMapCoordinate[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "impactedRegions",
                    "defaultValue": "DEMOPROJECT.impactedContinents.reduce((acc, c) => {\r\n    acc.set(c, { color: this.themeService.colors.primary })\r\n    return acc;\r\n  }, new Map<WorldMapContinent, { color: string }>())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<WorldMapContinent | literal type>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "project",
                    "defaultValue": "DEMOPROJECT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "WorldMapComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ThemeService } from '../../../../shared/theme/theme.service';\r\nimport { WorldMapContinent } from '../../../../shared/world-map/model/world-map-continent.model';\r\nimport { WorldMapCoordinate } from '../../../../shared/world-map/model/world-map-coordinate.model';\r\nimport { WorldMapComponent } from '../../../../shared/world-map/world-map.component';\r\n \r\nexport interface Project {\r\n  name: string;\r\n  impactedContinents: WorldMapContinent[],\r\n  impactedFactories: WorldMapCoordinate[]\r\n}\r\n\r\nconst DEMOPROJECT: Project = {\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'csps-project-preview',\r\n  standalone: true,\r\n  imports: [WorldMapComponent],\r\n  templateUrl: './project-preview.component.html',\r\n  styleUrl: './project-preview.component.scss'\r\n})\r\nexport class ProjectPreviewComponent {\r\n  constructor(private themeService: ThemeService) { }\r\n\r\n  project: Project = DEMOPROJECT;\r\n\r\n  impactedFactories: WorldMapCoordinate[] = DEMOPROJECT.impactedFactories;\r\n\r\n  impactedRegions: Map<WorldMapContinent, { color: string }> = DEMOPROJECT.impactedContinents.reduce((acc, c) => {\r\n    acc.set(c, { color: this.themeService.colors.primary })\r\n    return acc;\r\n  }, new Map<WorldMapContinent, { color: string }>())\r\n\r\n}\r\n",
            "styleUrl": "./project-preview.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"row py-3 flex-fill gray-200-background\">\r\n  <div class=\"col-12 col-xl-6 d-flex\">\r\n    <div class=\"row g-3 flex-fill\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body d-flex flex-fill flex-column\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"mb-1\">Project Scope</h5>\r\n              </div>\r\n              <h4>TBA</h4>\r\n            </div>\r\n            <div class=\"d-flex flex-fill\">\r\n              Describe project scope and projet phases\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"mb-2\">Project Timeline and Milestones</h5>\r\n                <h6 class=\"text-body-tertiary\">TBA</h6>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex pt-3 flex-fill flex-column\">\r\n              <p>Insert timeline (Gantt Chart with overall timeline and milestones)</p>\r\n              <p>Include Gate Reviews, Proto Builds, Product Launch and SelNav Releases</p>\r\n\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Milestone</th>\r\n                    <th>Due</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Proto 1 (SAT)</td>\r\n                    <td>2024-05-31 (in ## days)</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Proto 2 (WXF)</td>\r\n                    <td>2024-05-31 (in ## days)</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Prod Launch</td>\r\n                    <td>2024-05-31 (in ## days)</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>SelNav</td>\r\n                    <td>2024-05-31 (in ## days)</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 col-xl-6 d-flex\">\r\n    <div class=\"row g-3 flex-fill\">\r\n      <div class=\"col-12 col-md-6\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body d-flex flex-fill flex-column\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"mb-1\">Impacted Factories & Regions</h5>\r\n              </div>\r\n              <h4>TBA</h4>\r\n            </div>\r\n            <div class=\"d-flex flex-fill\">\r\n              <csps-world-map [locationMarkerSize]=\"25\" [selectedContinents]=\"impactedRegions\" [coordinates]=\"impactedFactories\"></csps-world-map>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-6\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body d-flex flex-fill flex-column\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"mb-1\">Roster</h5>\r\n              </div>\r\n              <h4>TBA</h4>\r\n            </div>\r\n            <div class=\"d-flex flex-fill\">\r\n              TBA\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"mb-2\">Financial Summary</h5>\r\n                <h6 class=\"text-body-tertiary\">TBA</h6>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-center pt-3 flex-1\">\r\n              <!--<div class=\"echarts-paying-customer-chart\" style=\"height: 100%; width: 100%; user-select: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); position: relative;\" _echarts_instance_=\"ec_1706695015555\"><div style=\"position: relative; width: 328px; height: 144px; padding: 0px; margin: 0px; border-width: 0px;\"><canvas data-zr-dom-id=\"zr_0\" width=\"328\" height=\"144\" style=\"position: absolute; left: 0px; top: 0px; width: 328px; height: 144px; user-select: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); padding: 0px; margin: 0px; border-width: 0px;\"></canvas></div><div class=\"\"></div></div>-->\r\n            </div>\r\n            <div class=\"mt-3\">\r\n              <!--<div class=\"d-flex align-items-center mb-2\">\r\n                <div class=\"bullet-item bg-primary me-2\"></div>\r\n                <h6 class=\"text-body fw-semibold flex-1 mb-0\">Paying customer</h6>\r\n                <h6 class=\"text-body fw-semibold mb-0\">30%</h6>\r\n              </div>\r\n              <div class=\"d-flex align-items-center\">\r\n                <div class=\"bullet-item bg-primary-subtle me-2\"></div>\r\n                <h6 class=\"text-body fw-semibold flex-1 mb-0\">Non-paying customer</h6>\r\n                <h6 class=\"text-body fw-semibold mb-0\">70%</h6>\r\n              </div>-->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProjetDesignComponent",
            "id": "component-ProjetDesignComponent-c274352bfa3ec4e67f7646a05f6abe029c6e69898b81cba806976495f0c28b533f5a6a65cdfab8f242339b77597d0346953c33543d96702e2da3184ea6f84b14",
            "file": "projects/main/src/app/features/work/projects/projet-design/projet-design.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-projet-design",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./projet-design.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "{\r\n    hideLegend: false,\r\n    timeUnit: 'day'\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BurnDownChartOptions",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "tasks",
                    "defaultValue": "[\r\n    { id: '1', name: 'Task 1', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-09').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n    { id: '2', name: 'Task 2', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-05').toDateString()), actualCompletionDate: new Date(new Date('2024-02-07').toDateString()) },\r\n    { id: '3', name: 'Task 3', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-06').toDateString()), actualCompletionDate: new Date(new Date('2024-02-05').toDateString()) },\r\n    { id: '4', name: 'Task 4', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-08').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n    { id: '5', name: 'Task 5', effort: 21, plannedCompletionDate: new Date(new Date('2024-02-07').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n    { id: '6', name: 'Task 6', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-12').toDateString()), actualCompletionDate: new Date(new Date('2024-02-14').toDateString()) },\r\n    { id: '7', name: 'Task 7', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-16').toDateString()), actualCompletionDate: null },\r\n    { id: '8', name: 'Task 8', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-15').toDateString()), actualCompletionDate: null },\r\n    { id: '9', name: 'Task 9', effort: 2, plannedCompletionDate: new Date(new Date('2024-02-13').toDateString()), actualCompletionDate: new Date(new Date('2024-02-11').toDateString()) },\r\n    { id: '10', name: 'Task 10', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-14').toDateString()), actualCompletionDate: null }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BurnDownChartTask[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BurnDownChartComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { BurnDownChartComponent } from '../../../../shared/burn-down-chart/burn-down-chart.component';\r\nimport { BurnDownChartOptions } from '../../../../shared/burn-down-chart/model/burn-down-chart-options.model';\r\nimport { BurnDownChartTask } from '../../../../shared/burn-down-chart/model/burn-down-chart-task.model';\r\n \r\n@Component({\r\n  selector: 'csps-projet-design',\r\n  standalone: true,\r\n  imports: [BurnDownChartComponent],\r\n  templateUrl: './projet-design.component.html',\r\n  styleUrl: './projet-design.component.scss'\r\n})\r\nexport class ProjetDesignComponent {\r\n  tasks: BurnDownChartTask[] = [\r\n    { id: '1', name: 'Task 1', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-09').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n    { id: '2', name: 'Task 2', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-05').toDateString()), actualCompletionDate: new Date(new Date('2024-02-07').toDateString()) },\r\n    { id: '3', name: 'Task 3', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-06').toDateString()), actualCompletionDate: new Date(new Date('2024-02-05').toDateString()) },\r\n    { id: '4', name: 'Task 4', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-08').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n    { id: '5', name: 'Task 5', effort: 21, plannedCompletionDate: new Date(new Date('2024-02-07').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n    { id: '6', name: 'Task 6', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-12').toDateString()), actualCompletionDate: new Date(new Date('2024-02-14').toDateString()) },\r\n    { id: '7', name: 'Task 7', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-16').toDateString()), actualCompletionDate: null },\r\n    { id: '8', name: 'Task 8', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-15').toDateString()), actualCompletionDate: null },\r\n    { id: '9', name: 'Task 9', effort: 2, plannedCompletionDate: new Date(new Date('2024-02-13').toDateString()), actualCompletionDate: new Date(new Date('2024-02-11').toDateString()) },\r\n    { id: '10', name: 'Task 10', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-14').toDateString()), actualCompletionDate: null }\r\n  ];\r\n\r\n  options: BurnDownChartOptions = {\r\n    hideLegend: false,\r\n    timeUnit: 'day'\r\n  }\r\n}\r\n",
            "styleUrl": "./projet-design.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "List all ECR, ECN relating to the project\r\n\r\n\r\n<csps-burn-down-chart [tasks]=\"tasks\" [options]=\"options\"></csps-burn-down-chart>\r\n"
        },
        {
            "name": "RetrospectiveComponent",
            "id": "component-RetrospectiveComponent-54b62055edff02834a2d781f79aedbc688b11f4d4cf8a0d87552a256bd5923615b8b94d4e10108067a4f1d23c11614dc6618d44792a669d49c6cdd5c9c50378e",
            "file": "projects/main/src/app/features/work/planning/retrospective/retrospective.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-retrospective",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./retrospective.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-retrospective',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './retrospective.component.html',\r\n  styleUrl: './retrospective.component.scss'\r\n})\r\nexport class RetrospectiveComponent {\r\n\r\n}\r\n",
            "styleUrl": "./retrospective.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Retrospective</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "RolesComponent",
            "id": "component-RolesComponent-89ce243edb33737b80e6766ad3fa02f0403ed7b12e67d8cb684e9f3e0d469e9c4d5050f0756b605393db45aa980e3aa3afae9123e195a7073641cd5e983fb46e",
            "file": "projects/main/src/app/features/admin/roles/roles.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-roles",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./roles.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-roles',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './roles.component.html',\r\n  styleUrl: './roles.component.scss'\r\n})\r\nexport class RolesComponent {\r\n\r\n}\r\n",
            "styleUrl": "./roles.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Roles</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "RolesComponent",
            "id": "component-RolesComponent-974f03ad61af389b0a5d7cad0af35bf2db6d818a1fa68bda4a2348b83d1df4530ed54c352072fc1439387622031bd857f02a31921a9c81ac317636c7d9094cbf-1",
            "file": "projects/main/src/app/features/products/settings/roles/roles.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-roles",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./roles.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'csps-roles',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './roles.component.html',\r\n  styleUrl: './roles.component.scss'\r\n})\r\nexport class RolesComponent {\r\n\r\n}\r\n",
            "styleUrl": "./roles.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RolesComponent-1",
            "templateData": "<p>roles works!</p>\r\n"
        },
        {
            "name": "ScenariosComponent",
            "id": "component-ScenariosComponent-c64f6c35b0531ff3899d424b5c0df3d4774731154b76ff8d9f58962b36cc5dd4832dd8ab6bb1cb7c0fce0af196bbb791081bbcd14fbf26290be0f5cfedfb773f",
            "file": "projects/main/src/app/features/work/planning/scenarios/scenarios.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-scenarios",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./scenarios.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-scenarios',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './scenarios.component.html',\r\n  styleUrl: './scenarios.component.scss'\r\n})\r\nexport class ScenariosComponent {\r\n\r\n}\r\n",
            "styleUrl": "./scenarios.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Scenarios</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "SettingsComponent",
            "id": "component-SettingsComponent-3f9246c4fb16e7e5f830c38e2237a772c29a3bd7d5483bc3c8487c70447137813a2317520f31d5db682012e7b4720bf7170fc1f796972634392f0fafb3c3b50c",
            "file": "projects/main/src/app/features/products/settings/settings/settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-settings",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./settings.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subMenu",
                    "defaultValue": "[\r\n    { name: 'Overview', route: ['./overview'] },\r\n    { name: 'Documents', route: ['./documents'] },\r\n    { name: 'Roles', route: ['./roles'] },\r\n    { name: 'Tickets', route: ['./tickets'] },\r\n    { name: 'Manufacturing', route: ['./manufacturing'] },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SubMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SubMenuItem } from '../../../../shared/page-template/model/sub-menu-item.model';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-settings',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent, RouterModule],\r\n  templateUrl: './settings.component.html',\r\n  styleUrl: './settings.component.scss'\r\n})\r\nexport class SettingsComponent {\r\n  subMenu: SubMenuItem[] = [\r\n    { name: 'Overview', route: ['./overview'] },\r\n    { name: 'Documents', route: ['./documents'] },\r\n    { name: 'Roles', route: ['./roles'] },\r\n    { name: 'Tickets', route: ['./tickets'] },\r\n    { name: 'Manufacturing', route: ['./manufacturing'] },\r\n  ];\r\n}\r\n",
            "styleUrl": "./settings.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template [subMenu]=\"subMenu\">\r\n\r\n  <span header>Settings</span>\r\n\r\n  <ng-container body>\r\n    <router-outlet></router-outlet>\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "SideBarComponent",
            "id": "component-SideBarComponent-0ddff829ac05e73d4177bb46c06ce5d794f8f782f50f3685b770d8e89679d80cd95daca45ea5f53a5d25fd4fe822a45b7c398d17157afbb8bdec1ee374be6137",
            "file": "projects/main/src/app/shared/side-bar/side-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-side-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./side-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "advancedSearchProps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "compactMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "expandedOnStart",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "MenuItem[]",
                    "decorators": []
                },
                {
                    "name": "quickLinks",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "QuickLink[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeNodesChanged",
                    "defaultValue": "new EventEmitter<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter<string[]>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "allExpanded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "collapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.collapsed'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "faChevronLeft",
                    "defaultValue": "faChevronLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "faChevronRight",
                    "defaultValue": "faChevronRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "faCog",
                    "defaultValue": "faCog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "faDefaultIcon",
                    "defaultValue": "faFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "faIndent",
                    "defaultValue": "faIndent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "faOutdent",
                    "defaultValue": "faOutdent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "faSearch",
                    "defaultValue": "faSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "faTimes",
                    "defaultValue": "faTimes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "filteredMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "filterSubject$",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "filterText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "isSearched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    styles: ['font-weight-bold'],\r\n    expandedOnStart: false,\r\n    showBadgeOnHoverOnly: true,\r\n    showMiniBadges: true,\r\n    allowDrag: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeviewOptions",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "searchElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'search'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "stickyMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "treeview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeViewComponent",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TreeViewComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "treeviewNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeviewNode[]",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "collapseAllNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "convertMenuItemsToTreeviewNodes",
                    "args": [
                        {
                            "name": "menuItems",
                            "type": "MenuItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "treeNodes",
                            "type": "TreeviewNode[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "menuItems",
                            "type": "MenuItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "treeNodes",
                            "type": "TreeviewNode[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "expandAllNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 204,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filterNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "menuItemClicked",
                    "args": [
                        {
                            "name": "subMenu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subMenu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "processClick",
                    "args": [
                        {
                            "name": "m",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "m",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "processQuickLinkClick",
                    "args": [
                        {
                            "name": "quickLink",
                            "type": "QuickLink",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "quickLink",
                            "type": "QuickLink",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDefaultActiveNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showItem",
                    "args": [
                        {
                            "name": "selectedNode",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedNode",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSideBar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "triggerSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.collapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "ShortenPipe",
                    "type": "pipe"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "NgbTooltipModule",
                    "type": "module"
                },
                {
                    "name": "TreeViewComponent",
                    "type": "component"
                },
                {
                    "name": "StickyPopoverDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faChevronLeft, faChevronRight, faCog, faFile, faIndent, faOutdent, faSearch, faTimes, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { debounceTime, distinctUntilChanged, Subject, takeUntil } from 'rxjs';\r\nimport { ShortenPipe } from '../shorten-pipe/shorten.pipe';\r\nimport { TreeviewNode } from '../tree-view/models/tree-view-node.model';\r\nimport { TreeviewOptions } from '../tree-view/models/tree-view-option.model';\r\nimport { TreeViewComponent } from '../tree-view/tree-view.component';\r\nimport { MenuItem } from './model/menu-item.model';\r\nimport { QuickLink } from './model/quick-link.model';\r\nimport { StickyPopoverDirective } from './sticky-popover.directive';\r\n\r\n@Component({\r\n  selector: 'csps-side-bar',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, ShortenPipe, FontAwesomeModule, FormsModule, NgbTooltipModule, TreeViewComponent, StickyPopoverDirective],\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrl: './side-bar.component.scss'\r\n})\r\nexport class SideBarComponent implements OnInit, AfterViewInit, OnChanges {\r\n  // Search text element\r\n  @ViewChild('search') searchElement!: ElementRef;\r\n\r\n  // Tree view component\r\n  @ViewChild(TreeViewComponent) treeview!: TreeViewComponent\r\n\r\n  // Icons\r\n  faDefaultIcon: IconDefinition = faFile;\r\n  faCog: IconDefinition = faCog;\r\n  faChevronLeft: IconDefinition = faChevronLeft;\r\n  faChevronRight: IconDefinition = faChevronRight;\r\n  faSearch: IconDefinition = faSearch;\r\n  faTimes: IconDefinition = faTimes;\r\n  faIndent: IconDefinition = faIndent;\r\n  faOutdent: IconDefinition = faOutdent;\r\n\r\n  // The list of menu items\r\n  @Input() menuItems: MenuItem[] = [];\r\n\r\n  // Indicator to expand tree by default\r\n  @Input() expandedOnStart?: boolean = true;\r\n\r\n  // The header text\r\n  @Input() header: string = '';\r\n\r\n  // The optional list of quick links\r\n  @Input() quickLinks?: QuickLink[] = [];\r\n\r\n  // Active tree nodes\r\n  @Input() activeNodes: string[] = [];\r\n\r\n  // Compact mode\r\n  @Input() compactMode?: boolean = false;\r\n\r\n  // Advanced search properties\r\n  @Input() advancedSearchProps?: string[] = [];\r\n\r\n  // Event fired when a active nodes is updated\r\n  @Output() activeNodesChanged: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n\r\n\r\n  // The expand/collapse status\r\n  @HostBinding('class.collapsed') collapsed: boolean = false;\r\n\r\n  // Indicate whether seach button is clicked\r\n  isSearched: boolean = false;\r\n\r\n  // Subject object of filter\r\n  filterSubject$ = new Subject<string>();\r\n\r\n  // Filter text\r\n  filterText: string = '';\r\n\r\n  // Filterd menu items\r\n  filteredMenuItems: MenuItem[] = [];\r\n\r\n  // Used for cleaning subscription \r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  // Tree view nodes\r\n  treeviewNodes: TreeviewNode[] = [];\r\n\r\n  // The list of menu items to show sticky at bottom\r\n  stickyMenuItems: MenuItem[] = [];\r\n\r\n  // The treeview customization options\r\n  options: TreeviewOptions = {\r\n    styles: ['font-weight-bold'],\r\n    expandedOnStart: false,\r\n    showBadgeOnHoverOnly: true,\r\n    showMiniBadges: true,\r\n    allowDrag: false\r\n  };\r\n\r\n  // Indicates expand/collase tree toggler status\r\n  allExpanded: boolean = true;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.options.expandedOnStart = !!this.expandedOnStart;\r\n    this.filterSubject$.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      takeUntil(this.unsubscribe)\r\n    ).subscribe(x => this.filterNodes());\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setDefaultActiveNodes();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.activeNodes = this.activeNodes || [];\r\n    // Clear the treeview\r\n    this.treeviewNodes = [];\r\n    this.filteredMenuItems = this.menuItems.filter(x => !x.stickyBottom);\r\n    // Extract the sticky menu items and ensure default click callback is set if not defined\r\n    this.stickyMenuItems = this.menuItems.filter(x => x.stickyBottom);\r\n    this.stickyMenuItems.forEach(m => {\r\n      const defaultOnClick = () => { };\r\n      m.onClick = m.onClick || defaultOnClick;\r\n    });\r\n\r\n    // Build the tree view\r\n    this.convertMenuItemsToTreeviewNodes(this.menuItems.filter(x => !x.stickyBottom), this.treeviewNodes, 1);\r\n  }\r\n\r\n  toggleSideBar() {\r\n    this.collapsed = !this.collapsed;\r\n    if (this.collapsed)\r\n      this.collapseAllNodes();\r\n  }\r\n\r\n  triggerSearch() {\r\n    this.isSearched = true;\r\n    setTimeout(() => { // this will make the execution after the above boolean has changed\r\n      this.searchElement.nativeElement.focus();\r\n    }, 0);\r\n  }\r\n\r\n  resetSearch() {\r\n    this.isSearched = false;\r\n    this.filterText = \"\";\r\n    this.filterNodes();\r\n  }\r\n\r\n  // Filter the nodes\r\n  filterNodes() {\r\n    this.treeview.filterTree(this.filterText, this.advancedSearchProps);\r\n  }\r\n\r\n  change(data: any) {\r\n    // Not required here\r\n  }\r\n\r\n  // Item clicked, show the content on the right side\r\n  showItem(selectedNode: TreeviewNode) {\r\n    const menuItem: MenuItem | undefined = selectedNode.data.menuItem;\r\n\r\n    if (menuItem) {\r\n      this.activeNodesChanged.emit([menuItem.id]);\r\n      this.menuItemClicked(menuItem);\r\n    }\r\n  }\r\n\r\n  menuItemClicked(subMenu: MenuItem) {\r\n    const onClick = subMenu.onClick;\r\n    if (onClick)\r\n      onClick(subMenu);\r\n\r\n    // Navigate to route if defined\r\n    const route = subMenu.route;\r\n    if (route && route[0])\r\n      this.router.navigate(route, { relativeTo: this.route });\r\n  }\r\n\r\n  // Update tree view\r\n  convertMenuItemsToTreeviewNodes(menuItems: MenuItem[], treeNodes: TreeviewNode[], level: number) {\r\n    if (menuItems) {\r\n      menuItems.forEach(menuItem => {\r\n        const node = new TreeviewNode(menuItem.id, menuItem.label, level, null, menuItem.icon, menuItem.badges ? menuItem.badges : [], { menuItem: menuItem, route: menuItem.route, onClick: menuItem.onClick });\r\n        if (menuItem.contextMenu) {\r\n          node.contextMenu = menuItem.contextMenu.map(x => ({\r\n            text: x.text,\r\n            callback: (data: { menuItem: MenuItem }) => x.callback(data.menuItem)\r\n          }));\r\n        }\r\n        if (menuItem.meta)\r\n          node.meta = menuItem.meta;\r\n        treeNodes.push(node);\r\n        if (menuItem.children && menuItem.children.length > 0) {\r\n          this.convertMenuItemsToTreeviewNodes(menuItem.children, node.children, level + 1);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Expand all nodes\r\n  expandAllNodes() {\r\n    this.allExpanded = !this.allExpanded;\r\n    this.treeview.expandAllNodes();\r\n  }\r\n\r\n  // Collapse all nodes\r\n  collapseAllNodes() {\r\n    this.allExpanded = !this.allExpanded;\r\n    this.treeview.collapseAllNodes();\r\n  }\r\n\r\n  // Process menu item click\r\n  processClick(m: MenuItem): void {\r\n    if (m.collpaseOnClick) {\r\n      this.collapsed = true;\r\n      this.collapseAllNodes();\r\n    }\r\n\r\n    if (m.onClick)\r\n      m.onClick(m);\r\n  }\r\n\r\n  // Process quick link click\r\n  processQuickLinkClick(quickLink: QuickLink): void {\r\n    if (quickLink.onClick)\r\n      quickLink.onClick(quickLink);\r\n  }\r\n\r\n  // Keep default active nodes in tree on initial load\r\n  setDefaultActiveNodes() {\r\n    // this.activeNodes.forEach(nodeId => {\r\n    //   this.treeview.treeview.treeModel.getNodeById(nodeId).setActiveAndVisible(true);\r\n    // });\r\n  }\r\n}\r\n",
            "styleUrl": "./side-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 100,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"sidebar d-flex flex-column\">\r\n  <ul class=\"nav flex-column border-bottom\">\r\n    <li class=\"nav-item d-flex justify-content-between\" *ngIf=\"!isSearched\">\r\n      <a class=\"nav-link\" [ngClass]=\"{'px-2':collapsed}\">\r\n        <span *ngIf=\"!collapsed\" class=\"text-capitalize fw-bold\"> {{header}}</span>\r\n        <span *ngIf=\"collapsed\" class=\"text-capitalize fw-bold\"> {{header | shorten:4}}</span>\r\n      </a>\r\n      <div>\r\n        <a class=\"nav-link d-inline-block pointer pe-0\" *ngIf=\"!collapsed\">\r\n          <fa-icon [icon]=\"faSearch\" [fixedWidth]=\"true\" (click)=\"triggerSearch()\"></fa-icon>\r\n        </a>\r\n        <a class=\"nav-link d-inline-block pointer\" *ngIf=\"!collapsed\">\r\n          <fa-icon [icon]=\"faIndent\" [fixedWidth]=\"true\" (click)=\"expandAllNodes()\" *ngIf=\"!allExpanded\"></fa-icon>\r\n          <fa-icon [icon]=\"faOutdent\" [fixedWidth]=\"true\" (click)=\"collapseAllNodes()\" *ngIf=\"allExpanded\"></fa-icon>\r\n        </a>\r\n      </div>\r\n    </li>\r\n\r\n    <li class=\"nav-item d-flex justify-content-between\" *ngIf=\"isSearched && !collapsed\">\r\n      <input type=\"search\" #search class=\"form-control form-control-sm my-1 ms-2\" placeholder=\"Search...\" [(ngModel)]=\"filterText\" (input)=\"filterSubject$.next($any($event.target)?.value)\">\r\n      <a class=\"nav-link pointer\">\r\n        <fa-icon [icon]=\"faTimes\" [fixedWidth]=\"true\" (click)=\"resetSearch()\"></fa-icon>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n\r\n  <ul class=\"nav flex-column border-bottom py-2\" *ngIf=\"quickLinks?.length\">\r\n    <li class=\"nav-item d-flex justify-content-around\" [ngClass]=\"{'flex-wrap':!collapsed, 'flex-column align-items-center':collapsed }\">\r\n      <a *ngFor=\"let quickLink of quickLinks\" class=\"pointer\" (click)=\"processQuickLinkClick(quickLink)\">\r\n        <span *ngIf=\"!collapsed\" class=\"badge fw-normal\" [ngClass]=\"{'text-bg-primary': quickLink.active, 'text-bg-secondary': !quickLink.active}\">{{quickLink.label}}</span>\r\n        <span *ngIf=\"collapsed\" class=\"badge fw-normal\" [ngClass]=\"{'text-bg-primary': quickLink.active, 'text-bg-secondary': !quickLink.active}\" placement=\"right\" container=\"body\" [ngbTooltip]=\"quickLink.label\">{{quickLink.abbreviation}}</span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n\r\n  <ul class=\"nav flex-column overflow-auto\" [ngClass]=\"{'small': compactMode}\">\r\n    <ng-container *ngIf=\"collapsed\">\r\n      <li class=\"nav-item\" *ngFor=\"let menuItem of filteredMenuItems\">\r\n        <ng-template #submenus>\r\n          <ul class=\"nav flex-column\">\r\n            <li class=\"fw-bold\">{{menuItem.label}}</li>\r\n            <li class=\"nav-item\" *ngFor=\"let subMenu of menuItem.children\">\r\n              <a class=\"nav-link pointer\" [ngClass]=\"{active: subMenu.active}\" (click)=\"menuItemClicked(subMenu)\">\r\n                <fa-icon [icon]=\"subMenu.icon || faDefaultIcon\" [fixedWidth]=\"true\"></fa-icon>\r\n                {{subMenu.label}}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </ng-template>\r\n        <a class=\"nav-link\" *ngIf=\"collapsed\" [stickyPopover]=\"submenus\" [openDelay]=\"300\" triggers=\"mouseenter:mouseleave\" placement=\"right\" container=\"body\">\r\n          <fa-icon [icon]=\"menuItem.icon || faDefaultIcon\" [fixedWidth]=\"true\"></fa-icon>\r\n          <span *ngIf=\"!collapsed\"> {{menuItem.label}}</span>\r\n        </a>\r\n      </li>\r\n    </ng-container>\r\n\r\n    <li class=\"nav-item\" *ngIf=\"!collapsed\">\r\n      <csps-tree-view [dataSource]=\"treeviewNodes\" [options]=\"options\" (onNodeMoved)=\"change($event)\" (onNodeSelected)=\"showItem($event)\"></csps-tree-view>\r\n    </li>\r\n  </ul>\r\n\r\n  <ul class=\"nav flex-column mb-2 mt-auto pt-2 border-top\" *ngIf=\"stickyMenuItems.length>0\">\r\n    <li class=\"nav-item d-flex justify-content-between\" *ngFor=\"let m of stickyMenuItems; last as isLast\">\r\n      <a class=\"nav-link pointer\" [routerLink]=\"m.route\" (click)=\"processClick(m)\">\r\n        <fa-icon *ngIf=\"m.icon\" [icon]=\"m.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n        <span *ngIf=\"!collapsed\"> {{m.label}}</span>\r\n      </a>\r\n      <a class=\"nav-link pointer\" (click)=\"toggleSideBar()\" *ngIf=\"!collapsed && isLast\">\r\n        <fa-icon [icon]=\"faChevronLeft\" [fixedWidth]=\"true\"></fa-icon>\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"collapsed\">\r\n      <a class=\"nav-link pointer\" (click)=\"toggleSideBar()\">\r\n        <fa-icon [icon]=\"faChevronRight\" [fixedWidth]=\"true\"></fa-icon>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <ul class=\"nav flex-column mb-2 mt-auto pt-2 border-top\" *ngIf=\"!stickyMenuItems.length\">\r\n    <li class=\"nav-item d-flex justify-content-between\" *ngIf=\"!collapsed\">\r\n      <a class=\"nav-link\"></a>\r\n      <a class=\"nav-link pointer\" (click)=\"toggleSideBar()\">\r\n        <fa-icon [icon]=\"faChevronLeft\" [fixedWidth]=\"true\"></fa-icon>\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"collapsed\">\r\n      <a class=\"nav-link pointer\" (click)=\"toggleSideBar()\">\r\n        <fa-icon [icon]=\"faChevronRight\" [fixedWidth]=\"true\"></fa-icon>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n"
        },
        {
            "name": "SiteMapComponent",
            "id": "component-SiteMapComponent-d3190c9971dc72a710e6e8043134387ccffd3b7396858cdaccc24e3211044c87bf84b2928a9296f52865e95558dcf84dcd3cc9e20352b9a531e888ac35b6acb1",
            "file": "projects/main/src/app/features/admin/site-map/site-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-site-map",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./site-map.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-site-map',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './site-map.component.html',\r\n  styleUrl: './site-map.component.scss'\r\n})\r\nexport class SiteMapComponent {\r\n\r\n}\r\n",
            "styleUrl": "./site-map.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Site Map</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "SkeletonComponent",
            "id": "component-SkeletonComponent-72b125e1c92e3725503d09af3f723e73e3a8510d8a0933ba4345e7e9faf3a8fe78b625278e90540cea8243af24f82a482d9e61cb58732c214541f5127e1ef665",
            "file": "projects/main/src/app/features/admin/skeleton/skeleton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-skeleton",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./skeleton.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    {\r\n      id: '1', label: 'General', icon: faHome, children: [\r\n        { id: '11', label: 'Products', icon: faHome, route: ['products'] },\r\n        { id: '12', label: 'Factories', icon: faIndustry, route: ['factories'] },\r\n        { id: '13', label: 'Currencies', icon: faMoneyBill, route: ['currencies'] },\r\n        { id: '14', label: 'Dimensions', icon: faBalanceScale, route: ['dimensions'] },\r\n      ]\r\n    },\r\n    {\r\n      id: '2', label: 'Users', icon: faUsers, children: [\r\n        { id: '21', label: 'Groups', icon: faUsers, route: ['groups'] },\r\n        { id: '22', label: 'Roles', icon: faUsersCog, route: ['roles'] },\r\n        { id: '23', label: 'Permissions', icon: faUserLock, route: ['permissions'] },\r\n        { id: '24', label: 'Proxy Signatures', icon: faUserEdit, route: ['proxies'] },\r\n        { id: '25', label: 'Assignment Matrix', icon: faTable, route: ['assignments'] },\r\n      ]\r\n    },\r\n    {\r\n      id: '3', label: 'Selection Navigator', icon: faUsers, children: [\r\n        { id: '31', label: 'Business Units', icon: faStoreAlt, route: ['business-units'] },\r\n        { id: '32', label: 'Areas', icon: faGlobe, route: ['areas'] },\r\n        { id: '33', label: 'User Types', icon: faUserCog, route: ['user-types'] },\r\n        { id: '34', label: 'Export Groups', icon: faPaperPlane, route: ['export-groups'] },\r\n        { id: '35', label: 'Upload Regions', icon: faPaperPlane, route: ['upload-regions'] },\r\n        { id: '36', label: 'Price Reports', icon: faDollarSign, route: ['price-reports'] },\r\n        { id: '37', label: 'SR Types', icon: faLightbulb, route: ['sr-types'] }\r\n      ]\r\n    },\r\n    {\r\n      id: '4', label: 'Tools', icon: faTools, children: [\r\n        { id: '41', label: 'Site Map', icon: faSitemap, route: ['site-map'] },\r\n      ]\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "quickLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuickLink[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { faBalanceScale, faDollarSign, faGlobe, faHome, faIndustry, faLightbulb, faMoneyBill, faPaperPlane, faSitemap, faStoreAlt, faTable, faTools, faUserCog, faUserEdit, faUserLock, faUsers, faUsersCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { PageWrapperComponent } from '../../../shared/page-wrapper/page-wrapper.component';\r\nimport { MenuItem } from '../../../shared/side-bar/model/menu-item.model';\r\nimport { QuickLink } from '../../../shared/side-bar/model/quick-link.model';\r\n  \r\n@Component({\r\n  selector: 'csps-skeleton',\r\n  standalone: true,\r\n  imports: [PageWrapperComponent, RouterModule],\r\n  templateUrl: './skeleton.component.html',\r\n  styleUrl: './skeleton.component.scss'\r\n})\r\nexport class SkeletonComponent {\r\n  // The menu items, quickLinks\r\n  menuItems: MenuItem[] = [\r\n    {\r\n      id: '1', label: 'General', icon: faHome, children: [\r\n        { id: '11', label: 'Products', icon: faHome, route: ['products'] },\r\n        { id: '12', label: 'Factories', icon: faIndustry, route: ['factories'] },\r\n        { id: '13', label: 'Currencies', icon: faMoneyBill, route: ['currencies'] },\r\n        { id: '14', label: 'Dimensions', icon: faBalanceScale, route: ['dimensions'] },\r\n      ]\r\n    },\r\n    {\r\n      id: '2', label: 'Users', icon: faUsers, children: [\r\n        { id: '21', label: 'Groups', icon: faUsers, route: ['groups'] },\r\n        { id: '22', label: 'Roles', icon: faUsersCog, route: ['roles'] },\r\n        { id: '23', label: 'Permissions', icon: faUserLock, route: ['permissions'] },\r\n        { id: '24', label: 'Proxy Signatures', icon: faUserEdit, route: ['proxies'] },\r\n        { id: '25', label: 'Assignment Matrix', icon: faTable, route: ['assignments'] },\r\n      ]\r\n    },\r\n    {\r\n      id: '3', label: 'Selection Navigator', icon: faUsers, children: [\r\n        { id: '31', label: 'Business Units', icon: faStoreAlt, route: ['business-units'] },\r\n        { id: '32', label: 'Areas', icon: faGlobe, route: ['areas'] },\r\n        { id: '33', label: 'User Types', icon: faUserCog, route: ['user-types'] },\r\n        { id: '34', label: 'Export Groups', icon: faPaperPlane, route: ['export-groups'] },\r\n        { id: '35', label: 'Upload Regions', icon: faPaperPlane, route: ['upload-regions'] },\r\n        { id: '36', label: 'Price Reports', icon: faDollarSign, route: ['price-reports'] },\r\n        { id: '37', label: 'SR Types', icon: faLightbulb, route: ['sr-types'] }\r\n      ]\r\n    },\r\n    {\r\n      id: '4', label: 'Tools', icon: faTools, children: [\r\n        { id: '41', label: 'Site Map', icon: faSitemap, route: ['site-map'] },\r\n      ]\r\n    }\r\n  ];\r\n  quickLinks!: QuickLink[];\r\n\r\n  constructor() { }\r\n}\r\n",
            "styleUrl": "./skeleton.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 52
            },
            "extends": [],
            "templateData": "<csps-page-wrapper [menuItems]=\"menuItems\" [quickLinks]=\"quickLinks\" menuHeader=\"Planning\">\r\n\r\n  <ng-container body>\r\n    <router-outlet></router-outlet>\r\n  </ng-container>\r\n\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "SkeletonComponent",
            "id": "component-SkeletonComponent-e70cb4721f2faae97d9368e5f589d56bd03847aa9353155bcfd1df4b7a79a554bdcc81c0b70f4220cf8ef783dc655395ee36d01149437b43187d51db382512af-1",
            "file": "projects/main/src/app/features/work/planning/skeleton/skeleton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-skeleton",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./skeleton.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "quickLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuickLink[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PageWrapperComponent } from '../../../../shared/page-wrapper/page-wrapper.component';\r\nimport { MenuItem } from '../../../../shared/side-bar/model/menu-item.model';\r\nimport { QuickLink } from '../../../../shared/side-bar/model/quick-link.model';\r\nimport { PlanningMenuService } from '../shared/planning-menu.service';\r\n\r\n@Component({\r\n  selector: 'csps-skeleton',\r\n  standalone: true,\r\n  imports: [PageWrapperComponent, RouterModule],\r\n  templateUrl: './skeleton.component.html',\r\n  styleUrl: './skeleton.component.scss'\r\n})\r\nexport class SkeletonComponent implements OnInit {\r\n  // The menu items, quickLinks\r\n  menuItems!: MenuItem[];\r\n  quickLinks!: QuickLink[];\r\n\r\n  constructor(private planningMenuService: PlanningMenuService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.menuItems = this.planningMenuService.menuItems;\r\n    this.quickLinks = this.planningMenuService.quickLinks;\r\n  }\r\n}\r\n",
            "styleUrl": "./skeleton.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "planningMenuService",
                        "type": "PlanningMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "planningMenuService",
                        "type": "PlanningMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SkeletonComponent-1",
            "templateData": "<csps-page-wrapper [menuItems]=\"menuItems\" [quickLinks]=\"quickLinks\" menuHeader=\"Planning\">\r\n\r\n  <ng-container body>\r\n    <router-outlet></router-outlet>\r\n  </ng-container>\r\n\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "SrTypesComponent",
            "id": "component-SrTypesComponent-ec9a25882d0426b0a75acd770ee5229b9ca89d27fbef54f83df54612d341a191c6f565330a0828d078fadeb4a49343a7a4639ab937d017429a7381a638e0b5ac",
            "file": "projects/main/src/app/features/admin/sr-types/sr-types.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-sr-types",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sr-types.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-sr-types',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './sr-types.component.html',\r\n  styleUrl: './sr-types.component.scss'\r\n})\r\nexport class SrTypesComponent {\r\n\r\n}\r\n",
            "styleUrl": "./sr-types.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>SR Types</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "StatsComponent",
            "id": "component-StatsComponent-b15fa8947cc997263da9ff287a3156e5e039581539b19d28e09f92db2d7699e609486afe66ebae5144f921d18dc6f6bb3bc61a7ef7ee541c62e05eea7d93067a",
            "file": "projects/main/src/app/features/work/planning/stats/stats.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-stats",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./stats.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-stats',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './stats.component.html',\r\n  styleUrl: './stats.component.scss'\r\n})\r\nexport class StatsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./stats.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Stats</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "TestComponent",
            "id": "component-TestComponent-f961837d04eb5428f0a219e5e9483183719108ae6d98cd3b6ed61c06605fb3066c94769efecf44ef08ce33fbc54d0215ca0af477fde187b57e3ac40df142b8b8",
            "file": "projects/main/src/app/features/products/test/test.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-test",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "creoView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'CreoViewWebGLDiv'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "session",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "structure",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "test",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\ndeclare var ThingView: any;\r\n\r\n@Component({\r\n  selector: 'csps-test',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './test.component.html',\r\n  styleUrl: './test.component.scss'\r\n})\r\nexport class TestComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('CreoViewWebGLDiv') creoView: any;\r\n  data!: string;\r\n  app!: any;\r\n  session!: any;\r\n  model!: any;\r\n  structure!: any;\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    ThingView.init(\"assets/js/ptc/thingview\", () => {\r\n      console.log(\"Creo View WebGL Viewer is now initialized\");\r\n      this.app = ThingView.CreateCVApplication(\"CreoViewWebGLDiv\");\r\n      this.session = this.app.GetSession();\r\n      this.structure = this.session.LoadStructureWithURL(\"assets/test/default2.pvz\", true, (success: any, errors: any) => {\r\n        const shapeScene = this.session.MakeShapeScene(true);\r\n        const shapeView = shapeScene.MakeShapeView(this.creoView.nativeElement.childNodes[0].id, true);\r\n        this.model = shapeScene.MakeModel();\r\n        this.model.LoadStructure(this.structure, true, true, (success: any, isStructure: any, errorStack: any) => {\r\n          console.log(\"Model LoadStructure - success: \" + success + \", isStructure: \" + isStructure);\r\n        });\r\n\r\n        this.model.SetSelectionCallback((si: any, id: any, selected: any) => {\r\n          this.data = selected + '   ' + this.model.GetShapeInstanceFromIdPath(selected)?.GetDisplayName();\r\n        });\r\n\r\n      });\r\n    });\r\n  };\r\n\r\n  test(): void {\r\n    debugger;\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./test.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div #CreoViewWebGLDiv  id=\"CreoViewWebGLDiv\" class=\"flex-fill min-height-0\"></div>\r\n\r\n<div style=\"height:100px;\">\r\n  {{data}}\r\n</div>\r\n"
        },
        {
            "name": "TicketDashboardComponent",
            "id": "component-TicketDashboardComponent-73d467746eed6d4408dd36c96ae19a92cc37979f343f1928752e4354715388c8357d910ecaeadbda0287eb34072027a0d1b9bce749141a494167b23742dd1677",
            "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-ticket-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ticket-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TicketDashboardOptions",
                    "decorators": []
                },
                {
                    "name": "tickets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TicketDashboardTicket[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "documentOpened",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "productNavigated",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "ticketAdded",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "ticketNavigated",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<TicketDashboardTicket>",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToProduct",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateToTicket",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DataTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\r\nimport { faExternalLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTableComponent } from '../../../../../shared/data-table/data-table.component';\r\nimport { DataTableSettings } from '../../../../../shared/data-table/model/data-table-settings.model';\r\nimport { TicketDashboardOptions } from './model/ticket-dashboard-options.model';\r\nimport { TicketDashboardTicket } from './model/ticket-dashboard-ticket.model';\r\n\r\n@Component({\r\n  selector: 'csps-ticket-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, DataTableComponent],\r\n  templateUrl: './ticket-dashboard.component.html',\r\n  styleUrl: './ticket-dashboard.component.scss'\r\n})\r\nexport class TicketDashboardComponent implements OnChanges, OnDestroy {\r\n  // The list of tickets\r\n  @Input() tickets!: TicketDashboardTicket[];\r\n\r\n  // The ticket dashboard options\r\n  @Input() options?: TicketDashboardOptions;\r\n\r\n  // The event emitted when a ticket is navigated to\r\n  @Output() ticketNavigated: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // The event emitted when a product is navigated to\r\n  @Output() productNavigated: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // The event emitted when a document is navigated to\r\n  @Output() documentOpened: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // The event emitted when a ticket is navigated to\r\n  @Output() ticketAdded: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // TODO: Add other event emitters as needed\r\n\r\n  // The datatable settings\r\n  settings!: DataTableSettings<TicketDashboardTicket>\r\n\r\n  // Used for cleaning subscriptions\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void {\r\n    // Enrich list of tickets as necessary\r\n    const data = this.tickets.map((x, i) => {\r\n      return {\r\n        ...x,\r\n        navigateIcon: faExternalLink\r\n      };\r\n    });\r\n\r\n    this.settings = {\r\n      data: data,\r\n      hideRow: (row: any) => row.isPlaceholder,\r\n      columnDefinitions: [\r\n        { id: '1', label: '', name: '', type: 'text', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name', name: 'name', type: 'text', cellAlignment: 'left', visible: true, searchable: true, filterMode: 'text' },\r\n        { id: '9', label: 'Link', name: 'navigateIcon', type: 'icon', cellAlignment: 'center', columnClass: 'fit', visible: true, searchable: false, filterMode: 'none', click: this.navigateToTicket.bind(this) }\r\n      ],\r\n      toolBar: {\r\n        right: [\r\n          { name: 'Search', type: 'search', callback: () => { } },\r\n          { name: 'Export to Excel', type: 'excel', callback: () => { } }\r\n        ]\r\n      },\r\n      groupBy: [\r\n        {\r\n          property: 'productLine.id', orderBy: ['productLine.name'], columns: [\r\n             { name: 'productLine.name', type: 'text', alignment: 'left', class: 'fw-bold text-uppercase', colspan:2 },\r\n            { name: 'navigateIcon', type: 'icon', alignment: 'center', colspan: 1, click: this.navigateToProduct.bind(this) }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  navigateToTicket(rowData: { rowId: string }): void {\r\n    this.ticketNavigated.emit(rowData.rowId);\r\n  }\r\n\r\n  navigateToProduct(rowData: { rowId: string }): void {\r\n    this.productNavigated.emit(rowData.rowId);\r\n  }\r\n}\r\n",
            "styleUrl": "./ticket-dashboard.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 42
            },
            "extends": [],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<csps-data-table [settings]=\"settings\"></csps-data-table>\r\n"
        },
        {
            "name": "TicketsComponent",
            "id": "component-TicketsComponent-c371d933a95415940c36806c5610d68ab77b9cb031bd6254d691efd8c93e5ccc741997c70c6a19ebacb29a4aa0bab4b2ffee6e0bc065f44be7ba6aeb8ef61c99",
            "file": "projects/main/src/app/features/products/settings/tickets/tickets.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-tickets",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tickets.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'csps-tickets',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './tickets.component.html',\r\n  styleUrl: './tickets.component.scss'\r\n})\r\nexport class TicketsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./tickets.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>tickets works!</p>\r\n"
        },
        {
            "name": "TreeViewComponent",
            "id": "component-TreeViewComponent-0308591d5908338555141271b810429308ce5afbc48434bfd71be46c0fc1f423b0c71d04167e0650085854ff329e2dc01411963fa2ec8fcdb5da2f59a23ef9d7",
            "file": "projects/main/src/app/shared/tree-view/tree-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-tree-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TreeviewNode[]",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "TreeviewOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onNodeMoved",
                    "defaultValue": "new EventEmitter<TreeviewNode[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter<TreeviewNode[]>"
                },
                {
                    "name": "onNodeSelected",
                    "defaultValue": "new EventEmitter<TreeviewNode>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<TreeviewNode>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "expandDelay",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "expandTimeout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "expansionModel",
                    "defaultValue": "new SelectionModel<string>(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "faBars",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "faCaretDown",
                    "defaultValue": "faCaretDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "faCaretRight",
                    "defaultValue": "faCaretRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "faEllipsisV",
                    "defaultValue": "faEllipsisV",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "hasChild",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "tree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkTree<TreeviewNode>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tree'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "treeControl",
                    "defaultValue": "new NestedTreeControl<TreeviewNode>(node => node.children)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "treeData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeviewNode[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "validateDrop",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "areAllNodesExpanded",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "collapseAllNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dragEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dragHover",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dragHoverEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dragStart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "expandAllNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filterTree",
                    "args": [
                        {
                            "name": "filter",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "searchProps",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filter",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchProps",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVisibleNodes",
                    "args": [],
                    "optional": false,
                    "returnType": "TreeviewNode[]",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "moveExpansionState",
                    "args": [
                        {
                            "name": "from",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "to",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "from",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "to",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "processClick",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeviewNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rebuildTreeForData",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CdkTreeModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "CdkMenuTrigger"
                },
                {
                    "name": "CdkMenu"
                },
                {
                    "name": "CdkMenuItem"
                },
                {
                    "name": "NgbModule",
                    "type": "module"
                },
                {
                    "name": "DragDropModule",
                    "type": "module"
                },
                {
                    "name": "CdkDragHandle"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { SelectionModel } from '@angular/cdk/collections';\r\nimport { CdkDragDrop, CdkDragHandle, DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CdkMenu, CdkMenuItem, CdkMenuTrigger } from '@angular/cdk/menu';\r\nimport { CdkTree, CdkTreeModule, NestedTreeControl } from '@angular/cdk/tree';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AfterViewChecked, AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faBars, faCaretDown, faCaretRight, faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TreeviewNode } from './models/tree-view-node.model';\r\nimport { TreeviewOptions } from './models/tree-view-option.model';\r\n\r\n@Component({\r\n  selector: 'csps-tree-view',\r\n  standalone: true,\r\n  templateUrl: './tree-view.component.html',\r\n  styleUrl: './tree-view.component.scss',\r\n  imports: [CommonModule, CdkTreeModule, FontAwesomeModule, CdkMenuTrigger, CdkMenu, CdkMenuItem, NgbModule, DragDropModule, CdkDragHandle],\r\n})\r\n\r\nexport class TreeViewComponent implements OnInit, AfterViewInit {\r\n  // Reference to the tree\r\n  @ViewChild('tree') tree!: CdkTree<TreeviewNode>;\r\n\r\n  // The tree data source\r\n  @Input() dataSource: TreeviewNode[] = [];\r\n\r\n  // The treeview customization options\r\n  @Input() options!: TreeviewOptions\r\n\r\n  // Event fired when a tree node is moved\r\n  @Output() onNodeMoved: EventEmitter<TreeviewNode[]> = new EventEmitter<TreeviewNode[]>();\r\n\r\n  // Event fired when a tree node is selected\r\n  @Output() onNodeSelected: EventEmitter<TreeviewNode> = new EventEmitter<TreeviewNode>();\r\n\r\n  // Icons\r\n  faEllipsisV: IconDefinition = faEllipsisV;\r\n  faCaretRight: IconDefinition = faCaretRight;\r\n  faCaretDown: IconDefinition = faCaretDown;\r\n  faBars: IconDefinition = faBars;\r\n\r\n  // Nested tree control\r\n  treeData: TreeviewNode[] = [];\r\n  treeControl = new NestedTreeControl<TreeviewNode>(node => node.children);\r\n\r\n  // Expansion model tracks expansion state and other drag and drop properties\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n\r\n  constructor() { }\r\n\r\n  // Helper function\r\n  hasChild = (_: number, node: TreeviewNode) => !!node.children && node.children.length > 0;\r\n\r\n  ngOnInit() {\r\n    // Initialization of the dataSource and treeControl dataNodes\r\n    this.treeData = this.dataSource;\r\n    this.treeControl.dataNodes = this.dataSource;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.tree && this.options.expandedOnStart) {\r\n      setTimeout(() => {\r\n        this.expandAllNodes();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Function to check if all nodes are expanded\r\n  areAllNodesExpanded(): boolean {\r\n    return this.dataSource.every(node => this.treeControl.isExpanded(node));\r\n  }\r\n\r\n  expandAllNodes(): void {\r\n    this.treeControl.expandAll();\r\n  }\r\n\r\n  collapseAllNodes(): void {\r\n    this.treeControl.collapseAll();\r\n  }\r\n\r\n  moveExpansionState(from: TreeviewNode, to: TreeviewNode) {\r\n    if (this.treeControl.isExpanded(from)) {\r\n      this.treeControl.collapse(from);\r\n      this.treeControl.expand(to);\r\n    }\r\n  }\r\n\r\n  processClick(node: TreeviewNode) {\r\n    this.onNodeSelected.emit(node);\r\n  }\r\n\r\n  // Handle the drop event\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    // Ignore drops outside of the tree\r\n    if (!event.isPointerOverContainer || !this.options.allowDrag) return;\r\n\r\n    // Construct a list of visible nodes, this will match the DOM.\r\n    // The cdkDragDrop event.currentIndex jives with visible nodes.\r\n    // It calls rememberExpandedTreeNodes to persist expand state\r\n    const visibleNodes = this.getVisibleNodes();\r\n\r\n    // Dep clone the data source so we can mutate it\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource));\r\n\r\n    // Recursive find function to find siblings of node\r\n    const findNodeSiblings = (arr: any[], id: string): any[] => {\r\n      let result: any[] | undefined;\r\n      arr.forEach((item) => {\r\n        if (item.id === id) {\r\n          result = arr;\r\n        } else if (item.children && item.children.length) {\r\n          const subResult = findNodeSiblings(item.children, id);\r\n          if (subResult && subResult.length) result = subResult;\r\n        }\r\n      });\r\n      return result || [];\r\n    };\r\n\r\n    // Determine where to insert the node\r\n    const nodeAtDest = visibleNodes[event.currentIndex];\r\n    const newSiblings = findNodeSiblings(changedData, nodeAtDest.id);\r\n    if (!newSiblings) return;\r\n    const insertIndex = newSiblings.findIndex(s => s.id === nodeAtDest.id);\r\n\r\n    // Remove the node from its old place\r\n    const node = event.item.data;\r\n    const siblings = findNodeSiblings(changedData, node.id);\r\n    const siblingIndex = siblings.findIndex(n => n.id === node.id);\r\n    const nodeToInsert: TreeviewNode = siblings.splice(siblingIndex, 1)[0];\r\n    if (nodeAtDest.id === nodeToInsert.id) return;\r\n\r\n    // Ensure validity of drop - must be same level\r\n    const nodeAtDestFlatNode = this.treeControl.dataNodes.find((n) => nodeAtDest.id === n.id) as TreeviewNode;\r\n    if (this.validateDrop && nodeAtDestFlatNode.level !== node.level) {\r\n      alert('Items can only be moved within the same level.');\r\n      return;\r\n    }\r\n\r\n    // Insert node \r\n    newSiblings.splice(insertIndex, 0, nodeToInsert);\r\n\r\n    // Rebuild tree with mutated data\r\n    this.rebuildTreeForData(changedData);\r\n  }\r\n\r\n  dragStart() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  dragEnd() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  dragHover(node: TreeviewNode) {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n      this.expandTimeout = setTimeout(() => {\r\n        this.treeControl.expand(node);\r\n      }, this.expandDelay);\r\n    }\r\n  }\r\n\r\n  dragHoverEnd() {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n    }\r\n  }\r\n\r\n  // Generates the list of visible nodes\r\n  getVisibleNodes(): TreeviewNode[] {\r\n    const result: TreeviewNode[] = [];\r\n\r\n    const addExpandedChildren = (node: TreeviewNode, expanded: string[]) => {\r\n      result.push(node);\r\n      if (node.children && expanded.includes(node.id)) {\r\n        node.children.forEach((child: TreeviewNode) => addExpandedChildren(child, expanded));\r\n      }\r\n    };\r\n\r\n    this.dataSource.forEach(node => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // Force the rebuild of the tree, preserving the expansion state\r\n  rebuildTreeForData(data: any) {\r\n    this.dataSource = [...data];\r\n    this.expansionModel.selected.forEach(id => {\r\n      const node = this.treeControl.dataNodes.find(n => n.id === id) as TreeviewNode;\r\n      this.treeControl.expand(node);\r\n    });\r\n  }\r\n\r\n  // Filter the tree\r\n  filterTree(filter: string, searchProps?: string[]) {\r\n    if (filter.length) {\r\n      const customFilter = (node: TreeviewNode, searchValue: string): boolean => {\r\n        // Check if the node name matches the search value\r\n        if (node.name.toLowerCase().includes(searchValue.toLowerCase())) {\r\n          return true;\r\n        }\r\n        // Check if any of the search properties match the search value\r\n        if (searchProps && searchProps.length > 0) {\r\n          for (const prop of searchProps) {\r\n            if (node[prop as keyof TreeviewNode] && typeof node[prop as keyof TreeviewNode] === 'string' && node[prop as keyof TreeviewNode].toLowerCase().includes(searchValue.toLowerCase())) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const filteredNodes: TreeviewNode[] = [];\r\n\r\n      const filterNodes = (nodes: TreeviewNode[]) => {\r\n        for (const node of nodes) {\r\n          if (node.children && node.children.length > 0) {\r\n            const filteredChildren: TreeviewNode[] = [];\r\n            for (const child of node.children) {\r\n              if (customFilter(child, filter)) {\r\n                filteredChildren.push(child);\r\n              }\r\n            }\r\n            if (filteredChildren.length > 0) {\r\n              const parentNode = { ...node, children: filteredChildren } as TreeviewNode;\r\n              filteredNodes.push(parentNode);\r\n            }\r\n            filterNodes(node.children);\r\n          }\r\n        }\r\n      };\r\n\r\n      filterNodes(this.dataSource);\r\n      this.dataSource = filteredNodes;\r\n      this.treeControl.dataNodes = this.dataSource;\r\n      this.treeControl.expandAll();\r\n    } else {\r\n      this.dataSource = this.treeData;\r\n      this.treeControl.dataNodes = this.dataSource;\r\n      this.treeControl.expandAll();\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./tree-view.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 52
            },
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<cdk-tree #tree\r\n          [dataSource]=\"dataSource\"\r\n          [treeControl]=\"treeControl\"\r\n          cdkDropList\r\n          (cdkDropListDropped)=\"drop($event)\"\r\n          class=\"example-tree\">\r\n\r\n  <!-- This is the tree node template for leaf nodes -->\r\n  <cdk-tree-node *cdkTreeNodeDef=\"let node\">\r\n    <li class=\"list-group-item\">\r\n      <div class=\"d-flex align-items-center custom-dropdown\" ngbDropdown placement=\"bottom-right\">\r\n        <!-- Drag handle -->\r\n        <button cdkDragHandle cdkDrag *ngIf=\"options.allowDrag\"\r\n                [cdkDragDisabled]=\"!options.allowDrag\"\r\n                [cdkDragData]=\"node\"\r\n                (mouseenter)=\"dragHover(node)\"\r\n                (mouseleave)=\"dragHoverEnd()\"\r\n                (cdkDragStarted)=\"dragStart()\"\r\n                (cdkDragReleased)=\"dragEnd()\"\r\n                class=\"btn btn-sm\">\r\n          <!-- Use a hamburger icon or any other icon as the drag handle -->\r\n          <fa-icon [icon]=\"faBars\" [fixedWidth]=\"true\"></fa-icon>\r\n        </button>\r\n        <!-- Node content -->\r\n        <fa-icon *ngIf=\"node.icon\" class=\"me-1\" [icon]=\"node.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n        <span class=\"pointer\" (click)=\"processClick(node)\">{{node.name}}</span>\r\n        <!-- Options button -->\r\n        <button class=\"cursor-pointer btn btn-sm ms-auto\" ngbDropdownToggle *ngIf=\"node.contextMenu && node.contextMenu.length\">\r\n          <fa-icon [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\r\n        </button>\r\n        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n          <button ngbDropdownItem class=\"cursor-pointer btn btn-sm\" *ngFor=\"let m of node.contextMenu\" (click)=\"m.callback(node.data)\">{{m.text}}</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </cdk-tree-node>\r\n\r\n  <!-- This is the tree node template for expandable nodes -->\r\n  <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\">\r\n    <li class=\"list-group-item\">\r\n      <div class=\"d-flex align-items-center custom-dropdown\" ngbDropdown placement=\"bottom-right\">\r\n        <!-- Drag handle -->\r\n        <button cdkDragHandle cdkDrag *ngIf=\"options.allowDrag\"\r\n                [cdkDragDisabled]=\"!options.allowDrag\"\r\n                [cdkDragData]=\"node\"\r\n                (mouseenter)=\"dragHover(node)\"\r\n                (mouseleave)=\"dragHoverEnd()\"\r\n                (cdkDragStarted)=\"dragStart()\"\r\n                (cdkDragReleased)=\"dragEnd()\"\r\n                class=\"btn btn-sm\">\r\n          <!-- Use a hamburger icon or any other icon as the drag handle -->\r\n          <fa-icon [icon]=\"faBars\" [fixedWidth]=\"true\"></fa-icon>\r\n        </button>\r\n        <!-- Node toggle button -->\r\n        <button cdkTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.name\" class=\"btn btn-sm px-0\" [ngClass]=\"{'ms-n125': node.level>1}\" (click)=\"expansionModel.toggle(node.id)\">\r\n          <fa-icon [icon]=\"treeControl.isExpanded(node) ? faCaretDown : faCaretRight\" [fixedWidth]=\"true\"></fa-icon>\r\n        </button>\r\n        <!-- Node name -->\r\n        <span class=\"example-tree-node-name flex-grow-1 fw-bold\">\r\n          <fa-icon *ngIf=\"node.icon\" class=\"me-1\" [icon]=\"node.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n          {{node.name}}\r\n        </span>\r\n        <!-- Options button -->\r\n        <button class=\"cursor-pointer btn btn-sm\" ngbDropdownToggle *ngIf=\"node.contextMenu && node.contextMenu.length\">\r\n          <fa-icon [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\r\n        </button>\r\n        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n          <button ngbDropdownItem class=\"cursor-pointer btn btn-sm\" *ngFor=\"let m of node.contextMenu\" (click)=\"m.callback(node.data)\">{{m.text}}</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Nested tree nodes -->\r\n      <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\" [ngClass]=\"{'ms-n125': node.level>1}\">\r\n        <ng-container cdkTreeNodeOutlet></ng-container>\r\n      </ul>\r\n    </li>\r\n  </cdk-nested-tree-node>\r\n</cdk-tree>\r\n\r\n"
        },
        {
            "name": "UploadRegionsComponent",
            "id": "component-UploadRegionsComponent-10cb0892061a990a10e9e6fae3217ce94d77d760a72627310933bd3c7a2d918fd95076a88964f75c5f7ee7031f05617e02a561752dd1c06b8514e89a15c687e0",
            "file": "projects/main/src/app/features/admin/upload-regions/upload-regions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-upload-regions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./upload-regions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-upload-regions',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './upload-regions.component.html',\r\n  styleUrl: './upload-regions.component.scss'\r\n})\r\nexport class UploadRegionsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./upload-regions.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>Upload Regions</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "UserTypesComponent",
            "id": "component-UserTypesComponent-8b23befc2060810d8aee5d01a8004a3324eedc81f836102d45106269568b86b455dc7263fe8a107599fc8fe9bf1c8bbd6a014b9d59821c233eca29043c6d1346",
            "file": "projects/main/src/app/features/admin/user-types/user-types.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-user-types",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-types.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PageTemplateComponent } from '../../../shared/page-template/page-template.component';\r\n\r\n@Component({\r\n  selector: 'csps-user-types',\r\n  standalone: true,\r\n  imports: [PageTemplateComponent],\r\n  templateUrl: './user-types.component.html',\r\n  styleUrl: './user-types.component.scss'\r\n})\r\nexport class UserTypesComponent {\r\n\r\n}\r\n",
            "styleUrl": "./user-types.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <span header>User Types</span>\r\n\r\n  <ng-container body>\r\n    TODO\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n\r\n"
        },
        {
            "name": "VersionPageTemplateComponent",
            "id": "component-VersionPageTemplateComponent-924132fdd485c088e0e0570d8c4ffb29fde53f65679ddbc841a36c294ed6b56ffd950a48fcd4707052664c024af02aadeac881d9a1a08ba9840632165513fe8f",
            "file": "projects/main/src/app/features/products/shared/components/version-page-template/version-page-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-version-page-template",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./version-page-template.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "anomalies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "behaviourOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "BehaviourOptions",
                    "decorators": []
                },
                {
                    "name": "hasNestedVersions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "helpInfoKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "VersionPageService<TVersion | TVersionComparison>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cleanAnomalies",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "EventEmitter"
                },
                {
                    "name": "comparisonFinished",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "canChangeReference",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "canRename",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "faBroom",
                    "defaultValue": "faBroom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "faClock",
                    "defaultValue": "faClock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "faCodeBranch",
                    "defaultValue": "faCodeBranch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "faCog",
                    "defaultValue": "faCog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "faEllipsisV",
                    "defaultValue": "faEllipsisV",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "faExclamationTriangle",
                    "defaultValue": "faExclamationTriangle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "faPen",
                    "defaultValue": "faPen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "faSitemap",
                    "defaultValue": "faSitemap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "faSync",
                    "defaultValue": "faSync",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconDefinition",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "isLatestReleasedVersion",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "latestReleasedVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "selectedDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BaseDocument",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "selectedVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TVersion",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "synchronisationNeeded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "tickets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "doCleanAnomalies",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "help",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openAnomaliesManager",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openRenameDocument",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openVersionManager",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openWorkflow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "PageTemplateComponent",
                    "type": "component"
                },
                {
                    "name": "NgbAlertModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PageTemplateComponent } from '../../../../../shared/page-template/page-template.component';\r\nimport { BaseVersion } from './models/base-version.model';\r\nimport { BaseVersionComparison } from './models/version-comparison.model';\r\nimport { VersionPageService } from './services/version-page.service';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DynamicFormService } from '../../../../../shared/dynamic-form/services/dynamic-form.service';\r\nimport { combineLatest, concat, map, Observable, Subject, take, takeUntil } from 'rxjs';\r\nimport { AnomaliesComponent } from '../anomalies/anomalies.component';\r\nimport { faBroom, faClock, faCodeBranch, faCog, faEllipsisV, faExclamationTriangle, faPen, faQuestionCircle, faSitemap, faSync, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\nimport { BaseDocument } from './models/document.model';\r\nimport { ModalConfig } from '../../../../../shared/dynamic-form/models/modal-config.interface';\r\nimport { CustomValidators } from '../../../../../shared/dynamic-form/custom-validators/custom-validators';\r\nimport { FieldConfig } from '../../../../../shared/dynamic-form/models/field-config.interface';\r\nimport { TicketService } from '../../ticket.service';\r\nimport { BehaviourOptions } from './models/behaviour-options';\r\n\r\n@Component({\r\n  selector: 'csps-version-page-template',\r\n  standalone: true,\r\n  imports: [CommonModule, PageTemplateComponent, NgbAlertModule, FontAwesomeModule],\r\n  templateUrl: './version-page-template.component.html',\r\n  styleUrl: './version-page-template.component.scss'\r\n})\r\nexport class VersionPageTemplateComponent<TVersion extends BaseVersion, TVersionComparison extends BaseVersionComparison> {\r\n\r\n  // Icons\r\n  faCodeBranch: IconDefinition = faCodeBranch;\r\n  faQuestionCircle: IconDefinition = faQuestionCircle;\r\n  faBroom: IconDefinition = faBroom;\r\n  faSitemap: IconDefinition = faSitemap;\r\n  faClock: IconDefinition = faClock;\r\n  faExclamationTriangle: IconDefinition = faExclamationTriangle\r\n  faCog: IconDefinition = faCog;\r\n  faSync: IconDefinition = faSync;\r\n  faPen: IconDefinition = faPen;\r\n  faEllipsisV: IconDefinition = faEllipsisV;\r\n\r\n  // Input service must extends VersionPageService\r\n  @Input() service!: VersionPageService<TVersion, TVersionComparison>;\r\n\r\n  // The list of anomalies\r\n  @Input() anomalies: { id: string, anomaly: string }[] = [];\r\n\r\n  // Help Text\r\n  @Input() helpInfoKey?: string;\r\n\r\n  // Behaviour Options\r\n  @Input() behaviourOptions?: BehaviourOptions;\r\n\r\n  // Nested version check to update ticket reassignment screen accordingly\r\n  @Input() hasNestedVersions?: boolean;\r\n  // @Input() computeTicketReassignmentAffectedVersions: (newTicketId: string, label: string) => { versions: { id: string, name: string }[], calls: Observable<any>[] };\r\n\r\n  // The event emitter to clean anomalies\r\n  @Output() cleanAnomalies = new EventEmitter();\r\n\r\n  // Comparison result output\r\n  @Output() comparisonFinished = new EventEmitter<boolean>();\r\n\r\n\r\n  // The unitary behaviours\r\n  canRename: boolean = false;\r\n  canChangeReference: boolean= false;\r\n\r\n  // The feature list document for the selected product id\r\n  selectedDocument!: BaseDocument;\r\n\r\n  // The selected version\r\n  selectedVersion!: TVersion;\r\n\r\n  // Indicate whether the selected version is the latest released version\r\n  isLatestReleasedVersion: boolean = false;\r\n\r\n  // Indicate whether a synchronisation is needed with the latest released version\r\n  synchronisationNeeded: boolean = false;\r\n\r\n  // The id of latest published version\r\n  latestReleasedVersionId!: string;\r\n\r\n  // The ticket list\r\n  tickets: any[] = [];\r\n\r\n  // roles: Role[] = [];\r\n\r\n  // Used for cleaning up subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(\r\n    private ticketService: TicketService,\r\n    private dynamicFormService: DynamicFormService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ticketService.getTicketList(this.selectedDocument.productId).pipe(\r\n      map(ticketList => ticketList.tickets),\r\n      take(1)\r\n    ).subscribe(x => {\r\n      this.tickets = x;\r\n    });\r\n\r\n    if (this.anomalies.length)\r\n      this.openAnomaliesManager();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.canRename = this.behaviourOptions ? this.behaviourOptions.canRename : false;\r\n    this.canChangeReference = this.behaviourOptions ? this.behaviourOptions.canChangeReference : false;\r\n\r\n    // Subscribe to document and version\r\n    const observables = [\r\n      this.service.document$.pipe(takeUntil(this.unsubscribe)),\r\n      this.service.version$.pipe(takeUntil(this.unsubscribe)),\r\n      // this.roleService.roles$.pipe(takeUntil(this.unsubscribe)),\r\n    ];\r\n\r\n    combineLatest(...observables).pipe(takeUntil(this.unsubscribe)).subscribe(([document, version]) => {\r\n      // Update selected document and version\r\n      this.selectedDocument = document as any;\r\n      this.selectedVersion = version as any;\r\n      // this.roles = roles;\r\n      // Store the information about the latest released version\r\n      const latestReleasedVersion = this.selectedDocument?.versions?.find(x => !!x.isLatestReleased);\r\n      this.latestReleasedVersionId = latestReleasedVersion?.id || '';\r\n      this.isLatestReleasedVersion = this.selectedVersion?.id === this.latestReleasedVersionId;\r\n\r\n      // Check synchronised version vs latest released\r\n      this.synchronisationNeeded = this.latestReleasedVersionId !== '' && !this.isLatestReleasedVersion && this.selectedVersion?.synchedWithVersionId !== this.latestReleasedVersionId && !this.selectedVersion?.released;\r\n    });\r\n  }\r\n\r\n\r\n  // Open the rename modal\r\n  openRenameDocument() {\r\n    const config: ModalConfig = {\r\n      headerText: `Rename document ${this.selectedDocument.name}`,\r\n      submitText: 'Edit',\r\n      closeText: 'Cancel',\r\n      labelSize: 3,\r\n      extraButtons: [],\r\n      onSubmit: (e: { name: string, reference: string }) => {\r\n        // const calls = [\r\n        //   ...(e.name && e.name !== this.selectedDocument.name) ? [this.service.renameDocument(this.selectedDocument.id, e.name).pipe(take(1))] : [],\r\n        //   ...(e.reference && e.reference !== this.selectedDocument.reference) ? [this.service.updateDocumentReference(this.selectedDocument.id, e.reference).pipe(take(1))] : []\r\n        // ];\r\n\r\n        // concat(...calls).subscribe(x => { });\r\n      },\r\n      onDismiss: (e: string) => { },\r\n      fields: [\r\n        ...(this.canRename) ? [{\r\n          type: 'input',\r\n          label: 'Name',\r\n          name: 'name',\r\n          placeholder: 'Enter document name',\r\n          value: this.selectedDocument.name,\r\n          validation: [\r\n            CustomValidators.required('Document name required'),\r\n          ]\r\n        } as FieldConfig] : [],\r\n        ...(this.canChangeReference) ? [{\r\n          type: 'input',\r\n          label: 'Reference',\r\n          name: 'reference',\r\n          placeholder: 'Enter document reference',\r\n          value: this.selectedDocument.reference,\r\n          validation: []\r\n        } as FieldConfig] : []\r\n      ]\r\n    }\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  // Open the workflow\r\n  openWorkflow() {\r\n    // this.service.getVersionWorkflow(this.selectedVersion.id).pipe(take(1)).subscribe(w => {\r\n    //   const config = {\r\n    //     workflowDefinition: w,\r\n    //     variantDetails: this.selectedVersion.variants || [],\r\n    //     roles: this.roles,\r\n    //     activateTransition: (transitionId: string, variantId: string, variants: { id: string, stepId: string }[], steps: WorkflowStep[]) => this.service.activateTransition(this.selectedVersion.id, transitionId, variants, steps, variantId),\r\n    //     resetWorkflow: () => this.service.resetWorkflow(this.selectedVersion.id),\r\n    //     canResetWorkflow: this.selectedVersion?.canResetWorkflow || false,\r\n    //     admin: true, //this.selectedVersion?.admin,\r\n    //     windowClass: this.selectedVersion.variants?.length ? 'modal-xxxl' : '',\r\n    //     onSubmit: () => { },\r\n    //     onDismiss: () => { }\r\n    //   };\r\n\r\n    //   this.dynamicFormService.popModal(WorkflowComponent, config);\r\n    // });\r\n  }\r\n\r\n  // Open the version manager\r\n  openVersionManager() {\r\n    // const config = {\r\n    //   versions: this.selectedDocument?.versions.map(v => ({ ...v, title: v.label })),\r\n    //   tickets: this.tickets,\r\n    //   getHistory: (id: string) => this.service.getVersionChangeHistory(id),\r\n    //   admin: this.selectedDocument?.admin,\r\n    //   multiWorkingCopies: true,\r\n    //   showComparison: true,\r\n    //   onSubmit: (e: { type: string, data: any }) => {\r\n    //     const s = {\r\n    //       'view': () => this.loadVersion(e.data.id),\r\n    //       'new': () => this.createNewVersion(),\r\n    //       'compare': () => this.compareVersions(e.data.versionId1, e.data.versionId2, false),\r\n    //     };\r\n    //     s[e.type]();\r\n    //   },\r\n    //   onDismiss: (e: string) => { }\r\n    // };\r\n\r\n    // this.dynamicFormService.popModal(VersionManagerComponent, config);\r\n  }\r\n\r\n  help() {\r\n    // this.service.getHelpText(this.helpInfoKey).pipe(take(1)).subscribe(doc => {\r\n    //   if (!doc) {\r\n    //     const config: NotificationConfig = {\r\n    //       headerText: 'Help Not Found',\r\n    //       submitText: 'Close',\r\n    //       hideCloseButton: true,\r\n    //       notifications: ['No help available at this time'],\r\n    //       onSubmit: () => { },\r\n    //       onDismiss: () => { }\r\n    //     };\r\n\r\n    //     this.dynamicFormService.popNotification(config);\r\n    //   } else {\r\n    //     const config = {\r\n    //       size: 'lg',\r\n    //       backdrop: 'static',\r\n    //       windowClass: 'modal-xxxl',\r\n    //       title: doc.title,\r\n    //       markdown: doc.content,\r\n    //       onSubmit: (e: string) => { },\r\n    //       onDismiss: (e: string) => { }\r\n    //     };\r\n\r\n    //     this.dynamicFormService.popModal(HelpViewerComponent, config);\r\n    //   }\r\n    // });\r\n  }\r\n  \r\n  // Open anomaly manager screen with anomaly details\r\n  openAnomaliesManager() {\r\n    const config = {\r\n      anomalies: this.anomalies,\r\n      windowClass: 'modal-xxl',\r\n      admin: true, //this.selectedVersion?.admin,\r\n      onSubmit: (e: { type: string, data: any }) => {\r\n        const s: any = {\r\n          'clean': () => this.doCleanAnomalies(),\r\n        };\r\n        s[e.type]();\r\n      },\r\n      onDismiss: (e: string) => { }\r\n    };\r\n\r\n    this.dynamicFormService.popModal(AnomaliesComponent, config);\r\n  }\r\n\r\n  // Emit event to clean anomalies\r\n  doCleanAnomalies() {\r\n    this.cleanAnomalies.emit();\r\n  }\r\n}\r\n",
            "styleUrl": "./version-page-template.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ticketService",
                        "type": "TicketService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 89,
                "jsdoctags": [
                    {
                        "name": "ticketService",
                        "type": "TicketService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dynamicFormService",
                        "type": "DynamicFormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<csps-page-template>\r\n\r\n  <ng-container header>\r\n    <ng-content select=\"[header]\"></ng-content>\r\n  </ng-container>\r\n\r\n  <ng-container toolbar>\r\n    <button type=\"button\" class=\"btn btn-sm btn-link\" placement=\"bottom\" ngbTooltip=\"Process Anomalies\" (click)=\"openAnomaliesManager()\" *ngIf=\"anomalies.length\">\r\n      <fa-icon class=\"text-danger pointer\" [icon]=\"faBroom\" [fixedWidth]=\"true\"></fa-icon>\r\n    </button>\r\n    <!-- <button *ngIf=\"!selectedVersion.released && (canRename || canChangeReference)\" type=\"button\" class=\"btn btn-sm btn-link\" placement=\"bottom\" ngbTooltip=\"Rename document\" (click)=\"openRenameDocument()\">\r\n      <fa-icon class=\"text-primary pointer\" [icon]=\"faPen\" [fixedWidth]=\"true\"></fa-icon>\r\n    </button> -->\r\n    <button type=\"button\" class=\"btn btn-sm btn-link\" placement=\"bottom\" ngbTooltip=\"Open Workflow\" (click)=\"openWorkflow()\">\r\n      <fa-icon class=\"text-primary pointer\" [icon]=\"faSitemap\" [fixedWidth]=\"true\"></fa-icon>\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-sm btn-link\" placement=\"bottom\" ngbTooltip=\"Manage Versions\" (click)=\"openVersionManager()\">\r\n      <fa-icon class=\"text-primary pointer\" [icon]=\"faCodeBranch\" [fixedWidth]=\"true\"></fa-icon>\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-sm btn-link\" placement=\"bottom\" ngbTooltip=\"Help\" (click)=\"help()\">\r\n      <fa-icon class=\"text-primary pointer\" [icon]=\"faQuestionCircle\" [fixedWidth]=\"true\"></fa-icon>\r\n    </button>\r\n    <ng-content select=\"[toolbar]\"></ng-content>\r\n  </ng-container>\r\n\r\n  <!-- <ng-container notifications>\r\n    <ngb-alert #readOnlyModeNotification type=\"danger\" class=\"py-2 px-3\">\r\n      <ng-content select=\"[notifications]\"></ng-content>\r\n    </ngb-alert>\r\n  </ng-container> -->\r\n\r\n  <ng-container body>\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </ng-container>\r\n\r\n  <ng-container footer>\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </ng-container>\r\n\r\n</csps-page-template>\r\n"
        },
        {
            "name": "WorkItemListComponent",
            "id": "component-WorkItemListComponent-43d002992df5010b43fb4fc910442d2986bfbc8770ff151eb67e1eba1673f026771d4b19db47507fd8c9b59650d51f0a0810491fb3c253e7b2a4a5332f28c7c5",
            "file": "projects/main/src/app/features/work/change-management/work-item-list/work-item-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-work-item-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./work-item-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[\r\n    { id: '1', label: 'Test' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSettings<WorkItem>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "PageWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "DataTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { DataTableComponent } from '../../../../shared/data-table/data-table.component';\r\nimport { DataTableSettings } from '../../../../shared/data-table/model/data-table-settings.model';\r\nimport { PageWrapperComponent } from '../../../../shared/page-wrapper/page-wrapper.component';\r\nimport { MenuItem } from '../../../../shared/side-bar/model/menu-item.model';\r\nimport { ChangeRequest } from '../shared/models/change-request.model';\r\nimport { WorkItem } from '../shared/models/work-item.model';\r\nimport { PLMService } from '../shared/plm.service';\r\n\r\n@Component({\r\n  selector: 'csps-work-item-list',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, PageWrapperComponent, DataTableComponent],\r\n  templateUrl: './work-item-list.component.html',\r\n  styleUrl: './work-item-list.component.scss'\r\n})\r\nexport class WorkItemListComponent {\r\n  menuItems: MenuItem[] = [\r\n    { id: '1', label: 'Test' }\r\n  ];\r\n\r\n  settings!: DataTableSettings<WorkItem>;\r\n\r\n  // Used for cleaning subscription \r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private plmService: PLMService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.plmService.workItems$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(x => {\r\n        this.settings = {\r\n          data: x.map(y => ({ ...y, link: faExternalLinkAlt })).sort((a, b) => a.Subject.SubjectName > b.Subject.SubjectName ? 1 : -1),\r\n          columnDefinitions: [\r\n            { id: '1', label: 'ID', name: 'ID', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '2', label: 'Description ', name: 'Description', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '3', label: 'Subject', name: 'Subject.SubjectName', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '4', label: 'Status', name: 'Status.Value', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '5', label: 'Created On', name: 'CreatedOn', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n            { id: '6', label: 'Link', name: 'link', type: 'icon', visible: true, searchable: false, filterMode: 'none', click: this.plmService.openChangeRequestInPLM.bind(this) },\r\n          ],\r\n          groupBy: [\r\n            {\r\n              property: 'Subject.SubjectName', orderBy: ['Subject.SubjectName'], columns: [\r\n                { name: 'Subject.SubjectName', type: 'text', alignment: 'left', colspan: 5 }\r\n              ]\r\n            }\r\n\r\n          ]\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./work-item-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "plmService",
                        "type": "PLMService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<csps-page-wrapper [menuItems]=\"menuItems\">\r\n\r\n  <span header>Change Requests</span>\r\n\r\n  <ng-container body>\r\n    <ul class=\"nav nav-tabs mb-3 submenu\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link cursor-pointer\" [routerLinkActive]=\"['active']\" [routerLink]=\"['./requests']\">\r\n          Change Requests\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link cursor-pointer\" [routerLinkActive]=\"['active']\" [routerLink]=\"['./notices']\">\r\n          Change Notices\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link cursor-pointer\">\r\n          Etc...\r\n        </a>\r\n      </li>\r\n    </ul>\r\n\r\n    <router-outlet></router-outlet>\r\n    <csps-data-table [settings]=\"settings\"></csps-data-table>\r\n  </ng-container>\r\n\r\n</csps-page-wrapper>\r\n"
        },
        {
            "name": "WorldMapComponent",
            "id": "component-WorldMapComponent-28ccf6b16076d6dac7c29e899fc336a1927b7f590393e5de0e7c26281a702d61f37d310ef40f9626d3d6870d9c2937fa77658b148709d8b939ebbaf3d1e898af",
            "file": "projects/main/src/app/shared/world-map/world-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "csps-world-map",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./world-map.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "coordinates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 1080,
                    "type": "WorldMapCoordinate[]",
                    "decorators": []
                },
                {
                    "name": "flows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 1083,
                    "type": "WorldMapFlow[]",
                    "decorators": []
                },
                {
                    "name": "locationMarkerSize",
                    "defaultValue": "7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 1077,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "selectedContinents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 1086,
                    "type": "Map<WorldMapContinent | literal type>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "arrows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 1100
                },
                {
                    "name": "locations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 1089
                },
                {
                    "name": "map",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 1075,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'map', {read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "Robinson",
                    "defaultValue": "function (mapWidth: number, mapHeight: number, fudgeX: number, fudgeY: number) {\r\n    // map width and height are asked for because they are what the\r\n    // earthRadius value relies upon. You can use either, as long as\r\n    // the image is sized such that width = height*1.97165551906973 \r\n    // you can use either to do the calculation, but as of now I\r\n    // require both and only use width. both are used in projectToCSS.\r\n    const earthRadius = (mapWidth / 2.666269758) / 2;\r\n\r\n    // fudgeX, fudgeY are used to offset points, this is to calibrate\r\n    // the points if they aren't showing up in the right place exactly \r\n    fudgeX = (typeof fudgeX === 'undefined') ? 0 : fudgeX;\r\n    fudgeY = (typeof fudgeY === 'undefined') ? 0 : fudgeY;\r\n\r\n    // these tables are created by robinson and are what the projection is based upon\r\n    const AA = [0.8487, 0.84751182, 0.84479598, 0.840213, 0.83359314, 0.8257851, 0.814752, 0.80006949, 0.78216192, 0.76060494, 0.73658673, 0.7086645, 0.67777182, 0.64475739, 0.60987582, 0.57134484, 0.52729731, 0.48562614, 0.45167814];\r\n    const BB = [0, 0.0838426, 0.1676852, 0.2515278, 0.3353704, 0.419213, 0.5030556, 0.5868982, 0.67182264, 0.75336633, 0.83518048, 0.91537187, 0.99339958, 1.06872269, 1.14066505, 1.20841528, 1.27035062, 1.31998003, 1.3523];\r\n\r\n\r\n    const project = function (lat: number, lng: number) {\r\n      // returns the robinson projected point for a given lat/lng based on\r\n      // the earth radius value determined in the contructor\r\n\r\n      var roundToNearest = function (roundTo: number, value: number) {\r\n        return Math.floor(value / roundTo) * roundTo;  //rounds down\r\n      };\r\n      var getSign = function (value: number) {\r\n        return value < 0 ? -1 : 1;\r\n      };\r\n\r\n      var lngSign = getSign(lng), latSign = getSign(lat); //deals with negatives\r\n      lng = Math.abs(lng); lat = Math.abs(lat); //all calculations positive\r\n      var radian = 0.017453293; //pi/180\r\n      var low = roundToNearest(5, lat - 0.0000000001); //want exact numbers to round down\r\n      low = (lat == 0) ? 0 : low; //except when at 0\r\n      var high = low + 5;\r\n\r\n      // indicies used for interpolation\r\n      var lowIndex = low / 5;\r\n      var highIndex = high / 5;\r\n      var ratio = (lat - low) / 5;\r\n\r\n      // interpolation in one dimension\r\n      var adjAA = ((AA[highIndex] - AA[lowIndex]) * ratio) + AA[lowIndex];\r\n      var adjBB = ((BB[highIndex] - BB[lowIndex]) * ratio) + BB[lowIndex];\r\n\r\n      //create point from robinson function\r\n      var point = {\r\n        x: (adjAA * lng * radian * lngSign * earthRadius) + fudgeX,\r\n        y: (adjBB * latSign * earthRadius) + fudgeY\r\n      };\r\n\r\n      return point;\r\n\r\n    };\r\n\r\n    return function (lat: number, lng: number): { x: number, y: number } {\r\n      // changes the coordinate system of a projected point to the one CSS uses\r\n      var point = project(lat, lng);\r\n      point.x = (point.x + (mapWidth / 2));\r\n      point.y = ((mapHeight / 2) - point.y);\r\n      return point;\r\n    };\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 1169
                },
                {
                    "name": "viewInitialized",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 1110,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "drawLocationsAndArrows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1127,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectCountries",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1155,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NgbTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, ViewChild } from '@angular/core';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WorldMapContinent } from './model/world-map-continent.model';\r\nimport { WorldMapCoordinate } from './model/world-map-coordinate.model';\r\nimport { WorldMapCountry } from './model/world-map-country.model';\r\nimport { WorldMapFlow } from './model/world-map-flow.model';\r\n\r\nconst COUNTRIES: { [key: string]: WorldMapCountry } = {\r\n  \"AF\": {\r\n    \"name\": \"Afghanistan\",\r\n    \"id\": \"AF\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"AO\": {\r\n    \"name\": \"Angola\",\r\n    \"id\": \"AO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"AL\": {\r\n    \"name\": \"Albania\",\r\n    \"id\": \"AL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AE\": {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"id\": \"AE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"AR\": {\r\n    \"name\": \"Argentina\",\r\n    \"id\": \"AR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AM\": {\r\n    \"name\": \"Armenia\",\r\n    \"id\": \"AM\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"AU\": {\r\n    \"name\": \"Australia\",\r\n    \"id\": \"AU\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"AT\": {\r\n    \"name\": \"Austria\",\r\n    \"id\": \"AT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AZ\": {\r\n    \"name\": \"Azerbaijan\",\r\n    \"id\": \"AZ\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"BI\": {\r\n    \"name\": \"Burundi\",\r\n    \"id\": \"BI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BE\": {\r\n    \"name\": \"Belgium\",\r\n    \"id\": \"BE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BJ\": {\r\n    \"name\": \"Benin\",\r\n    \"id\": \"BJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BF\": {\r\n    \"name\": \"Burkina Faso\",\r\n    \"id\": \"BF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BD\": {\r\n    \"name\": \"Bangladesh\",\r\n    \"id\": \"BD\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BG\": {\r\n    \"name\": \"Bulgaria\",\r\n    \"id\": \"BG\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BA\": {\r\n    \"name\": \"Bosnia and Herz.\",\r\n    \"id\": \"BA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BY\": {\r\n    \"name\": \"Belarus\",\r\n    \"id\": \"BY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BZ\": {\r\n    \"name\": \"Belize\",\r\n    \"id\": \"BZ\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BO\": {\r\n    \"name\": \"Bolivia\",\r\n    \"id\": \"BO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BR\": {\r\n    \"name\": \"Brazil\",\r\n    \"id\": \"BR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BN\": {\r\n    \"name\": \"Brunei\",\r\n    \"id\": \"BN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BT\": {\r\n    \"name\": \"Bhutan\",\r\n    \"id\": \"BT\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BW\": {\r\n    \"name\": \"Botswana\",\r\n    \"id\": \"BW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CF\": {\r\n    \"name\": \"Central African Rep.\",\r\n    \"id\": \"CF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CA\": {\r\n    \"name\": \"Canada\",\r\n    \"id\": \"CA\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  \"CH\": {\r\n    \"name\": \"Switzerland\",\r\n    \"id\": \"CH\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"CL\": {\r\n    \"name\": \"Chile\",\r\n    \"id\": \"CL\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CN\": {\r\n    \"name\": \"China\",\r\n    \"id\": \"CN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"CI\": {\r\n    \"name\": \"Côte d'Ivoire\",\r\n    \"id\": \"CI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CM\": {\r\n    \"name\": \"Cameroon\",\r\n    \"id\": \"CM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CD\": {\r\n    \"name\": \"Dem. Rep. Congo\",\r\n    \"id\": \"CD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CG\": {\r\n    \"name\": \"Congo\",\r\n    \"id\": \"CG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CO\": {\r\n    \"name\": \"Colombia\",\r\n    \"id\": \"CO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CR\": {\r\n    \"name\": \"Costa Rica\",\r\n    \"id\": \"CR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CU\": {\r\n    \"name\": \"Cuba\",\r\n    \"id\": \"CU\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CZ\": {\r\n    \"name\": \"Czech Rep.\",\r\n    \"id\": \"CZ\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DE\": {\r\n    \"name\": \"Germany\",\r\n    \"id\": \"DE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DJ\": {\r\n    \"name\": \"Djibouti\",\r\n    \"id\": \"DJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"DK\": {\r\n    \"name\": \"Denmark\",\r\n    \"id\": \"DK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DO\": {\r\n    \"name\": \"Dominican Rep.\",\r\n    \"id\": \"DO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"DZ\": {\r\n    \"name\": \"Algeria\",\r\n    \"id\": \"DZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EC\": {\r\n    \"name\": \"Ecuador\",\r\n    \"id\": \"EC\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"EG\": {\r\n    \"name\": \"Egypt\",\r\n    \"id\": \"EG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ER\": {\r\n    \"name\": \"Eritrea\",\r\n    \"id\": \"ER\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EE\": {\r\n    \"name\": \"Estonia\",\r\n    \"id\": \"EE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ET\": {\r\n    \"name\": \"Ethiopia\",\r\n    \"id\": \"ET\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"FI\": {\r\n    \"name\": \"Finland\",\r\n    \"id\": \"FI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"FJ\": {\r\n    \"name\": \"Fiji\",\r\n    \"id\": \"FJ\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"GA\": {\r\n    \"name\": \"Gabon\",\r\n    \"id\": \"GA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GB\": {\r\n    \"name\": \"United Kingdom\",\r\n    \"id\": \"GB\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GE\": {\r\n    \"name\": \"Georgia\",\r\n    \"id\": \"GE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"GH\": {\r\n    \"name\": \"Ghana\",\r\n    \"id\": \"GH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GN\": {\r\n    \"name\": \"Guinea\",\r\n    \"id\": \"GN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GM\": {\r\n    \"name\": \"Gambia\",\r\n    \"id\": \"GM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GW\": {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"id\": \"GW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GQ\": {\r\n    \"name\": \"Eq. Guinea\",\r\n    \"id\": \"GQ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GR\": {\r\n    \"name\": \"Greece\",\r\n    \"id\": \"GR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GL\": {\r\n    \"name\": \"Greenland\",\r\n    \"id\": \"GL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GT\": {\r\n    \"name\": \"Guatemala\",\r\n    \"id\": \"GT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GY\": {\r\n    \"name\": \"Guyana\",\r\n    \"id\": \"GY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HN\": {\r\n    \"name\": \"Honduras\",\r\n    \"id\": \"HN\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HR\": {\r\n    \"name\": \"Croatia\",\r\n    \"id\": \"HR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"HT\": {\r\n    \"name\": \"Haiti\",\r\n    \"id\": \"HT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HU\": {\r\n    \"name\": \"Hungary\",\r\n    \"id\": \"HU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ID\": {\r\n    \"name\": \"Indonesia\",\r\n    \"id\": \"ID\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"IN\": {\r\n    \"name\": \"India\",\r\n    \"id\": \"IN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"IE\": {\r\n    \"name\": \"Ireland\",\r\n    \"id\": \"IE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"IR\": {\r\n    \"name\": \"Iran\",\r\n    \"id\": \"IR\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IQ\": {\r\n    \"name\": \"Iraq\",\r\n    \"id\": \"IQ\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IS\": {\r\n    \"name\": \"Iceland\",\r\n    \"id\": \"IS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"IL\": {\r\n    \"name\": \"Israel\",\r\n    \"id\": \"IL\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IT\": {\r\n    \"name\": \"Italy\",\r\n    \"id\": \"IT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"JM\": {\r\n    \"name\": \"Jamaica\",\r\n    \"id\": \"JM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"JO\": {\r\n    \"name\": \"Jordan\",\r\n    \"id\": \"JO\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"JP\": {\r\n    \"name\": \"Japan\",\r\n    \"id\": \"JP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KZ\": {\r\n    \"name\": \"Kazakhstan\",\r\n    \"id\": \"KZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KE\": {\r\n    \"name\": \"Kenya\",\r\n    \"id\": \"KE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"KG\": {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"id\": \"KG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KH\": {\r\n    \"name\": \"Cambodia\",\r\n    \"id\": \"KH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KR\": {\r\n    \"name\": \"Korea\",\r\n    \"id\": \"KR\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KW\": {\r\n    \"name\": \"Kuwait\",\r\n    \"id\": \"KW\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"LA\": {\r\n    \"name\": \"Lao PDR\",\r\n    \"id\": \"LA\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"LB\": {\r\n    \"name\": \"Lebanon\",\r\n    \"id\": \"LB\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"LR\": {\r\n    \"name\": \"Liberia\",\r\n    \"id\": \"LR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LY\": {\r\n    \"name\": \"Libya\",\r\n    \"id\": \"LY\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LK\": {\r\n    \"name\": \"Sri Lanka\",\r\n    \"id\": \"LK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"LS\": {\r\n    \"name\": \"Lesotho\",\r\n    \"id\": \"LS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LT\": {\r\n    \"name\": \"Lithuania\",\r\n    \"id\": \"LT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"LU\": {\r\n    \"name\": \"Luxembourg\",\r\n    \"id\": \"LU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"LV\": {\r\n    \"name\": \"Latvia\",\r\n    \"id\": \"LV\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MA\": {\r\n    \"name\": \"Morocco\",\r\n    \"id\": \"MA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MD\": {\r\n    \"name\": \"Moldova\",\r\n    \"id\": \"MD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MG\": {\r\n    \"name\": \"Madagascar\",\r\n    \"id\": \"MG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MX\": {\r\n    \"name\": \"Mexico\",\r\n    \"id\": \"MX\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"MK\": {\r\n    \"name\": \"Macedonia\",\r\n    \"id\": \"MK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ML\": {\r\n    \"name\": \"Mali\",\r\n    \"id\": \"ML\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MM\": {\r\n    \"name\": \"Myanmar\",\r\n    \"id\": \"MM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"ME\": {\r\n    \"name\": \"Montenegro\",\r\n    \"id\": \"ME\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MN\": {\r\n    \"name\": \"Mongolia\",\r\n    \"id\": \"MN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"MZ\": {\r\n    \"name\": \"Mozambique\",\r\n    \"id\": \"MZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MR\": {\r\n    \"name\": \"Mauritania\",\r\n    \"id\": \"MR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MW\": {\r\n    \"name\": \"Malawi\",\r\n    \"id\": \"MW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MY\": {\r\n    \"name\": \"Malaysia\",\r\n    \"id\": \"MY\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"NA\": {\r\n    \"name\": \"Namibia\",\r\n    \"id\": \"NA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NE\": {\r\n    \"name\": \"Niger\",\r\n    \"id\": \"NE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NG\": {\r\n    \"name\": \"Nigeria\",\r\n    \"id\": \"NG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NI\": {\r\n    \"name\": \"Nicaragua\",\r\n    \"id\": \"NI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"NL\": {\r\n    \"name\": \"Netherlands\",\r\n    \"id\": \"NL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"NO\": {\r\n    \"name\": \"Norway\",\r\n    \"id\": \"NO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"NP\": {\r\n    \"name\": \"Nepal\",\r\n    \"id\": \"NP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"NZ\": {\r\n    \"name\": \"New Zealand\",\r\n    \"id\": \"NZ\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"OM\": {\r\n    \"name\": \"Oman\",\r\n    \"id\": \"OM\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"PK\": {\r\n    \"name\": \"Pakistan\",\r\n    \"id\": \"PK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PA\": {\r\n    \"name\": \"Panama\",\r\n    \"id\": \"PA\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PE\": {\r\n    \"name\": \"Peru\",\r\n    \"id\": \"PE\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PH\": {\r\n    \"name\": \"Philippines\",\r\n    \"id\": \"PH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PG\": {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"id\": \"PG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PL\": {\r\n    \"name\": \"Poland\",\r\n    \"id\": \"PL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"KP\": {\r\n    \"name\": \"Dem. Rep. Korea\",\r\n    \"id\": \"KP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PT\": {\r\n    \"name\": \"Portugal\",\r\n    \"id\": \"PT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"PY\": {\r\n    \"name\": \"Paraguay\",\r\n    \"id\": \"PY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PS\": {\r\n    \"name\": \"Palestine\",\r\n    \"id\": \"PS\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"QA\": {\r\n    \"name\": \"Qatar\",\r\n    \"id\": \"QA\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"RO\": {\r\n    \"name\": \"Romania\",\r\n    \"id\": \"RO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RU\": {\r\n    \"name\": \"Russia\",\r\n    \"id\": \"RU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RW\": {\r\n    \"name\": \"Rwanda\",\r\n    \"id\": \"RW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EH\": {\r\n    \"name\": \"W. Sahara\",\r\n    \"id\": \"EH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SA\": {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"id\": \"SA\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"SD\": {\r\n    \"name\": \"Sudan\",\r\n    \"id\": \"SD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SS\": {\r\n    \"name\": \"S. Sudan\",\r\n    \"id\": \"SS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SN\": {\r\n    \"name\": \"Senegal\",\r\n    \"id\": \"SN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SL\": {\r\n    \"name\": \"Sierra Leone\",\r\n    \"id\": \"SL\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SV\": {\r\n    \"name\": \"El Salvador\",\r\n    \"id\": \"SV\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"RS\": {\r\n    \"name\": \"Serbia\",\r\n    \"id\": \"RS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SR\": {\r\n    \"name\": \"Suriname\",\r\n    \"id\": \"SR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SK\": {\r\n    \"name\": \"Slovakia\",\r\n    \"id\": \"SK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SI\": {\r\n    \"name\": \"Slovenia\",\r\n    \"id\": \"SI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SE\": {\r\n    \"name\": \"Sweden\",\r\n    \"id\": \"SE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SZ\": {\r\n    \"name\": \"Swaziland\",\r\n    \"id\": \"SZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SY\": {\r\n    \"name\": \"Syria\",\r\n    \"id\": \"SY\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"TD\": {\r\n    \"name\": \"Chad\",\r\n    \"id\": \"TD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TG\": {\r\n    \"name\": \"Togo\",\r\n    \"id\": \"TG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TH\": {\r\n    \"name\": \"Thailand\",\r\n    \"id\": \"TH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TJ\": {\r\n    \"name\": \"Tajikistan\",\r\n    \"id\": \"TJ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TM\": {\r\n    \"name\": \"Turkmenistan\",\r\n    \"id\": \"TM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TL\": {\r\n    \"name\": \"Timor-Leste\",\r\n    \"id\": \"TL\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TN\": {\r\n    \"name\": \"Tunisia\",\r\n    \"id\": \"TN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TR\": {\r\n    \"name\": \"Turkey\",\r\n    \"id\": \"TR\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"TW\": {\r\n    \"name\": \"Taiwan\",\r\n    \"id\": \"TW\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TZ\": {\r\n    \"name\": \"Tanzania\",\r\n    \"id\": \"TZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"UG\": {\r\n    \"name\": \"Uganda\",\r\n    \"id\": \"UG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"UA\": {\r\n    \"name\": \"Ukraine\",\r\n    \"id\": \"UA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"UY\": {\r\n    \"name\": \"Uruguay\",\r\n    \"id\": \"UY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"US\": {\r\n    \"name\": \"United States\",\r\n    \"id\": \"US\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  \"UZ\": {\r\n    \"name\": \"Uzbekistan\",\r\n    \"id\": \"UZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"VE\": {\r\n    \"name\": \"Venezuela\",\r\n    \"id\": \"VE\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VN\": {\r\n    \"name\": \"Vietnam\",\r\n    \"id\": \"VN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"VU\": {\r\n    \"name\": \"Vanuatu\",\r\n    \"id\": \"VU\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"YE\": {\r\n    \"name\": \"Yemen\",\r\n    \"id\": \"YE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"ZA\": {\r\n    \"name\": \"South Africa\",\r\n    \"id\": \"ZA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ZM\": {\r\n    \"name\": \"Zambia\",\r\n    \"id\": \"ZM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ZW\": {\r\n    \"name\": \"Zimbabwe\",\r\n    \"id\": \"ZW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SO\": {\r\n    \"name\": \"Somalia\",\r\n    \"id\": \"SO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GF\": {\r\n    \"name\": \"French Guiana\",\r\n    \"id\": \"GF\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FR\": {\r\n    \"name\": \"France\",\r\n    \"id\": \"FR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ES\": {\r\n    \"name\": \"Spain\",\r\n    \"id\": \"ES\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AW\": {\r\n    \"name\": \"Aruba\",\r\n    \"id\": \"AW\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AI\": {\r\n    \"name\": \"Anguilla\",\r\n    \"id\": \"AI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AD\": {\r\n    \"name\": \"Andorra\",\r\n    \"id\": \"AD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AG\": {\r\n    \"name\": \"Antigua and Barb.\",\r\n    \"id\": \"AG\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BS\": {\r\n    \"name\": \"Bahamas\",\r\n    \"id\": \"BS\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BM\": {\r\n    \"name\": \"Bermuda\",\r\n    \"id\": \"BM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BB\": {\r\n    \"name\": \"Barbados\",\r\n    \"id\": \"BB\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"KM\": {\r\n    \"name\": \"Comoros\",\r\n    \"id\": \"KM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CV\": {\r\n    \"name\": \"Cape Verde\",\r\n    \"id\": \"CV\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"KY\": {\r\n    \"name\": \"Cayman Is.\",\r\n    \"id\": \"KY\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"DM\": {\r\n    \"name\": \"Dominica\",\r\n    \"id\": \"DM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FK\": {\r\n    \"name\": \"Falkland Is.\",\r\n    \"id\": \"FK\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FO\": {\r\n    \"name\": \"Faeroe Is.\",\r\n    \"id\": \"FO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GD\": {\r\n    \"name\": \"Grenada\",\r\n    \"id\": \"GD\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HK\": {\r\n    \"name\": \"Hong Kong\",\r\n    \"id\": \"HK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KN\": {\r\n    \"name\": \"St. Kitts and Nevis\",\r\n    \"id\": \"KN\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"LC\": {\r\n    \"name\": \"Saint Lucia\",\r\n    \"id\": \"LC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"LI\": {\r\n    \"name\": \"Liechtenstein\",\r\n    \"id\": \"LI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MV\": {\r\n    \"name\": \"Maldives\",\r\n    \"id\": \"MV\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"MT\": {\r\n    \"name\": \"Malta\",\r\n    \"id\": \"MT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MS\": {\r\n    \"name\": \"Montserrat\",\r\n    \"id\": \"MS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MU\": {\r\n    \"name\": \"Mauritius\",\r\n    \"id\": \"MU\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NC\": {\r\n    \"name\": \"New Caledonia\",\r\n    \"id\": \"NC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"NR\": {\r\n    \"name\": \"Nauru\",\r\n    \"id\": \"NR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PN\": {\r\n    \"name\": \"Pitcairn Is.\",\r\n    \"id\": \"PN\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PR\": {\r\n    \"name\": \"Puerto Rico\",\r\n    \"id\": \"PR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PF\": {\r\n    \"name\": \"Fr. Polynesia\",\r\n    \"id\": \"PF\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"SG\": {\r\n    \"name\": \"Singapore\",\r\n    \"id\": \"SG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"SB\": {\r\n    \"name\": \"Solomon Is.\",\r\n    \"id\": \"SB\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"ST\": {\r\n    \"name\": \"São Tomé and Principe\",\r\n    \"id\": \"ST\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SX\": {\r\n    \"name\": \"Sint Maarten\",\r\n    \"id\": \"SX\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SC\": {\r\n    \"name\": \"Seychelles\",\r\n    \"id\": \"SC\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TC\": {\r\n    \"name\": \"Turks and Caicos Is.\",\r\n    \"id\": \"TC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"TO\": {\r\n    \"name\": \"Tonga\",\r\n    \"id\": \"TO\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"TT\": {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"id\": \"TT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VC\": {\r\n    \"name\": \"St. Vin. and Gren.\",\r\n    \"id\": \"VC\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VG\": {\r\n    \"name\": \"British Virgin Is.\",\r\n    \"id\": \"VG\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VI\": {\r\n    \"name\": \"U.S. Virgin Is.\",\r\n    \"id\": \"VI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CY\": {\r\n    \"name\": \"Cyprus\",\r\n    \"id\": \"CY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RE\": {\r\n    \"name\": \"Reunion\",\r\n    \"id\": \"RE\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"YT\": {\r\n    \"name\": \"Mayotte\",\r\n    \"id\": \"YT\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"MQ\": {\r\n    \"name\": \"Martinique\",\r\n    \"id\": \"MQ\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GP\": {\r\n    \"name\": \"Guadeloupe\",\r\n    \"id\": \"GP\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CW\": {\r\n    \"name\": \"Curaco\",\r\n    \"id\": \"CW\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"IC\": {\r\n    \"name\": \"Canary Islands\",\r\n    \"id\": \"IC\",\r\n    \"continent\": \"Africa\"\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'csps-world-map',\r\n  standalone: true,\r\n  imports: [CommonModule, NgbTooltipModule],\r\n  templateUrl: './world-map.component.html',\r\n  styleUrl: './world-map.component.scss'\r\n})\r\nexport class WorldMapComponent implements OnChanges, AfterViewInit {\r\n  @ViewChild('map', { read: ElementRef }) map!: ElementRef;\r\n\r\n  @Input() locationMarkerSize: number = 7;\r\n\r\n  // The coordinates for the points to show on the map\r\n  @Input() coordinates!: WorldMapCoordinate[];\r\n\r\n  // The flows to show on the map\r\n  @Input() flows!: WorldMapFlow[];\r\n\r\n  // The selected regions\r\n  @Input() selectedContinents!: Map<WorldMapContinent, { color: string }>;\r\n\r\n  // The computed locations for the points to show on the map\r\n  locations!: {\r\n    point: { x: number, y: number },\r\n    id: string,\r\n    city: string,\r\n    lat: number,\r\n    long: number,\r\n    color: string,\r\n    click: (loc: any) => void\r\n  }[];\r\n\r\n  // The computed coordinates for the arrows to show on the map\r\n  arrows!: {\r\n    from: { x: number, y: number },\r\n    to: { x: number, y: number },\r\n    id: string,\r\n    sourceId: string,\r\n    destinationId: string,\r\n    color: string,\r\n    click: (arr: any) => void\r\n  }[];\r\n\r\n  private viewInitialized: boolean = false;\r\n\r\n  constructor(private elRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.drawLocationsAndArrows();\r\n    this.selectCountries();\r\n    this.viewInitialized = true;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.viewInitialized) {\r\n      this.drawLocationsAndArrows();\r\n      this.selectCountries();\r\n    }\r\n  }\r\n\r\n  drawLocationsAndArrows() {\r\n    const mapWidth = 2000;\r\n    const mapHeight = 1001;\r\n    //const fx = -33;\r\n    //const fy = -59;\r\n\r\n    const fx = -26;\r\n    const fy = -66;\r\n\r\n    if (this.coordinates?.length)\r\n      this.locations = this.coordinates.map(x => ({\r\n        ...x,\r\n        point: this.Robinson(mapWidth, mapHeight, fx, fy)(x.lat, x.long)\r\n      }));\r\n\r\n    if (this.flows?.length)\r\n      this.arrows = this.flows.map(x => {\r\n        const fromLocation = this.locations.find(y => y.id === x.sourceId);\r\n        const toLocation = this.locations.find(y => y.id === x.destinationId);\r\n\r\n        return {\r\n          ...x,\r\n          from: fromLocation !== undefined ? { x: fromLocation.point.x, y: fromLocation.point.y } : { x: 0, y: 0 },\r\n          to: toLocation !== undefined ? { x: toLocation.point.x, y: toLocation.point.y } : { x: 0, y: 0 }\r\n        };\r\n      });\r\n  }\r\n\r\n  selectCountries(): void {\r\n    Object.values(COUNTRIES)\r\n      .forEach(c => {\r\n        const cont = this.selectedContinents?.get(c.continent);\r\n        if (cont)\r\n          this.map.nativeElement.querySelector('#' + c.id)?.setAttribute('fill', cont.color)\r\n        else\r\n          this.map.nativeElement.querySelector('#' + c.id)?.setAttribute('fill', '#f2f2f2')\r\n      });\r\n  }\r\n\r\n  // Map is a Robinson projection\r\n  // Need to convert longitude and lattitude into coordinates\r\n\r\n  Robinson = function (mapWidth: number, mapHeight: number, fudgeX: number, fudgeY: number) {\r\n    // map width and height are asked for because they are what the\r\n    // earthRadius value relies upon. You can use either, as long as\r\n    // the image is sized such that width = height*1.97165551906973 \r\n    // you can use either to do the calculation, but as of now I\r\n    // require both and only use width. both are used in projectToCSS.\r\n    const earthRadius = (mapWidth / 2.666269758) / 2;\r\n\r\n    // fudgeX, fudgeY are used to offset points, this is to calibrate\r\n    // the points if they aren't showing up in the right place exactly \r\n    fudgeX = (typeof fudgeX === 'undefined') ? 0 : fudgeX;\r\n    fudgeY = (typeof fudgeY === 'undefined') ? 0 : fudgeY;\r\n\r\n    // these tables are created by robinson and are what the projection is based upon\r\n    const AA = [0.8487, 0.84751182, 0.84479598, 0.840213, 0.83359314, 0.8257851, 0.814752, 0.80006949, 0.78216192, 0.76060494, 0.73658673, 0.7086645, 0.67777182, 0.64475739, 0.60987582, 0.57134484, 0.52729731, 0.48562614, 0.45167814];\r\n    const BB = [0, 0.0838426, 0.1676852, 0.2515278, 0.3353704, 0.419213, 0.5030556, 0.5868982, 0.67182264, 0.75336633, 0.83518048, 0.91537187, 0.99339958, 1.06872269, 1.14066505, 1.20841528, 1.27035062, 1.31998003, 1.3523];\r\n\r\n\r\n    const project = function (lat: number, lng: number) {\r\n      // returns the robinson projected point for a given lat/lng based on\r\n      // the earth radius value determined in the contructor\r\n\r\n      var roundToNearest = function (roundTo: number, value: number) {\r\n        return Math.floor(value / roundTo) * roundTo;  //rounds down\r\n      };\r\n      var getSign = function (value: number) {\r\n        return value < 0 ? -1 : 1;\r\n      };\r\n\r\n      var lngSign = getSign(lng), latSign = getSign(lat); //deals with negatives\r\n      lng = Math.abs(lng); lat = Math.abs(lat); //all calculations positive\r\n      var radian = 0.017453293; //pi/180\r\n      var low = roundToNearest(5, lat - 0.0000000001); //want exact numbers to round down\r\n      low = (lat == 0) ? 0 : low; //except when at 0\r\n      var high = low + 5;\r\n\r\n      // indicies used for interpolation\r\n      var lowIndex = low / 5;\r\n      var highIndex = high / 5;\r\n      var ratio = (lat - low) / 5;\r\n\r\n      // interpolation in one dimension\r\n      var adjAA = ((AA[highIndex] - AA[lowIndex]) * ratio) + AA[lowIndex];\r\n      var adjBB = ((BB[highIndex] - BB[lowIndex]) * ratio) + BB[lowIndex];\r\n\r\n      //create point from robinson function\r\n      var point = {\r\n        x: (adjAA * lng * radian * lngSign * earthRadius) + fudgeX,\r\n        y: (adjBB * latSign * earthRadius) + fudgeY\r\n      };\r\n\r\n      return point;\r\n\r\n    };\r\n\r\n    return function (lat: number, lng: number): { x: number, y: number } {\r\n      // changes the coordinate system of a projected point to the one CSS uses\r\n      var point = project(lat, lng);\r\n      point.x = (point.x + (mapWidth / 2));\r\n      point.y = ((mapHeight / 2) - point.y);\r\n      return point;\r\n    };\r\n  };\r\n}\r\n",
            "styleUrl": "./world-map.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1110,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div #map class=\"map-container\">\r\n  <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n       xmlns:cc=\"http://creativecommons.org/ns#\"\r\n       xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n       xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n       xmlns=\"http://www.w3.org/2000/svg\"\r\n       xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n       xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n       enable_background=\"new 0 0 2000 1001\"\r\n       pretty_print=\"False\"\r\n       style=\"stroke-linejoin: round; stroke:#000; fill: none;top:0;left:0;width:100%;height:100%;\"\r\n       version=\"1.1\"\r\n       viewBox=\"0 0 2000 1001\"\r\n       id=\"svg2\"\r\n       inkscape:version=\"0.48.4 r9939\"\r\n       sodipodi:docname=\"world.svg\">\r\n    <!--<sodipodi:namedview pagecolor=\"#ffffff\"\r\n    bordercolor=\"#666666\"\r\n    borderopacity=\"1\"\r\n    objecttolerance=\"10\"\r\n    gridtolerance=\"10\"\r\n    guidetolerance=\"10\"\r\n    inkscape:pageopacity=\"0\"\r\n    inkscape:pageshadow=\"2\"\r\n    inkscape:window-width=\"1920\"\r\n    inkscape:window-height=\"1137\"\r\n    id=\"namedview231\"\r\n    showgrid=\"false\"\r\n    inkscape:zoom=\"1.144\"\r\n    inkscape:cx=\"593.00732\"\r\n    inkscape:cy=\"460.46398\"\r\n    inkscape:window-x=\"1192\"\r\n    inkscape:window-y=\"118\"\r\n    inkscape:window-maximized=\"1\"\r\n    inkscape:current-layer=\"svg2\" />-->\r\n    <defs id=\"defs4\">\r\n      <style type=\"text/css\"\r\n             id=\"style6\">\r\n        path {\r\n          fill-rule: evenodd;\r\n        }\r\n      </style>\r\n    </defs>\r\n    <!--<metadata id=\"metadata8\">\r\n      <views id=\"views10\">\r\n        <view h=\"1001\"\r\n              padding=\"0\"\r\n              w=\"2000\"\r\n              id=\"view12\">\r\n          <proj flip=\"auto\"\r\n                id=\"robinson\"\r\n                lon0=\"100.0\" />\r\n          <bbox h=\"2233.1\"\r\n                w=\"5271.17\"\r\n                x=\"-2635.59\"\r\n                y=\"-1308.06\"\r\n                id=\"bbox15\" />\r\n        </view>\r\n      </views>\r\n      <rdf:RDF>\r\n        <cc:Work rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>-->\r\n\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AF\"\r\n              data-name=\"Afghanistan\"\r\n              data-id=\"AF\"\r\n              d=\"m 1369.9,333.8 -5.4,0 -3.8,-0.5 -2.5,2.9 -2.1,0.7 -1.5,1.3 -2.6,-2.1 -1,-5.4 -1.6,-0.3 0,-2 -3.2,-1.5 -1.7,2.3 0.2,2.6 -0.6,0.9 -3.2,-0.1 -0.9,3 -2.1,-1.3 -3.3,2.1 -1.8,-0.8 -4.3,-1.4 -2.9,0 -1.6,-0.2 -2.9,-1.7 -0.3,2.3 -4.1,1.2 0.1,5.2 -2.5,2 -4,0.9 -0.4,3 -3.9,0.8 -5.9,-2.4 -0.5,8 -0.5,4.7 2.5,0.9 -1.6,3.5 2.7,5.1 1.1,4 4.3,1.1 1.1,4 -3.9,5.8 9.6,3.2 5.3,-0.9 3.3,0.8 0.9,-1.4 3.8,0.5 6.6,-2.6 -0.8,-5.4 2.3,-3.6 4,0 0.2,-1.7 4,-0.9 2.1,0.6 1.7,-1.8 -1.1,-3.8 1.5,-3.8 3,-1.6 -3,-4.2 5.1,0.2 0.9,-2.3 -0.8,-2.5 2,-2.7 -1.4,-3.2 -1.9,-2.8 2.4,-2.8 5.3,-1.3 5.8,-0.8 2.4,-1.2 2.8,-0.7 -1.4,-1.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AO\"\r\n              data-name=\"Angola\"\r\n              data-id=\"AO\"\r\n              d=\"m 1068.3,609.6 -16.6,-0.1 -1.9,0.7 -1.7,-0.1 -2.3,0.9 -0.5,1.2 2.8,4 1.1,4.3 1.6,6.1 -1.7,2.6 -0.3,1.3 1.3,3.8 1.5,3.9 1.6,2.2 0.3,3.6 -0.7,4.8 -1.8,2.8 -3.3,4.2 -1.3,2.6 -1.9,5.7 -0.3,2.7 -2,5.9 -0.9,5.5 0.5,4 2.7,-1.2 3.3,-1 3.6,0.1 3.2,2.9 0.9,-0.4 22.5,-0.3 3.7,3 13.4,0.9 10.3,-2.5 -3.5,-4 -3.6,-5.2 0.8,-20.3 11.6,0.1 -0.5,-2.2 0.9,-2.4 -0.9,-3 0.7,-3 -0.5,-2 -2.6,-0.4 -3.5,1 -2.4,-0.2 -1.4,0.6 0.5,-7.6 -1.9,-2.3 -0.3,-4 0.9,-3.8 -1.2,-2.4 0,-4 -6.8,0 0.5,-2.3 -2.9,0 -0.3,1.1 -3.4,0.3 -1.5,3.7 -0.9,1.6 -3,-0.9 -1.9,0.9 -3.7,0.5 -2.1,-3.3 -1.3,-2.1 -1.6,-3.8 -1.3,-4.7 z m -21.8,-1.3 0.2,-2.7 0.9,-1.7 2,-1.3 -2,-2.2 -1.8,1.1 -2.2,2.7 1.4,4.8 1.5,-0.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AL\"\r\n              data-name=\"Albania\"\r\n              data-id=\"AL\"\r\n              d=\"m 1077.5,300.5 -2,3.1 0.5,1.9 0,0 1,1 -0.5,1.9 -0.1,4.3 0.7,3 3,2.1 0.2,1.4 1,0.4 2.1,-3 0.1,-2.1 1.6,-0.9 0,-1.6 -2.3,-1.6 -0.9,-2.6 0.4,-2.1 0,0 -0.5,-2.3 -1.3,-0.6 -1.3,-1.6 -1.3,0.5 -0.4,-1.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AE\"\r\n              data-name=\"United Arab Emirates\"\r\n              data-id=\"AE\"\r\n              d=\"m 1283.9,408.6 -1.3,-2.2 -3,3.9 -3.7,4.1 -3.3,4.3 -3.3,-0.2 -4.6,-0.2 -4.2,1 -0.3,-1.7 -1,0.3 0.4,1.5 2.6,6.4 16.8,3.2 1,-1.3 -0.1,-2.6 1.4,-2.6 -0.3,-2.6 2.4,-1.3 -1.1,-0.8 0.1,-4.2 2.8,0 -1.3,-5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AR\"\r\n              data-name=\"Argentina\"\r\n              data-id=\"AR\"\r\n              d=\"m 669.8,920.7 0.9,-3 -7.3,-1.5 -7.7,-3.6 -4.3,-4.6 -3,-2.8 5.9,13.5 5,0 2.9,0.2 3.3,2.1 4.3,-0.3 z m -50.4,-208.1 -7.4,-1.5 -4,5.7 0.9,1.6 -1.1,6.6 -5.6,3.2 1.6,10.6 -0.9,2 2,2.5 -3.2,4 -2.6,5.9 -0.9,5.8 1.7,6.2 -2.1,6.5 4.9,10.9 1.6,1.2 1.3,5.9 -1.6,6.2 1.4,5.4 -2.9,4.3 1.5,5.9 3.3,6.3 -2.5,2.4 0.3,5.7 0.7,6.4 3.3,7.6 -1.6,1.2 3.6,7.1 3.1,2.3 -0.8,2.6 2.8,1.3 1.3,2.3 -1.8,1.1 1.8,3.7 1.1,8.2 -0.7,5.3 1.8,3.2 -0.1,3.9 -2.7,2.7 3.1,6.6 2.6,2.2 3.1,-0.4 1.8,4.6 3.5,3.6 12,0.8 4.8,0.9 2.2,0.4 -4.7,-3.6 -4.1,-6.3 0.9,-2.9 3.5,-2.5 0.5,-7.2 4.7,-3.5 -0.2,-5.6 -5.2,-1.3 -6.4,-4.5 -0.1,-4.7 2.9,-3.1 4.7,-0.1 0.2,-3.3 -1.2,-6.1 2.9,-3.9 4.1,-1.9 -2.5,-3.2 -2.2,2 -4,-1.9 -2.5,-6.2 1.5,-1.6 5.6,2.3 5,-0.9 2.5,-2.2 -1.8,-3.1 -0.1,-4.8 -2,-3.8 5.8,0.6 10.2,-1.3 6.9,-3.4 3.3,-8.3 -0.3,-3.2 -3.9,-2.8 -0.1,-4.5 -7.8,-5.5 -0.3,-3.3 -0.4,-4.2 0.9,-1.4 -1.1,-6.3 0.3,-6.5 0.5,-5.1 5.9,-8.6 5.3,-6.2 3.3,-2.6 4.2,-3.5 -0.5,-5.1 -3.1,-3.7 -2.6,1.2 -0.3,5.7 -4.3,4.8 -4.2,1.1 -6.2,-1 -5.7,-1.8 4.2,-9.6 -1.1,-2.8 -5.9,-2.5 -7.2,-4.7 -4.6,-1 -11.2,-10.4 -1,-1.3 -6.3,-0.3 -1.6,5.1 -3.7,-4.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AM\"\r\n              data-name=\"Armenia\"\r\n              data-id=\"AM\"\r\n              d=\"m 1219,325.1 -0.9,-4.4 -2.5,-1.1 -2.5,-1.7 1,-2 -3.1,-2.2 0.7,-1.5 -2.2,-1.1 -1.4,-1.7 -6.9,1 1.3,2.2 0,3.1 4.2,1.5 2.4,1.9 1,-0.2 1.8,1.7 2.3,0 0.2,1 2.8,3.7 1.8,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AU\"\r\n              data-name=\"Australia\"\r\n              data-id=\"AU\"\r\n              d=\"m 1726.7,832 -3,-0.5 -1.9,2.9 -0.6,5.4 -2.1,4 -0.5,5.3 3,0.2 0.8,0.3 6.6,-4.3 0.6,1.7 4,-4.9 3.2,-2.2 4.5,-7.3 -2.8,-0.5 -4.8,1.2 -3.4,0.9 -3.6,-2.2 z m 50.1,-172.3 0.5,-2.3 0.1,-3.6 -1.6,-3.2 0.1,-2.7 -1.3,-0.8 0.1,-3.9 -1.2,-3.2 -2.3,2.4 -0.4,1.8 -1.5,3.5 -1.8,3.4 0.6,2.1 -1.2,1.3 -1.5,4.8 0.1,3.7 -0.7,1.8 0.3,3.1 -2.6,5 -1.3,3.5 -1.7,2.9 -1.7,3.4 -4.1,2.1 -4.9,-2.1 -0.5,-2 -2.5,-1.6 -1.6,0 -3.3,-3.8 -2.5,-2.2 -3.9,-2 -3.9,-3.5 -0.1,-1.8 2.5,-3.1 2.1,-3.2 -0.3,-2.6 1.9,-0.2 2.5,-2.5 2,-3.4 -2.2,-3.2 -1.5,1.2 -2,-0.5 -3.5,1.8 -3.2,-2 -1.7,0.7 -4.5,-1.6 -2.7,-2.7 -3.5,-1.5 -3.1,0.9 3.9,2.1 -0.3,3.2 -4.8,1.2 -2.8,-0.7 -3.6,2.2 -2.9,3.7 0.6,1.5 -2.7,1.7 -3.4,5.1 0.6,3.5 -3.4,-0.6 -3.5,0 -2.5,-3.8 -3.7,-2.9 -2.8,0.8 -2.6,0.9 -0.3,1.6 -2.4,-0.7 -0.3,1.8 -3,1.1 -1.7,2.5 -3.5,3.1 -1.4,4.8 -2.3,-1.3 -2.2,3.1 1.5,3 -2.6,1.2 -1.4,-5.5 -4.8,5.4 -0.8,3.5 -0.7,2.5 -3.8,3.3 -2,3.4 -3.5,2.8 -6.1,1.9 -3.1,-0.2 -1.5,0.6 -1.1,1.4 -3.5,0.7 -4.7,2.4 -1.4,-0.8 -2.6,0.5 -4.6,2.3 -3.2,2.7 -4.8,2.1 -3.1,4.4 0.4,-4.8 -3.1,4.6 -0.1,3.7 -1.3,3.2 -1.5,1.5 -1.3,3.7 0.9,1.9 0.1,2 1.6,5 -0.7,3.3 -1,-2.5 -2.3,-1.8 0.4,5.9 -1.7,-2.8 0.1,2.8 1.8,5 -0.6,5 1.7,2.5 -0.4,1.9 0.9,4.1 -1.3,3.6 -0.3,3.6 0.7,6.5 -0.7,3.7 -2.2,4.4 -0.6,2.3 -1.5,1.5 -2.9,0.8 -1.5,3.7 2.4,1.2 4,4.1 3.6,0 3.8,0.3 3.3,-2.1 3.4,-1.8 1.4,0.3 4.5,-3.4 3.8,-0.3 4.1,-0.7 4.2,1.2 3.6,-0.6 4.6,-0.2 3,-2.6 2.3,-3.3 5.2,-1.5 6.9,-3.2 5,0.4 6.9,-2.1 7.8,-2.3 9.8,-0.6 4,3.1 3.7,0.2 5.3,3.8 -1.6,1.5 1.8,2.4 1.3,4.6 -1.6,3.4 2.9,2.6 4.3,-5.1 4.3,-2.1 6.7,-5.5 -1.6,4.7 -3.4,3.2 -2.5,3.7 -4.4,3.5 5.2,-1.2 4.7,-4.4 -0.9,4.8 -3.2,3.1 4.7,0.8 1.3,2.6 -0.4,3.3 -1.5,4.9 1.4,4 4,1.9 2.8,0.4 2.4,1 3.5,1.8 7.2,-4.7 3.5,-1.2 -2.7,3.4 2.6,1.1 2.7,2.8 4.7,-2.7 3.8,-2.5 6.3,-2.7 6,-0.2 4.2,-2.3 0.9,-2 3,-4.5 3.9,-4.8 3.6,-3.2 4.4,-5.6 3.3,-3.1 4.4,-5 5.4,-3.1 5,-5.8 3.1,-4.5 1.4,-3.6 3.8,-5.7 2.1,-2.9 2.5,-5.7 -0.7,-5.4 1.7,-3.9 1.1,-3.7 0,-5.1 -2.8,-5.1 -1.9,-2.5 -2.9,-3.9 0.7,-6.7 -1.5,1 -1.6,-2.8 -2.5,1.4 -0.6,-6.9 -2.2,-4 1,-1.5 -3.1,-2.8 -3.2,-3 -5.3,-3.3 -0.9,-4.3 1.3,-3.3 -0.4,-5.5 -1.3,-0.7 -0.2,-3.2 -0.2,-5.5 1.1,-2.8 -2.3,-2.5 -1.4,-2.7 -3.9,2.4 -1.2,-5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AT\"\r\n              data-name=\"Austria\"\r\n              data-id=\"AT\"\r\n              d=\"m 1060.2,264 -2.3,-1.2 -2.3,0.3 -4,-1.9 -1.7,0.5 -2.6,2.5 -3.8,-2 -1.5,2.9 -1.7,0.8 1,4 -0.4,1.1 -1.7,-1.3 -2.4,-0.2 -3.4,1.2 -4.4,-0.3 -0.6,1.6 -2.6,-1.7 -1.5,0.3 0.2,1.1 -0.7,1.6 2.3,1.1 2.6,0.2 3.1,0.9 0.5,-1.2 4.8,-1.1 1.3,2.2 7.2,1.6 4.2,0.4 2.4,-1.4 4.3,-0.1 0.9,-1.1 1.3,-4 -1.1,-1.3 2.8,0 0.2,-2.6 -0.7,-2.1 0.3,-0.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AZ\"\r\n              data-name=\"Azerbaijan\"\r\n              data-id=\"AZ\"\r\n              d=\"m 1210.1,318.9 -1,0.2 1.2,2.4 3.2,2.9 3.7,0.9 -2.8,-3.7 -0.2,-1 -2.3,0 -1.8,-1.7 z m 10.4,-9.3 -4.3,-3.8 -1.5,-0.2 -1.1,0.9 3.2,3.4 -0.6,0.7 -2.8,-0.4 -4.2,-1.8 -1.1,1 1.4,1.7 2.2,1.1 -0.7,1.5 3.1,2.2 -1,2 2.5,1.7 2.5,1.1 0.9,4.4 5.3,-4.7 1.9,-0.5 1.9,1.9 -1.2,3.1 3.8,3.4 1.3,-0.3 -0.8,-3.2 1.7,-1.5 0.4,-2.2 -0.1,-5 4.2,-0.5 -2,-1.7 -2.5,-0.2 -3.5,-4.5 -3.4,-3.2 0,0 -2.6,2.5 -0.5,1.5 -2.4,-0.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BI\"\r\n              data-name=\"Burundi\"\r\n              data-id=\"BI\"\r\n              d=\"m 1148.2,590 -0.3,-2.5 0,0 -3,-0.4 -1.7,3.6 -3.5,-0.5 1.4,2.9 0.1,1.1 2,6.1 -0.1,0.3 0.6,-0.1 2.1,-2.3 2.2,-3.3 1.4,-1.4 0,-2 -1.2,-1.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BE\"\r\n              data-name=\"Belgium\"\r\n              data-id=\"BE\"\r\n              d=\"m 1000.7,246.2 -4.4,1.3 -3.6,-0.5 0,0 -3.8,1.2 0.7,2.2 2.2,0.1 2.4,2.4 3.4,2.9 2.5,-0.4 4.4,2.8 0.4,-3.5 1.3,-0.2 0.4,-4.2 -2.8,-1.4 -3.1,-2.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BJ\"\r\n              data-name=\"Benin\"\r\n              data-id=\"BJ\"\r\n              d=\"m 996.9,498 -4.3,-3.7 -2,0 -1.9,1.9 -1.2,1.9 -2.7,0.6 -1.2,2.8 -1.9,0.7 -0.7,3.3 1.7,1.9 2,2.3 0.2,3.1 1.1,1.3 -0.2,14.6 1.4,4.4 4.6,-0.8 0.3,-10.2 -0.1,-4.1 1,-4 1.7,-1.9 2.7,-4 -0.6,-1.7 1.1,-2.5 -1.2,-3.8 0.2,-2.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BF\"\r\n              data-name=\"Burkina Faso\"\r\n              data-id=\"BF\"\r\n              d=\"m 978.8,477.2 -3.6,0 -1.4,-1.2 -3,0.9 -5.2,2.6 -1.1,2 -4.3,2.9 -0.8,1.6 -2.3,1.3 -2.7,-0.9 -1.6,1.6 -0.8,4.4 -4.5,5.2 0.2,2.2 -1.6,2.7 0.4,3.7 2.5,1.4 1,2.1 2.5,1.3 1.9,-1.6 2.7,-0.2 3.8,1.6 -0.8,-4.8 0.2,-3.6 9.7,-0.3 2.4,0.5 1.8,-1 2.6,0.5 4.9,0.1 1.9,-0.7 1.2,-2.8 2.7,-0.6 1.2,-1.9 0.1,-4.4 -6.4,-1.4 -0.2,-3.1 -3.1,-4.1 -0.8,-2.9 0.5,-3.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BD\"\r\n              data-name=\"Bangladesh\"\r\n              data-id=\"BD\"\r\n              d=\"m 1486.5,431.9 -4.5,-10.1 -1.5,0.1 -0.2,4 -3.5,-3.3 1.1,-3.6 2.4,-0.4 1.6,-5.3 -3.4,-1.1 -5,0.1 -5.4,-0.9 -1.2,-4.4 -2.7,-0.4 -4.8,-2.7 -1.2,4.3 4.6,3.4 -3.1,2.4 -0.8,2.3 3.7,1.7 -0.4,3.8 2.6,4.8 1.6,5.2 2.2,0.6 1.7,0.7 0.6,-1.2 2.5,1.3 1.3,-3.5 -0.9,-2.6 5.1,0.2 2.8,3.7 1.5,3.1 0.8,3.2 2,3.3 -1.1,-5.1 2.1,1 -0.5,-4.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BG\"\r\n              data-name=\"Bulgaria\"\r\n              data-id=\"BG\"\r\n              d=\"m 1121.6,294.3 -3,-0.7 -4,-2.2 -5.8,1.4 -2.3,1.6 -7.5,-0.3 -4,-1 -1.9,0.5 -1.8,-2.6 -1.1,1.4 0.7,2.3 2.8,2.6 -1.7,1.9 -0.7,2 0.6,0.7 -0.7,0.9 2.8,2 0.8,4.1 3.8,0.2 3.9,-1.7 3.9,2.1 4.6,-0.6 -0.3,-3 5,-2 4.5,0.8 -2.1,-3.5 1.3,-4.4 2.2,-2.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BA\"\r\n              data-name=\"Bosnia and Herz.\"\r\n              data-id=\"BA\"\r\n              d=\"m 1062.2,284.9 -2.3,0.1 -1,1.3 -1.9,-1.4 -0.9,2.5 2.7,2.9 1.3,1.9 2.5,2.3 2,1.4 2.2,2.5 4.7,2.4 0.4,-3.4 1.5,-1.4 0.9,-0.6 1.2,-0.3 0.5,-2.9 -2.7,-2.3 1,-2.7 -1.8,0 0,0 -2.4,-1.4 -3.5,0.1 -4.4,-1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BY\"\r\n              data-name=\"Belarus\"\r\n              data-id=\"BY\"\r\n              d=\"m 1112.8,219.4 -5.2,-1.5 -4.6,2.3 -2.6,1 0.9,2.6 -3.5,2 -0.5,3.4 -4.8,2.2 -4.6,0 0.6,2.7 1.7,2.3 0.3,2.4 -2.7,1.2 1.9,2.9 0.5,2.7 2.2,-0.3 2.4,-1.6 3.7,-0.2 5,0.5 5.6,1.5 3.8,0.1 2,0.9 1.6,-1.1 1.5,1.5 4.3,-0.3 2,0.6 -0.2,-3.1 1.2,-1.4 4.1,-0.3 0,0 -2,-3.9 -1.5,-2 0.8,-0.6 3.9,0.2 1.6,-1.3 -1.7,-1.6 -3.4,-1.1 0.1,-1.1 -2.2,-1.1 -3.7,-3.9 0.6,-1.6 -1,-2.9 -4.8,-1.4 -2.3,0.7 -1,-1.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BZ\"\r\n              data-name=\"Belize\"\r\n              data-id=\"BZ\"\r\n              d=\"m 482.5,471.1 1.4,-2.2 1,-0.2 1.3,-1.7 1,-3.2 -0.3,-0.6 0.9,-2.3 -0.4,-1 1.3,-2.7 0.3,-1.8 -1.1,0 0.1,-0.9 -1,0 -2.5,3.9 -0.9,-0.8 -0.7,0.3 -0.1,1 -0.7,5 -1.2,7.2 1.6,0 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BO\"\r\n              data-name=\"Bolivia\"\r\n              data-id=\"BO\"\r\n              d=\"m 655.7,700.5 1.6,-1.3 -0.8,-3.6 1.3,-2.8 0.5,-5 -1.6,-4 -3.2,-1.7 -0.8,-2.6 0.6,-3.6 -10.7,-0.3 -2.7,-7.4 1.6,-0.1 -0.3,-2.8 -1.2,-1.8 -0.5,-3.7 -3.3,-1.9 -3.5,0.1 -2.5,-1.9 -3.8,-1.2 -2.4,-2.4 -6.3,-1 -6.4,-5.7 0.3,-4.3 -0.9,-2.5 0.4,-4.7 -7.3,1.1 -2.8,2.3 -4.8,2.6 -1.1,1.9 -2.9,0.2 -4.2,-0.6 5.5,10.3 -1.1,2.1 0.1,4.5 0.3,5.4 -1.9,3.2 1.2,2.4 -1.1,2.1 2.8,5.3 -2.8,6.9 3.1,4.3 1.2,4.6 3.2,2.7 -1.1,6.2 3.7,7.1 3.1,8.8 3.8,-0.9 4,-5.7 7.4,1.5 3.7,4.6 1.6,-5.1 6.3,0.3 1,1.3 1.5,-7.6 -0.2,-3.4 2.1,-5.6 9.5,-1.9 5.1,0.1 5.4,3.3 0.3,1.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BR\"\r\n              data-name=\"Brazil\"\r\n              data-id=\"BR\"\r\n              d=\"m 659,560.1 -1.4,0.2 -3.1,-0.5 -1.8,1.7 -2.6,1.1 -1.7,0.2 -0.7,1.3 -2.7,-0.3 -3.5,-3 -0.3,-2.9 -1.4,-3.3 1,-5.4 1.6,-2.2 -1.2,-3 -1.9,-0.9 0.8,-2.8 -1.3,-1.5 -2.9,0.3 0.7,1.8 -2.1,2.4 -6.4,2.4 -4,1 -1.7,1.5 -4.4,-1.6 -4.2,-0.8 -1,0.6 2.4,1.6 -0.3,4.3 0.7,4 4.8,0.5 0.3,1.4 -4.1,1.8 -0.7,2.7 -2.3,1 -4.2,1.5 -1.1,1.9 -4.4,0.5 -3,-3.4 -1.1,0.8 -1,-3.8 -1.6,-2 -1.9,2.2 -10.9,-0.1 0,3.9 3.3,0.7 -0.2,2.4 -1.1,-0.6 -3.2,1 0,4.6 2.5,2.4 0.9,3.6 -0.1,2.8 -2.2,17.4 -5.1,-0.3 -0.7,1 -4.6,1.2 -6.2,4.3 -0.4,3 -1.3,2.2 0.7,3.4 -3.3,1.9 0.1,2.7 -1.5,1.1 2.6,5.8 3.3,3.8 -1,2.8 3.7,0.3 2.3,3.4 4.9,0.2 4.4,-3.8 0.2,9.7 2.6,0.7 3,-1.1 4.2,0.6 2.9,-0.2 1.1,-1.9 4.8,-2.6 2.8,-2.3 7.3,-1.1 -0.4,4.7 0.9,2.5 -0.3,4.3 6.4,5.7 6.3,1 2.4,2.4 3.8,1.2 2.5,1.9 3.5,-0.1 3.3,1.9 0.5,3.7 1.2,1.8 0.3,2.8 -1.6,0.1 2.7,7.4 10.7,0.3 -0.6,3.6 0.8,2.6 3.2,1.7 1.6,4 -0.5,5 -1.3,2.8 0.8,3.6 -1.6,1.3 1.9,3.6 0.4,8.6 6,1.2 2.1,-1.2 3.9,1.7 1.2,1.9 1,5.8 0.9,2.5 2,0.3 2,-1.1 2.1,1.2 0.3,3.5 -0.3,3.8 -0.7,3.6 2.6,-1.2 3.1,3.7 0.5,5.1 -4.2,3.5 -3.3,2.6 -5.3,6.2 -5.9,8.6 3.4,-0.7 6.2,4.9 1.9,-0.2 6.2,4.1 4.8,3.5 3.8,4.3 -1.9,3 2.1,3.7 2.9,-3.7 1.5,-6 3.2,-3 3.9,-5 4.5,-11.2 3.4,-3.5 0.8,-3.1 0.3,-6.4 -1.3,-3.5 0.3,-4.8 4.1,-6.3 6,-5.1 6,-1.8 3.6,-2.9 8.5,-2.4 5.9,0 1.1,-3.8 4.2,-2.8 0.6,-6.5 5.1,-8.3 0.5,-8.5 1.6,-2.6 0.3,-4.1 1.1,-9.9 -1,-11.9 1.4,-4.7 1.4,-0.1 3.9,-5.5 3.3,-7.2 7.7,-8.8 2.7,-4.2 2,-10.5 -1,-3.9 -2,-8.1 -2.1,-2 -4.8,-0.2 -4.3,-1.9 -7.3,-7.1 -8.4,-5.3 -8.4,0.3 -10.9,-3.4 -6.5,2 0.8,-3.5 -2.7,-3.8 -9.4,-3.8 -7.1,-2.3 -4.2,4.1 -0.3,-6.3 -9.9,-1 -1.7,-2 4.2,-5.2 -0.1,-4.4 -3,-1 -3,-11.2 -1.3,-3.5 -1.9,0.3 -3.5,5.8 -1.8,4.7 -2.1,2.4 -2.7,0.5 -0.8,-1.8 -1.2,-0.3 -1.8,1.8 -2.4,-1.3 -3.2,-1.4 -2.7,0.7 -2.3,-0.6 -0.5,1.8 0.9,1.3 -0.5,1.3 -3.1,-0.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BN\"\r\n              data-name=\"Brunei\"\r\n              data-id=\"BN\"\r\n              d=\"m 1617.8,543.4 2.7,3.3 1.1,-2.2 2.7,0.2 0.1,-4.1 0.1,-3.1 -4.6,3.5 -2.1,2.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BT\"\r\n              data-name=\"Bhutan\"\r\n              data-id=\"BT\"\r\n              d=\"m 1474.7,395.5 -2.7,-1.8 -2.9,-0.1 -4.2,-1.5 -2.6,1.6 -2.6,4.8 0.3,1.2 5.5,2.5 3.2,-1 4.7,0.4 4.4,-0.2 -0.4,-3.9 -2.7,-2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BW\"\r\n              data-name=\"Botswana\"\r\n              data-id=\"BW\"\r\n              d=\"m 1116.7,685 -1,-0.5 -3.2,1.5 -1.6,0 -3.7,2.5 -2,-2.6 -8.6,2.2 -4.1,0.2 -0.9,22.7 -5.4,0.2 -0.6,18.5 1.4,1 3,6.1 -0.7,3.8 1.1,2.3 4,-0.7 2.8,-2.8 2.7,-1.9 1.5,-3.1 2.7,-1.5 2.3,0.8 2.5,1.8 4.4,0.3 3.6,-1.5 0.6,-2 1.2,-3 3,-0.5 1.7,-2.4 2,-4.3 5.2,-4.7 8,-4.7 -3.4,-2.9 -4.2,-0.9 -1.5,-4.1 0.1,-2.2 -2.3,-0.7 -6,-7 -1.6,-3.7 -1.1,-1.1 -1.9,-5.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CF\"\r\n              data-name=\"Central African Rep.\"\r\n              data-id=\"CF\"\r\n              d=\"m 1110.5,517.3 -0.5,-0.3 -2,-1.8 -0.3,-2 0.8,-2.6 0,-2.6 -3.3,-4 -0.7,-2.7 -3.5,1.1 -2.8,2.5 -4,7 -5.2,2.9 -5.4,-0.4 -1.6,0.6 0.6,2.3 -2.9,2.2 -2.3,2.5 -7.1,2.4 -1.4,-1.4 -0.9,-0.2 -1,1.7 -4.7,0.4 -2.7,6.5 -1.4,1.1 -0.4,5 0.6,2.7 -0.4,1.9 2.6,3.3 0.5,2.3 2.1,3.2 2.6,2.1 0.3,2.9 0.6,1.8 2.9,-5.9 3.3,-3.4 3.8,1.1 3.6,0.4 0.5,-4.5 2.2,-3.2 3,-2 4.6,2.1 3.6,2.4 4.1,0.6 4.2,1.2 1.6,-3.8 0.8,-0.5 2.6,0.6 6.2,-3.1 2.2,1.3 1.8,-0.2 0.9,-1.5 2,-0.6 4.3,0.7 3.6,0.1 1.8,-0.6 -0.9,-2.1 -4.2,-2.5 -1.5,-3.8 -2.4,-2.7 -3.8,-3.4 -0.1,-2 -3.1,-2.6 -3.8,-2.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CA\"\r\n              data-name=\"Canada\"\r\n              data-id=\"CA\"\r\n              d=\"m 659,276.7 -0.7,-3 -2.5,1.9 0.5,2.1 5.6,2.6 1.9,-0.4 3.3,-2.5 -4.7,0.1 -3.4,-0.8 z m 14.4,-15.9 0.2,-1.1 -4.1,-2.6 -5.9,-1.6 -1.9,0.6 3.5,2.9 5.7,1.9 2.5,-0.1 z m -305.3,3.7 0.2,-3.4 -3.2,-2.6 -0.4,-2.9 -0.1,-2.1 -4.1,-0.7 -2.4,-0.9 -4.1,-1.4 -1.4,1.5 -0.6,3.3 4.3,1.1 -0.4,1.8 2.9,2.2 0,2.2 6.3,2.8 3,-0.9 z m 336.1,-13.5 3.9,-3.8 1.4,-1.7 -2.1,-0.3 -4.9,2.2 -4.2,3.5 -8.1,9.8 -5.3,3.7 1.6,1.7 -3.8,2.2 0.2,1.9 9.6,0.1 5.4,-0.3 4.4,1.5 -4.4,2.9 2.9,0.2 7.3,-5.4 1.2,0.8 -2.5,5.1 3,1.2 2.3,-0.2 3.5,-5.5 -0.5,-3.9 0.3,-3.3 -3.7,1.1 2.8,-4.6 -4.3,-1.9 -2.7,1.5 -3.9,-1.7 2.4,-2.1 -2.9,-1.3 -3.8,2 4.9,-5.4 z m -356.8,-21.2 -1.9,2 -1.4,2.6 0.9,1.9 -0.6,2.8 0.7,2.8 1.9,0 -0.2,-4.9 7.1,-6.9 -4.9,0.5 -1.6,-0.8 z m 280.9,-47 -0.4,-1.2 -1.7,-0.1 -2.8,1.7 -0.4,0.4 0.1,1.7 1.7,0.5 3.5,-3 z m -9.6,-3.2 0.8,-1.1 -6,-0.1 -4.9,2.7 0,1.5 3,0.2 7.1,-3.2 z m -3.1,-16.6 -2.7,-0.5 -5,5.2 -3.6,4.4 -5.7,2.8 6.3,-0.6 -0.8,3.4 8.2,-3 6.2,-3 0.8,2.6 5.9,1.3 4.9,-1.8 -1.9,-1.8 -3.4,0.4 1.3,-2.7 -3.7,-1.7 -3.4,-1.9 -1.5,-1.5 -2.8,0.9 0.9,-2.5 z m 44.6,-8.2 3.7,-1.7 1,-0.7 1.4,-2.3 -2.3,-1.5 -4.2,0.7 -3.8,3.1 -0.7,2.6 4.9,-0.2 z m -73.8,-10.7 -0.8,-2 -0.3,-1 -1.6,-1 -3,-1.5 -4.9,2.3 -5,1.7 3.5,2.4 3.8,-0.6 4.1,1.6 4.2,-1.9 z m 22.4,-2.1 -6.6,-1 5.7,-2.6 -0.4,-6 -1.9,-2.3 -4.5,-0.8 -8.1,3.8 -5.5,5.8 2.9,2.1 1.6,3.3 -6.3,5.5 -3.2,-0.2 -6.2,4.4 4.2,-5.2 -4.8,-1.8 -4.5,0.9 -2.4,3.4 -5.9,-0.1 -7.2,0.8 -5.1,-2.4 -5,0.4 -1.5,-2.9 -2.1,-1.3 -3.8,0.5 -5.2,0.3 -4.4,1.8 2,2.3 -7,2.8 -1.4,-3.3 -4.4,1 -11.8,0.6 -6.4,-1.2 8.5,-2.6 -2.8,-2.8 -4.4,0.4 -4.7,-1 -7.5,-1.9 -3.8,-2.3 -4.5,-0.3 -3.3,1.6 -5.9,0.9 3.9,-4.1 -9.4,3.6 -1.4,-4.7 -2.1,-0.6 -3.8,2.5 -4.5,1.2 -0.2,-2.2 -8.2,1.4 -8.8,2.3 -5.2,-0.6 -7,1.6 -6.2,2.3 -3.7,-0.5 -3.3,-2.6 -5.9,-1.3 0,0 -24.3,20.2 -35.4,32.4 4.2,0.1 2.7,1.6 0.6,2.6 0.2,3.9 7.6,-3.3 6.4,-1.9 -0.5,3 0.7,2.4 1.7,2.7 -1.1,4.2 -1.5,6.8 4.6,3.8 -3.1,3.7 -5.1,2.9 0,0 -2.5,3.1 2.1,4.4 -3.1,4.9 4.1,2.6 -3.6,3.7 -1.3,5.5 6.9,2.5 1.6,2.7 5.4,6.1 0.7,0 13.9,0 14.6,0 4.8,0 15,0 14.5,0 14.7,0 14.8,0 16.7,0 16.8,0 10.1,0 1.3,-2.4 1.6,0 -0.8,3.4 1,1 3.2,0.4 4.6,1 3.8,1.9 4.4,-0.8 5.3,1.6 0,0 3.2,-2.4 3.2,-1 1.8,-1.5 1.5,-0.8 4,1.2 3.3,0.2 0.8,0.8 0.1,3.5 5.2,1 -1.7,1.7 1.2,1.9 -1.9,2.3 1.8,0.8 -1.9,2.1 0,0 1.2,0.2 1.3,-0.9 0.5,1.4 3.4,0.7 3.8,0.1 3.8,0.6 4,1.2 0.8,2 1.4,4.7 -2.4,2 -3.8,-0.8 -1,-3.8 -0.9,3.9 -3.8,3.4 -0.8,2.9 -1.1,1.7 -4.1,2 0,0 -3.7,3.4 -2,2.2 2.7,0.4 4.5,-2 2.9,-1.7 1.6,-0.3 2.6,0.6 1.7,-0.9 2.8,-0.8 4.7,-0.8 0,0 0,0 0.3,-1.8 -0.3,0.1 -1.7,0.3 -1.8,-0.6 2.3,-2.1 1.9,-0.7 3.9,-0.9 4.6,-0.9 1.8,1.2 1.9,-1.4 1.9,-0.8 0.9,0.4 0.1,0.1 6.7,-4.2 2.7,-1.2 7.7,0 9.3,0 1,-1.6 1.7,-0.3 2.5,-0.9 2.7,-2.8 3.2,-4.9 5.5,-4.7 1.1,1.7 3.7,-1.1 1.5,1.8 -2.8,8.5 2.1,3.5 5.9,-0.8 8.1,-0.2 -10.4,5.1 -1.5,5.2 3.7,0.5 7.1,-4.5 5.8,-2.4 12.2,-3.7 7.5,-4.1 -2.6,-2.2 1,-4.5 -7.1,7 -8.6,0.8 -5.5,-3.1 -0.1,-4.6 0.6,-6.8 6.1,-4.1 -3.3,-3.1 -7.6,0.6 -12.1,5.2 -10.9,8.2 -4.6,1 7.8,-5.7 10.1,-8.3 7.2,-2.7 5.7,-4.4 5.2,-0.5 7.3,0.1 10,1.3 8.6,-1 7.8,-5.1 8.7,-2.2 4.2,-2.1 4.2,-2.3 2,-6.8 -1.1,-2.3 -3.4,-0.8 0,-5.1 -2.3,-1.9 -6.9,-1.6 -2.8,-3.4 -4.8,-3.4 3.4,-3.7 -2,-7.1 -2.6,-7.5 -1,-5.2 -4.3,2.7 -7.4,6.5 -8.1,3.2 -1.6,-3.4 -3.7,-1 2.2,-7.3 2.6,-4.9 -7.7,-0.5 -0.1,-2.2 -3.6,-3.3 -3,-2 -4.5,1.5 -4.2,-0.5 -6.6,-1.6 -3.9,1.3 -3.8,9 -1,5.3 -8.8,6.1 3.1,4.5 0.5,5 -1.7,4 -4.7,4.1 -7.5,4.2 -9,2.8 1.7,3.2 -2.2,9.6 -5.6,6.3 -4.6,1.9 -4.4,-5.8 -0.1,-6.8 1.7,-6 3.6,-5.2 -4.8,-0.6 -7.5,-0.4 -3.6,-2.5 -4.8,-1.6 -1.7,-2.9 -3.3,-2.2 -7,-2.6 -7.1,1.2 0.7,-4.5 1.5,-5.5 -6,-1 4.9,-6.8 4.9,-4.6 9.4,-6.5 8.6,-4.6 5.6,-0.7 2.9,-3.7 5.1,-2.4 6.4,-0.4 7.7,-3.8 2.9,-2.4 7.4,-4.7 3.2,-2.8 3.2,1.7 6.5,-0.9 10.8,-3.8 2.3,-2.7 -0.8,-2.9 5,-2.9 1.7,-2.7 -3.5,-2.6 -5.4,-0.8 -5.5,-0.4 -4.6,5.9 -6.5,4.6 -7.2,4 -1.3,-3.7 4.2,-4 -2.2,-3.5 -8.7,4.2 4.3,-5.5 z m -75.5,-18.9 -2.8,-1 -14.1,3.2 -5.1,2 -7.8,3.9 5.4,1.4 6.2,-0.1 -11.5,2.1 0,1.9 5.6,0.1 9,-0.4 6.5,1.2 -6.2,1 -5.5,-0.3 -7.1,0.9 -3.3,0.6 0.6,4.2 4.2,-0.6 4.1,1.5 -0.3,2.5 7.8,-0.5 11.2,-0.8 9.4,-1.8 5,-0.4 5.7,1.5 6.7,0.8 3.1,-1.9 -0.7,-2.1 7,-0.4 2.6,-2.4 -5,-2.5 -4.2,-2.6 2.4,-3.6 2.7,-5.1 -2.2,-2 -3,-0.9 -4.2,0.8 -2.8,5.3 -4.3,2.1 2.2,-5.1 -1.7,-1.7 -7.3,2.7 -2.6,-2.6 -10.4,1.5 4.7,-2.4 z m 39.1,-1.5 -1.7,-1.1 -5.4,0.2 -2.1,0.7 2.2,3.6 7,-3.4 z m 107.7,1.6 -4.4,-2.8 -8.4,-0.5 -2.1,0.3 -1.7,1.8 2,2.8 0.9,0.3 4.8,-0.7 4.1,0.1 4.1,0.1 0.7,-1.4 z m -39.4,-0.3 5.7,-3.2 -11.2,1.3 -5.8,2.1 -7.1,4.6 -3.3,5.2 5.6,0.1 -6.1,2.3 1.8,1.9 5.9,0.8 7.3,1.5 13.8,1.2 7.9,-0.6 3.2,-1.6 2,1.8 3.3,0.3 2,3.3 -3.5,1.4 7.1,1.8 4.6,2.6 0.5,1.9 -0.4,2.4 -8.6,5.4 -3.2,2.7 0.2,2 -9.2,0.7 -8,0.1 -5.4,4.2 2.4,1.9 13,-0.9 0.9,-1.6 4.7,2.7 4.7,2.9 -2.4,1.6 3.8,2.8 7.6,3.3 10.7,2.3 0.3,-2 -2.8,-3.5 -3.5,-4.9 8.5,4.6 4.7,1.5 3.6,-4.1 0,-5.6 -1,-1.5 -4.4,-2.5 -2.7,-3.3 2.3,-3.2 5.8,-0.7 3.8,5.4 4,2.4 10.7,-6.5 3.3,-3.9 -6.4,-0.3 -3.2,-5.1 -5.9,-1.2 -7.7,-3.5 9,-2.5 -0.8,-5 -2.2,-2.1 -8.3,-2.1 -1.9,-3.3 -8.2,1.2 1.1,-2.3 -3.6,-2.5 -6.8,-2.6 -5.2,2.1 -9,1.5 3.3,-3.4 -2.3,-5.3 -11.6,2.1 -7.1,4.1 -0.3,-3.2 z m -50,-3.4 -7.1,2.4 0.9,3.4 -7.4,-0.7 -1.7,1.7 5.8,3.9 0.9,2 3.4,0.5 8.4,-2 5.1,-4.7 -3.8,-2.2 6,-2.4 0.5,-1.5 -7.5,0.6 -3.5,-1 z m 22.3,5.4 5.6,-1 10,-4.5 -6.1,-1.2 -7.8,-0.2 -5.2,1.4 -4.2,2.1 -2.5,2.6 -1.8,4.5 4.3,0.2 7.7,-3.9 z m -114.7,7.2 2.6,-2.3 9.1,-3.6 13.8,-3.6 6.4,-1.3 -1.6,-2.1 -1.9,-1.5 -9.4,-0.2 -4.1,-1.1 -14,0.8 -0.3,3.1 -7.6,3.3 -7.4,3.8 -4.3,2.2 5.9,2.7 -0.6,2.3 13.4,-2.5 z m 124.1,-18.3 0.3,-1.6 -1.4,-1.7 -6.9,1.3 -4.4,2.2 3.2,1.3 5.1,0.4 4.1,-1.9 z m -8.7,-8.6 -1.1,0.7 -4.8,-0.3 -7.6,1.6 -3.8,-0.1 -4.3,3.8 6.6,-0.4 -3.4,2.9 3.2,0.8 6.8,-0.5 5.8,-3.7 2.8,-2.5 -0.2,-2.3 z m -39.1,2.5 1.8,-2.3 -3.1,-0.5 -5.7,1.7 -0.7,4.7 -6.1,-0.4 -2.8,-2.9 -8.2,-1.6 -5.4,1.4 -11.6,4.8 4.1,0.8 17.8,-0.5 -10.6,2.2 -1.5,1.6 5.9,-0.1 12.2,-2.2 13.8,-0.8 5.1,-2.3 2.3,-2.4 -3.7,-0.2 -4.3,0.8 0.7,-1.8 z m 55.2,-4.3 -7.1,-0.3 -3.8,2 2.6,1.5 7,0.6 1.4,2.1 -2.2,2.4 -1.5,2.8 8.5,1.6 5.5,0.6 8,-0.1 11.6,-0.8 4.3,0.6 6.7,-1 3.5,-1.4 1,-2 -2.3,-1.9 -5.8,-0.3 -8,0.4 -7,1.1 -5.1,-0.4 -4.8,-0.3 -1.2,-1.1 -3.1,-1.1 2.8,-1.9 -1.4,-1.6 -7.3,0.1 -2.3,-1.6 z m -75,-2.6 -6,0.7 -5.5,-0.1 -12.1,3.1 -11.6,3.7 0,0 3.6,1 7,-0.7 9.8,-2.1 3.8,-0.3 5.2,-1.6 5.8,-3.7 z m 80.5,0.6 1,-0.5 -1.5,-0.9 -7.2,-0.1 -0.6,1.3 6.4,0.3 1.9,-0.1 z m -58.4,-0.8 3.2,-1.4 -4.1,-0.8 -5.9,0.5 -5.1,1.5 3.3,1.5 8.6,-1.3 z m 7.8,-4.2 -3.3,-0.9 -1.6,-0.2 -5.7,1.3 -1,0.7 6,0 5.6,-0.9 z m 46.4,2.5 3,-1.7 -2.3,-1.6 -1.7,-0.3 -4.4,-0.1 -2.1,1.8 -0.7,1.8 1.6,1.1 6.6,-1 z m -13.7,-1.2 0.1,-2.2 -7.4,-1.7 -6.1,-0.6 -2.1,1.7 2.8,1.1 -5.3,1.4 7.7,0.2 4,1.5 5.2,0.5 1.1,-1.9 z m 53.7,-6.1 0.6,-2.8 -4.7,-0.8 -4.7,-0.9 -1.6,-2.2 -8.2,0.2 0.3,0.9 -3.9,0.3 -4.1,1.3 -4.9,1.9 -0.3,1.9 2,1.5 6.5,0 -4.3,1.2 -2.1,1.6 1.6,1.9 6.7,0.6 6.8,-0.4 10.5,-3.4 6.4,-1.3 -2.6,-1.5 z m 78.5,-13.8 -7,-0.2 -6.9,-0.3 -10.2,0.6 -1.4,-0.4 -10.3,0.2 -6.4,0.4 -5.1,0.6 -5,2 -2.3,-1 -3.9,-0.2 -6.7,1.4 -7.4,0.6 -4.1,0.1 -6,0.8 -1.1,1.3 2.5,1.2 0.8,1.6 4.4,1.5 12.4,-0.3 7.2,0.5 -7.2,1.5 -2.2,-0.4 -9.3,-0.2 -1.1,2.2 3,1.7 -2.8,1.6 -7.5,1.1 -4.9,1.7 4.8,0.9 1.7,3 -7.5,-2 -2.5,0.3 -2,3.4 -8,1.1 -2,2.3 6.7,0.3 4.9,0.6 11.7,-0.8 8.4,1.4 12.6,-3 1,-1.1 -6.4,0.2 0.5,-1.1 6.5,-1.4 3.6,-1.9 6.8,-1.3 5,-1.6 -0.8,-2.2 3.3,-0.8 -4.3,-0.6 11.1,-0.4 3.2,-0.9 7.9,-0.8 9.3,-3.5 6.8,-1.1 10.3,-2.5 -7.4,0 3.9,-0.9 9,-0.8 9.7,-1.6 1.1,-1.1 -5.2,-1 -6.7,-0.4 -8.5,-0.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CH\"\r\n              data-name=\"Switzerland\"\r\n              data-id=\"CH\"\r\n              d=\"m 1024.3,270.6 -5.4,-1.9 -1,1.4 -4.2,0 -1.3,1 -2.3,-0.6 0.2,1.6 -3.5,3.5 0,2.8 2.4,-0.9 1.8,2.7 2.2,1.3 2.4,-0.3 2.7,-2.1 0.9,1 2.4,-0.2 0.9,-2.5 3.8,0.8 2.1,-1.1 0.3,-2.5 -2.6,-0.2 -2.3,-1.1 0.7,-1.6 -0.2,-1.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CL\"\r\n              data-name=\"Chile\"\r\n              data-id=\"CL\"\r\n              d=\"m 648.4,905.2 -3.7,-0.7 -3.3,2.5 0.2,4.1 -1.2,2.8 -7.2,-2.2 -8.6,-4 -4.5,-1.3 9.7,6.8 6.3,3.2 7.5,3.4 5.3,0.9 4.3,1.8 3,0.5 2.3,0.1 3.2,-1.8 0.5,-2.4 -2.9,-0.2 -5,0 -5.9,-13.5 z m -47.3,-196.3 -3.7,-7.1 1.1,-6.2 -3.2,-2.7 -1.2,-4.6 -3.1,-4.3 -1.2,3.3 -2.7,1.6 2.1,9 1.5,10.4 -0.1,14.2 0,13.2 0.9,12.3 -1.9,7.8 2.1,7.8 -0.5,5.3 3.2,9.5 -0.1,9.5 -1.2,10.2 -0.6,10.5 -2.1,0.2 2.4,7.3 3.3,6.3 -1.1,4.3 1.9,11.6 1.5,8.8 3.5,0.9 -1.1,-7.7 4,1.6 1.8,12.7 -6.4,-2.1 2,10.2 -2.7,5.5 8.2,1.8 -3.4,4.8 0.2,6 5,10.6 4.2,4.1 0.2,3.6 3.3,3.8 7.5,3.5 0,0 7.4,4.2 6.2,2 2,-0.1 -1.8,-5.7 3.4,-2.2 1.7,-1.5 4.2,0 -4.8,-0.9 -12,-0.8 -3.5,-3.6 -1.8,-4.6 -3.1,0.4 -2.6,-2.2 -3.1,-6.6 2.7,-2.7 0.1,-3.9 -1.8,-3.2 0.7,-5.3 -1.1,-8.2 -1.8,-3.7 1.8,-1.1 -1.3,-2.3 -2.8,-1.3 0.8,-2.6 -3.1,-2.3 -3.6,-7.1 1.6,-1.2 -3.3,-7.6 -0.7,-6.4 -0.3,-5.7 2.5,-2.4 -3.3,-6.3 -1.5,-5.9 2.9,-4.3 -1.4,-5.4 1.6,-6.2 -1.3,-5.9 -1.6,-1.2 -4.9,-10.9 2.1,-6.5 -1.7,-6.2 0.9,-5.8 2.6,-5.9 3.2,-4 -2,-2.5 0.9,-2 -1.6,-10.6 5.6,-3.2 1.1,-6.6 -0.9,-1.6 -3.8,0.9 -3.1,-8.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CN\"\r\n              data-name=\"China\"\r\n              data-id=\"CN\"\r\n              d=\"m 1587.2,453.3 0.6,-3.6 2,-2.8 -1.6,-2.5 -3.2,-0.1 -5.8,1.8 -2.2,2.8 1,5.5 4.9,2 4.3,-3.1 z m 13.2,-196.5 -6.1,-6.1 -4.4,-3.7 -3.8,-2.7 -7.7,-6.1 -5.9,-2.3 -8.5,-1.8 -6.2,0.2 -5.1,1.1 -1.7,3 3.7,1.5 2.5,3.3 -1.2,2 0.1,6.5 1.9,2.7 -4.4,3.9 -7.3,-2.3 0.6,4.6 0.3,6.2 2.7,2.6 2.4,-0.8 5.4,1 2.5,-2.3 5.1,2 7.2,4.3 0.7,2.2 -4.3,-0.7 -6.8,0.8 -2.4,1.8 -1.4,4.1 -6.3,2.4 -3.1,3.3 -5.9,-1.3 -3.2,-0.5 -0.4,4 2.9,2.3 1.9,2.1 -2.5,2 -1.9,3.3 -4.9,2.2 -7.5,0.2 -7.2,2.2 -4.4,3.3 -3.2,-2 -6.2,0.1 -9.3,-3.8 -5.5,-0.9 -6.4,0.8 -11.2,-1.3 -5.5,0.1 -4.7,-3.6 -4.9,-5.7 -3.4,-0.7 -7.9,-3.8 -7.2,-0.9 -6.4,-1 -3,-2.7 -1.3,-7.3 -5.8,-5 -8.1,-2.3 -5.7,-3.3 -3.3,-4.4 -1.7,0.5 -1.8,4.2 -3.8,0.6 2.5,6.2 -1.6,2.8 -10.7,-2 1,11.1 -2,1.4 -9,2.4 8.7,10.7 -2.9,1.6 1.7,3.5 -0.2,1.4 -6.8,3.4 -1,2.4 -6.4,0.8 -0.6,4 -5.7,-0.9 -3.2,1.2 -4,3 1.1,1.5 -1,1.5 3,5.9 1.6,-0.6 3.5,1.4 0.6,2.5 1.8,3.7 1.4,1.9 4.7,3 2.9,5 9.4,2.6 7.6,7.5 0.8,5.2 3,3.3 0.6,3.3 -4.1,-0.9 3.2,7 6.2,4 8.5,4.4 1.9,-1.5 4.7,2 6.4,4.1 3.2,0.9 2.5,3.1 4.5,1.2 5,2.8 6.4,1.5 6.5,0.6 3,-1.4 1.5,5.1 2.6,-4.8 2.6,-1.6 4.2,1.5 2.9,0.1 2.7,1.8 4.2,-0.8 3.9,-4.8 5.3,-4 4.9,1.5 3.2,-2.6 3.5,3.9 -1.2,2.7 6.1,0.9 3,-0.4 2.7,3.7 2.7,1.5 1.3,4.9 0.8,5.3 -4.1,5.3 0.7,7.5 5.6,-1 2.3,5.8 3.7,1.3 -0.8,5.2 4.5,2.4 2.5,1.2 3.8,-1.8 0.6,2.6 0.7,1.5 2.9,0.1 -1.9,-7.2 2.7,-1 2.7,-1.5 4.3,0 5.3,-0.7 4.1,-3.4 3,2.4 5.2,1.1 -0.2,3.7 3,2.6 5.9,1.6 2.4,-1 7.7,2 -0.9,2.5 2.2,4.6 3,-0.4 0.8,-6.7 5.6,-0.9 7.2,-3.2 2.5,-3.2 2.3,2.1 2.8,-2.9 6.1,-0.7 6.6,-5.3 6.3,-5.9 3.3,-7.6 2.3,-8.4 2.1,-6.9 2.8,-0.5 -0.1,-5.1 -0.8,-5.1 -3.8,-2 -2.5,-3.4 2.8,-1.7 -1.6,-4.7 -5.4,-4.9 -5.4,-5.8 -4.6,-6.3 -7.1,-3.5 0.9,-4.6 3.8,-3.2 1,-3.5 6.7,-1.8 -2.4,-3.4 -3.4,-0.2 -5.8,-2.5 -3.9,4.6 -4.9,-1.9 -1.5,-2.9 -4.7,-1 -4.7,-4.4 1.2,-3 5,-0.3 1.2,-4.1 3.6,-4.4 3.4,-2.2 4.4,3.3 -1.9,4.2 2.3,2.5 -1.4,3 4.8,-1.8 2.4,-2.9 6.3,-1.9 2.1,-4 3.8,-3.4 1,-4.4 3.6,2 4.6,0.2 -2.7,-3.3 6.3,-2.6 -0.1,-3.5 5.5,3.6 0,0 -1.9,-3.1 2.5,-0.1 -3.8,-7.3 -4.7,-5.3 2.9,-2.2 6.8,1.1 -0.6,-6 -2.8,-6.8 0.4,-2.3 -1.3,-5.6 -6.9,1.8 -2.6,2.5 -7.5,0 -6,-5.8 -8.9,-4.5 -9.9,-1.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CI\"\r\n              data-name=\"Côte d'Ivoire\"\r\n              data-id=\"CI\"\r\n              d=\"m 946.5,506.2 -2.3,0.9 -1.3,0.8 -0.9,-2.7 -1.6,0.7 -1,-0.1 -1,1.9 -4.3,-0.1 -1.6,-1 -0.7,0.6 -1.1,0.5 -0.5,2.2 1.3,2.6 1.3,5.1 -2,0.8 -0.6,0.9 0.4,1.2 -0.3,2.8 -0.9,0 -0.3,1.8 0.6,3.1 -1.2,2.8 1.6,1.8 1.8,0.4 2.3,2.7 0.2,2.5 -0.5,0.8 -0.5,5.2 1.1,0.2 5.6,-2.4 3.9,-1.8 6.6,-1.1 3.6,-0.1 3.9,1.3 2.6,-0.1 0.2,-2.5 -2.4,-5.5 1.5,-7.2 2.3,-5.3 -1.4,-9.1 -3.8,-1.6 -2.7,0.2 -1.9,1.6 -2.5,-1.3 -1,-2.1 -2.5,-1.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CM\"\r\n              data-name=\"Cameroon\"\r\n              data-id=\"CM\"\r\n              d=\"m 1060.1,502.9 0.2,-4.3 -0.5,-4.2 -2.2,-4.1 -1.6,0.4 -0.2,2 2.3,2.6 -0.6,1.1 -0.3,2.1 -4.6,5 -1.5,4 -0.7,3.3 -1.2,1.4 -1.1,4.5 -3,2.6 -0.8,3.2 -1.2,2.6 -0.5,2.6 -3.9,2.2 -3.2,-2.6 -2.1,0.1 -3.3,3.7 -1.6,0.1 -2.7,6.1 -1.4,4.5 0,1.8 1.4,0.9 1.1,2.8 2.6,1.1 2.2,4.2 -0.8,5 9.2,0.2 2.6,-0.4 3.4,0.8 3.4,-0.8 0.7,0.3 7.1,0.3 4.5,1.7 4.5,1.5 0.4,-3.5 -0.6,-1.8 -0.3,-2.9 -2.6,-2.1 -2.1,-3.2 -0.5,-2.3 -2.6,-3.3 0.4,-1.9 -0.6,-2.7 0.4,-5 1.4,-1.1 2.7,-6.5 0.9,-1.7 -1.8,-4.4 -0.8,-2.6 -2.5,-1.1 -3.3,-3.7 1.2,-3 2.5,0.6 1.6,-0.4 3.1,0.1 -3.1,-5.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CD\"\r\n              data-name=\"Dem. Rep. Congo\"\r\n              data-id=\"CD\"\r\n              d=\"m 1124.9,539.4 -4.3,-0.7 -2,0.6 -0.9,1.5 -1.8,0.2 -2.2,-1.3 -6.2,3.1 -2.6,-0.6 -0.8,0.5 -1.6,3.8 -4.2,-1.2 -4.1,-0.6 -3.6,-2.4 -4.6,-2.1 -3,2 -2.2,3.2 -0.5,4.5 -0.3,3.8 -1.6,3.4 -1.1,4 -0.7,5.6 0.3,3.6 -0.9,2.2 -0.2,2.4 -0.6,2 -3.7,3.1 -2.6,3.2 -2.5,6.2 0.2,5.3 -1.4,2 -3.3,3.1 -3.4,4 -2,-1.1 -0.4,-1.8 -3.1,-0.1 -1.9,2.4 -1.5,-0.6 -2,1.3 -0.9,1.7 -0.2,2.7 -1.5,0.7 0.8,2 2.3,-0.9 1.7,0.1 1.9,-0.7 16.6,0.1 1.3,4.7 1.6,3.8 1.3,2.1 2.1,3.3 3.7,-0.5 1.9,-0.9 3,0.9 0.9,-1.6 1.5,-3.7 3.4,-0.3 0.3,-1.1 2.9,0 -0.5,2.3 6.8,0 0,4 1.2,2.4 -0.9,3.8 0.3,4 1.9,2.3 -0.5,7.6 1.4,-0.6 2.4,0.2 3.5,-1 2.6,0.4 1.9,0.1 0.3,2 2.6,-0.1 3.5,0.6 1.8,2.8 4.5,0.9 3.4,-2 1.2,3.4 4.3,0.8 2,2.8 2.1,3.5 4.3,0 -0.3,-6.9 -1.5,1.2 -3.9,-2.5 -1.4,-1.1 0.8,-6.4 1.2,-7.5 -1.2,-2.8 1.6,-4.1 1.6,-0.7 7.5,-1.1 1,0.3 0.2,-1.1 -1.5,-1.7 -0.7,-3.5 -3.4,-3.5 -1.8,-4.5 1,-2.7 -1.5,-3.6 1.1,-10.2 0.1,0.1 -0.1,-1.1 -1.4,-2.9 0.6,-3.5 0.8,-0.4 0.2,-3.8 1.6,-1.8 0.1,-4.8 1.3,-2.4 0.3,-5.1 1.2,-3 2.1,-3.3 2.2,-1.7 1.8,-2.3 -2.3,-0.8 0.3,-7.5 0,0 -5,-4.2 -1.4,-2.7 -3.1,1.3 -2.6,-0.4 -1.5,1.1 -2.5,-0.8 -3.5,-5.2 -1.8,0.6 -3.6,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CG\"\r\n              data-name=\"Congo\"\r\n              data-id=\"CG\"\r\n              d=\"m 1080.3,549.9 -3.6,-0.4 -3.8,-1.1 -3.3,3.4 -2.9,5.9 -0.4,3.5 -4.5,-1.5 -4.5,-1.7 -7.1,-0.3 -0.4,2.8 1.5,3.3 4.2,-0.5 1.4,1.2 -2.4,7.4 2.7,3.8 0.6,4.9 -0.8,4.3 -1.7,3 -4.9,-0.3 -3,-3 -0.5,2.8 -3.8,0.8 -1.9,1.6 2.1,4.2 -4.3,3.5 4.6,6.7 2.2,-2.7 1.8,-1.1 2,2.2 1.5,0.6 1.9,-2.4 3.1,0.1 0.4,1.8 2,1.1 3.4,-4 3.3,-3.1 1.4,-2 -0.2,-5.3 2.5,-6.2 2.6,-3.2 3.7,-3.1 0.6,-2 0.2,-2.4 0.9,-2.2 -0.3,-3.6 0.7,-5.6 1.1,-4 1.6,-3.4 0.3,-3.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CO\"\r\n              data-name=\"Colombia\"\r\n              data-id=\"CO\"\r\n              d=\"m 578.3,497.2 1.2,-2.1 -1.3,-1.7 -2,-0.4 -2.9,3.1 -2.3,1.4 -4.6,3.2 -4.3,-0.5 -0.5,1.3 -3.6,0.1 -3.3,3 -1.4,5.4 -0.1,2.1 -2.4,0.7 -4.4,4.4 -2.9,-0.2 -0.7,0.9 1.1,3.8 -1.1,1.9 -1.8,-0.5 -0.9,3.1 2.2,3.4 0.6,5.4 -1.2,1.6 1.1,5.9 -1.2,3.7 2,1.5 -2.2,3.3 -2.5,4 -2.8,0.4 -1.4,2.3 0.2,3.2 -2.1,0.5 0.8,2 5.6,3.6 1,-0.1 1.4,2.7 4.7,0.9 1.6,-1 2.8,2.1 2.4,1.5 1.5,-0.6 3.7,3 1.8,3 2.7,1.7 3.4,6.7 4.2,0.8 3,-1.7 2.1,1.1 3.3,-0.6 4.4,3 -3.5,6.5 1.7,0.1 2.9,3.4 2.2,-17.4 0.1,-2.8 -0.9,-3.6 -2.5,-2.4 0,-4.6 3.2,-1 1.1,0.6 0.2,-2.4 -3.3,-0.7 0,-3.9 10.9,0.1 1.9,-2.2 1.6,2 1,3.8 1.1,-0.8 -1.7,-6.4 -1.4,-2.2 -2,-1.4 2.9,-3.1 -0.2,-1.5 -1.5,-1.9 -1,-4.2 0.5,-4.6 1.3,-2.1 1.2,-3.4 -2,-1.1 -3.2,0.7 -4,-0.3 -2.3,0.7 -3.8,-5.5 -3.2,-0.8 -7.2,0.6 -1.3,-2.2 -1.3,-0.6 -0.2,-1.3 0.8,-2.4 -0.4,-2.5 -1.1,-1.4 -0.6,-2.9 -2.9,-0.5 1.8,-3.7 0.9,-4.5 1.8,-2.4 2.2,-1.8 1.6,-3.2 3.7,-1.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CR\"\r\n              data-name=\"Costa Rica\"\r\n              data-id=\"CR\"\r\n              d=\"m 509.1,502.6 -1.4,1.3 -1.7,-0.4 -0.8,-1.3 -1.7,-0.5 -1.4,0.8 -3.5,-1.7 -0.9,0.8 -1.4,1.2 1.5,0.9 -0.9,2 -0.1,2 0.7,1.3 1.7,0.6 1.2,1.8 1.2,-1.6 -0.3,-1.8 1.4,1.1 0.3,1.9 1.9,0.8 2.1,1.3 1.5,1.5 0.1,1.4 -0.7,1.1 1.1,1.3 2.9,1.4 0.4,-1.2 0.5,-1.3 -0.1,-1.2 0.8,-0.7 -1.1,-1 0.1,-2.5 2.2,-0.6 -2.4,-2.7 -2,-2.6 -1.2,-3.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CU\"\r\n              data-name=\"Cuba\"\r\n              data-id=\"CU\"\r\n              d=\"m 539,427.3 -4.9,-2.1 -4.3,-0.1 -4.7,-0.5 -1.4,0.7 -4.2,0.6 -3,1.3 -2.7,1.4 -1.5,2.3 -3.1,2 2.2,0.6 2.9,-0.7 0.9,-1.6 2.3,-0.1 4.4,-3.3 5.4,0.3 -2.3,1.6 1.8,1.3 7,1 1.5,1.3 4.9,1.7 3.2,-0.2 0.8,3.6 1.7,1.8 3.5,0.4 2.1,1.7 -4.1,3.5 7.9,-0.6 3.8,0.5 3.7,-0.3 3.8,-0.8 0.8,-1.5 -3.9,-2.6 -4,-0.3 0.6,-1.7 -3.1,-1.3 -1.9,0 -3,-2.8 -4.2,-4 -1.8,-1.5 -5.2,0.8 -1.9,-2.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CZ\"\r\n              data-name=\"Czech Rep.\"\r\n              data-id=\"CZ\"\r\n              d=\"m 1049.4,248.5 -2.1,0.6 -1.4,-0.7 -1.1,1.2 -3.4,1.2 -1.7,1.5 -3.4,1.3 1,1.9 0.7,2.6 2.6,1.5 2.9,2.6 3.8,2 2.6,-2.5 1.7,-0.5 4,1.9 2.3,-0.3 2.3,1.2 0.6,-1.4 2.2,0.1 1.6,-0.6 0.1,-0.6 0.9,-0.3 0.2,-1.4 1.1,-0.3 0.6,-1.1 1.5,0 -2.6,-3.1 -3.6,-0.3 -0.7,-2 -3.4,-0.6 -0.6,1.5 -2.7,-1.2 0.1,-1.7 -3.7,-0.6 -2.4,-1.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"DE\"\r\n              data-name=\"Germany\"\r\n              data-id=\"DE\"\r\n              d=\"m 1043.6,232.3 -2.4,-1.9 -5.5,-2.4 -2.5,1.7 -4.7,1.1 -0.1,-2.1 -4.9,-1.4 -0.2,-2.3 -3,0.9 -3.6,-0.8 0.4,3.4 1.2,2.2 -3,3 -1,-1.3 -3.9,0.3 -0.9,1.3 1,2 -1,5.6 -1.1,2.3 -2.9,0 1.1,6.4 -0.4,4.2 1,1.4 -0.2,2.7 2.4,1.6 7.1,1.2 -2.3,4.2 -0.5,4.5 4.2,0 1,-1.4 5.4,1.9 1.5,-0.3 2.6,1.7 0.6,-1.6 4.4,0.3 3.4,-1.2 2.4,0.2 1.7,1.3 0.4,-1.1 -1,-4 1.7,-0.8 1.5,-2.9 -2.9,-2.6 -2.6,-1.5 -0.7,-2.6 -1,-1.9 3.4,-1.3 1.7,-1.5 3.4,-1.2 1.1,-1.2 1.4,0.7 2.1,-0.6 -2.3,-3.9 0.1,-2.1 -1.4,-3.3 -2,-2.2 1.2,-1.6 -1.4,-3.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"DJ\"\r\n              data-name=\"Djibouti\"\r\n              data-id=\"DJ\"\r\n              d=\"m 1217.8,499.2 -2.5,-1.7 3.1,-1.5 0.1,-2.7 -1.4,-1.9 -1.6,1.5 -2.4,-0.5 -1.9,2.8 -1.8,3 0.5,1.7 0.2,2 3.1,0.1 1.3,-0.5 1.3,1.1 2,-3.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"DK\"\r\n              data-name=\"Denmark\"\r\n              data-id=\"DK\"\r\n              d=\"m 1035.9,221.2 -1.7,-3 -6.7,2 0.9,2.5 5.1,3.4 2.4,-4.9 z m -8.6,-5.1 -2.6,-0.9 -0.7,-1.6 1.3,-2 -0.1,-3 -3.6,1.6 -1.5,1.7 -4,0.4 -1.2,1.7 -0.7,1.6 0.4,6.1 2.1,3.4 3.6,0.8 3,-0.9 -1.5,-3 3.1,-4.3 1.4,0.7 1,-2.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"DO\"\r\n              data-name=\"Dominican Rep.\"\r\n              data-id=\"DO\"\r\n              d=\"m 579.6,457.4 0,1.8 1.4,1 2.6,-4.4 2,-0.9 0.6,1.6 2.2,-0.4 1.1,-1.2 1.8,0.3 2.6,-0.2 2.5,1.3 2.3,-2.6 -2.5,-2.3 -2.4,-0.2 0.3,-1.9 -3,0.1 -0.8,-2.2 -1.4,0.1 -3.1,-1.6 -4.4,-0.1 -0.8,1.1 0.2,3.5 -0.7,2.4 -1.5,1.1 1.2,1.9 -0.2,1.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"DZ\"\r\n              data-name=\"Algeria\"\r\n              data-id=\"DZ\"\r\n              d=\"m 1021,336.9 -3.6,0.4 -2.2,-1.5 -5.6,0 -4.9,2.6 -2.7,-1 -8.7,0.5 -8.9,1.2 -5,2 -3.4,2.6 -5.7,1.2 -5.1,3.5 2,4.1 0.3,3.9 1.8,6.7 1.4,1.4 -1,2.5 -7,1 -2.5,2.4 -3.1,0.5 -0.3,4.7 -6.3,2.5 -2.1,3.2 -4.4,1.7 -5.4,1 -8.9,4.7 -0.1,7.5 0,0.4 -0.1,1.2 20.3,15.5 18.4,13.9 18.6,13.8 1.3,3 3.4,1.8 2.6,1.1 0.1,4 6.1,-0.6 7.8,-2.8 15.8,-12.5 18.6,-12.2 -2.5,-4 -4.3,-2.9 -2.6,1.2 -2,-3.6 -0.2,-2.7 -3.4,-4.7 2.1,-2.6 -0.5,-4 0.6,-3.5 -0.5,-2.9 0.9,-5.2 -0.4,-3 -1.9,-5.6 -2.6,-11.3 -3.4,-2.6 0,-1.5 -4.5,-3.8 -0.6,-4.8 3.2,-3.6 1.1,-5.3 -1,-6.2 1,-3.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"EC\"\r\n              data-name=\"Ecuador\"\r\n              data-id=\"EC\"\r\n              d=\"m 553.1,573.1 -2.4,-1.5 -2.8,-2.1 -1.6,1 -4.7,-0.9 -1.4,-2.7 -1,0.1 -5.6,-3.6 -3.9,2.5 -3.1,1.4 0.4,2.6 -2.2,4.1 -1,3.9 -1.9,1 1,5.8 -1.1,1.8 3.4,2.7 2.1,-2.9 1.3,2.8 -2.9,4.7 0.7,2.7 -1.5,1.5 0.2,2.3 2.3,-0.5 2.3,0.7 2.5,3.2 3.1,-2.6 0.9,-4.3 3.3,-5.5 6.7,-2.5 6,-6.7 1.7,-4.1 -0.8,-4.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"EG\"\r\n              data-name=\"Egypt\"\r\n              data-id=\"EG\"\r\n              d=\"m 1129.7,374.8 -5.5,-1.9 -5.3,-1.7 -7.1,0.2 -1.8,3 1.1,2.7 -1.2,3.9 2,5.1 1.3,22.7 1,23.4 22.1,0 21.4,0 21.8,0 -1,-1.3 -6.8,-5.7 -0.4,-4.2 1,-1.1 -5.3,-7 -2,-3.6 -2.3,-3.5 -4.8,-9.9 -3.9,-6.4 -2.8,-6.7 0.5,-0.6 4.6,9.1 2.7,2.9 2,2 1.2,-1.1 1.2,-3.3 0.7,-4.8 1.3,-2.5 -0.7,-1.7 -3.9,-9.2 0,0 -2.5,1.6 -4.2,-0.4 -4.4,-1.5 -1.1,2.1 -1.7,-3.2 -3.9,-0.8 -4.7,0.6 -2.1,1.8 -3.9,2 -2.6,-1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ER\"\r\n              data-name=\"Eritrea\"\r\n              data-id=\"ER\"\r\n              d=\"m 1198.1,474 -3.2,-3.1 -1.8,-5.9 -3.7,-7.3 -2.6,3.6 -4,1 -1.6,2 -0.4,4.2 -1.9,9.4 0.7,2.5 6.5,1.3 1.5,-4.7 3.5,2.9 3.2,-1.5 1.4,1.3 3.9,0.1 4.9,2.5 1.6,2.2 2.5,2.1 2.5,3.7 2,2.1 2.4,0.5 1.6,-1.5 -2.8,-1.9 -1.9,-2.2 -3.2,-3.7 -3.2,-3.6 -7.9,-6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"EE\"\r\n              data-name=\"Estonia\"\r\n              data-id=\"EE\"\r\n              d=\"m 1093.2,197.5 -5.5,0.9 -5.4,1.6 0.9,3.4 3.3,2.1 1.5,-0.8 0.1,3.5 3.7,-1 2.1,0.7 4.4,2.2 3.8,0 1.6,-1.9 -2.5,-5.5 2.6,-3.4 -0.9,-1 0,0 -4.6,0.2 -5.1,-1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ET\"\r\n              data-name=\"Ethiopia\"\r\n              data-id=\"ET\"\r\n              d=\"m 1187.6,477 -1.5,4.7 -6.5,-1.3 -0.7,5.5 -2.1,6.2 -3.2,3.2 -2.3,4.8 -0.5,2.6 -2.6,1.8 -1.4,6.7 0,0.7 0.2,5 -0.8,2 -3,0.1 -1.8,3.6 3.4,0.5 2.9,3.1 1,2.5 2.6,1.5 3.5,6.9 2.9,1.1 0,3.6 2,2.1 3.9,0 7.2,5.4 1.8,0 1.3,-0.1 1.2,0.7 3.8,0.5 1.6,-2.7 5.1,-2.6 2.3,2.1 3.8,0 1.5,-2 3.6,-0.1 4.9,-4.5 7.4,-0.3 15.4,-19.1 -4.8,0.1 -18.5,-7.6 -2.2,-2.2 -2.1,-3.1 -2.2,-3.5 1.1,-2.3 -1.3,-1.1 -1.3,0.5 -3.1,-0.1 -0.2,-2 -0.5,-1.7 1.8,-3 1.9,-2.8 -2,-2.1 -2.5,-3.7 -2.5,-2.1 -1.6,-2.2 -4.9,-2.5 -3.9,-0.1 -1.4,-1.3 -3.2,1.5 -3.5,-2.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"FI\"\r\n              data-name=\"Finland\"\r\n              data-id=\"FI\"\r\n              d=\"m 1093.4,144.4 0.8,-3.8 -5.7,-2.1 -5.8,1.8 -1.1,3.9 -3.4,2.4 -4.7,-1.3 -5.3,0.3 -5.1,-2.9 -2.1,1.4 5.9,2.7 7.2,3.7 1.7,8.4 1.9,2.2 6.4,2.6 0.9,2.3 -2.6,1.2 -8.7,6.1 -3.3,3.6 -1.5,3.3 2.9,5.2 -0.1,5.7 4.7,1.9 3.1,3.1 7.1,-1.2 7.5,-2.1 8,-0.5 0,0 7.9,-7.4 3.3,-3.3 0.9,-2.9 -7.3,-3.9 0.9,-3.7 -4.9,-4.1 1.7,-4.8 -6.4,-6.3 2.8,-4.1 -7.2,-3.7 -0.4,-3.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path id=\"FJ\"\r\n              data-name=\"Fiji\"\r\n              data-id=\"FJ\"\r\n              d=\"m 1976.7,674.4 -3.7,2 -1.9,0.3 -3.1,1.3 0.2,2.4 3.9,-1.3 3.9,-1.6 0.7,-3.1 z m -11,8.1 -1.6,1 -2.3,-0.8 -2.7,2.2 -0.2,2.8 2.9,0.8 3.6,-0.9 1.8,-3.3 -1.5,-1.8 z\"\r\n              style=\"fill-rule:evenodd\"\r\n              inkscape:connector-curvature=\"0\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GA\"\r\n              data-name=\"Gabon\"\r\n              data-id=\"GA\"\r\n              d=\"m 1050.2,557.7 -0.7,-0.3 -3.4,0.8 -3.4,-0.8 -2.6,0.4 0,7.6 -8.2,0 -1.9,0.3 -1.1,4.8 -1.3,4.6 -1.3,2 -0.2,2.1 3.4,6.6 3.7,5.3 5.8,6.4 4.3,-3.5 -2.1,-4.2 1.9,-1.6 3.8,-0.8 0.5,-2.8 3,3 4.9,0.3 1.7,-3 0.8,-4.3 -0.6,-4.9 -2.7,-3.8 2.4,-7.4 -1.4,-1.2 -4.2,0.5 -1.5,-3.3 0.4,-2.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GB\"\r\n              data-name=\"United Kingdom\"\r\n              data-id=\"GB\"\r\n              d=\"m 950,227.5 -4.9,-3.7 -3.9,0.3 0.8,3.2 -1.1,3.2 2.9,-0.1 3.5,1.3 2.7,-4.2 z m 13,-24.3 -5.5,0.5 -3.6,-0.4 -3.7,4.8 -1.9,6.1 2.2,3 0.1,5.8 2.6,-2.8 1.4,1.6 -1.7,2.7 1,1.6 5.7,1.1 0.1,0 3.1,3.8 -0.8,3.5 0,0 -7.1,-0.6 -1,4 2.6,3.3 -5.1,1.9 1.3,2.4 7.5,1 0,0 -4.3,1.3 -7.3,6.5 2.5,1.2 3.5,-2.3 4.5,0.7 3.3,-2.9 2.2,1.2 8.3,-1.7 6.5,0.1 4.3,-3.3 -1.9,-3.1 2.4,-1.8 0.5,-3.9 -5.8,-1.2 -1.3,-2.3 -2.9,-6.9 -3.2,-1 -4.1,-7.1 -0.4,-0.6 -4.8,-0.4 4.2,-5.3 1.3,-4.9 -5,0 -4.7,0.8 5,-6.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GE\"\r\n              data-name=\"Georgia\"\r\n              data-id=\"GE\"\r\n              d=\"m 1200,300.2 -7.5,-2.9 -7.7,-1 -4.5,-1.1 -0.5,0.7 2.2,1.9 3,0.7 3.4,2.3 2.1,4.2 -0.3,2.7 5.4,-0.3 5.6,3 6.9,-1 1.1,-1 4.2,1.8 2.8,0.4 0.6,-0.7 -3.2,-3.4 1.1,-0.9 -3.5,-1.4 -2.1,-2.5 -5.1,-1.3 -2.9,1 -1.1,-1.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GH\"\r\n              data-name=\"Ghana\"\r\n              data-id=\"GH\"\r\n              d=\"m 976.8,502.1 -2.6,-0.5 -1.8,1 -2.4,-0.5 -9.7,0.3 -0.2,3.6 0.8,4.8 1.4,9.1 -2.3,5.3 -1.5,7.2 2.4,5.5 -0.2,2.5 5,1.8 5,-1.9 3.2,-2.1 8.7,-3.8 -1.2,-2.2 -1.5,-4 -0.4,-3.2 1.2,-5.7 -1.4,-2.3 -0.6,-5.1 0.1,-4.6 -2.4,-3.3 0.4,-1.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GN\"\r\n              data-name=\"Guinea\"\r\n              data-id=\"GN\"\r\n              d=\"m 912.4,493 -0.8,0.4 -3,-0.5 -0.4,0.7 -1.3,0.1 -4,-1.5 -2.7,-0.1 -0.1,2.1 -0.6,0.7 0.4,2.1 -0.8,0.9 -1.3,0 -1.4,1 -1.7,-0.1 -2.6,3.1 1.6,1.1 0.8,1.4 0.7,2.8 1.3,1.2 1.5,0.9 2.1,2.5 2.4,3.7 3,-2.8 0.7,-1.7 1,-1.4 1.5,-0.2 1.3,-1.2 4.5,0 1.5,2.3 1.2,2.7 -0.2,1.8 0.9,1.7 0,2.3 1.5,-0.3 1.2,-0.2 1.5,-0.7 2.3,3.9 -0.4,2.6 1.1,1.3 1.6,0.1 1.1,-2.6 1.6,0.2 0.9,0 0.3,-2.8 -0.4,-1.2 0.6,-0.9 2,-0.8 -1.3,-5.1 -1.3,-2.6 0.5,-2.2 1.1,-0.5 -1.7,-1.8 0.3,-1.9 -0.7,-0.7 -1.2,0.6 0.2,-2.1 1.2,-1.6 -2.3,-2.7 -0.6,-1.7 -1.3,-1.4 -1.1,-0.2 -1.3,0.9 -1.8,0.8 -1.6,1.4 -2.4,-0.5 -1.5,-1.6 -0.9,-0.2 -1.5,0.8 -0.9,0 -0.3,-2.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GM\"\r\n              data-name=\"Gambia\"\r\n              data-id=\"GM\"\r\n              d=\"m 882.8,488.5 5,0.1 1.4,-0.9 1,0 2.1,-1.5 2.4,1.4 2.4,0.1 2.4,-1.5 -1.1,-1.8 -1.8,1.1 -1.8,-0.1 -2.1,-1.5 -1.8,0.1 -1.3,1.5 -6.1,0.2 -0.7,2.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GW\"\r\n              data-name=\"Guinea-Bissau\"\r\n              data-id=\"GW\"\r\n              d=\"m 900.2,492.1 -10.3,-0.3 -1.5,0.7 -1.8,-0.2 -3,1.1 0.3,1.3 1.7,1.4 0,0.9 1.2,1.8 2.4,0.5 2.9,2.6 2.6,-3.1 1.7,0.1 1.4,-1 1.3,0 0.8,-0.9 -0.4,-2.1 0.6,-0.7 0.1,-2.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GQ\"\r\n              data-name=\"Eq. Guinea\"\r\n              data-id=\"GQ\"\r\n              d=\"m 1040.1,557.8 -9.2,-0.2 -1.9,7.2 1,0.9 1.9,-0.3 8.2,0 0,-7.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GR\"\r\n              data-name=\"Greece\"\r\n              data-id=\"GR\"\r\n              d=\"m 1101.9,344.9 -0.8,2.8 6.6,1.2 0,1.1 7.6,-0.6 0.5,-1.9 -2.8,0.8 0,-1.1 -3.9,-0.5 -4.1,0.4 -3.1,-2.2 z m 11.5,-37.4 -2.7,-1.6 0.3,3 -4.6,0.6 -3.9,-2.1 -3.9,1.7 -3.8,-0.2 -1,0.2 -0.7,1.1 -2.8,-0.1 -1.9,1.3 -3.3,0.6 0,1.6 -1.6,0.9 -0.1,2.1 -2.1,3 0.5,1.9 2.9,3.6 2.3,3 1.3,4.3 2.3,5.1 4.6,2.9 3.4,-0.1 -2.4,-5.7 3.3,-0.7 -1.9,-3.3 5,1.7 -0.4,-3.7 -2.7,-1.8 -3.2,-3 1.8,-1.4 -2.8,-3 -1.6,-3.8 0.9,-1.3 3,3.2 2.9,0 2.5,-1 -3.9,-3.6 6.1,-1.6 2.7,0.6 3.2,0.2 1.1,-0.7 1.2,-3.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GL\"\r\n              data-name=\"Greenland\"\r\n              data-id=\"GL\"\r\n              d=\"m 887.4,76.3 -26,-0.4 -11.8,0.3 -5,1.3 -11.5,-0.1 -12.7,2.1 -1.6,1.7 6.7,2.1 -6.2,-1.3 -4.5,-0.3 -7,-1.4 -10.6,2.1 -2.7,-1.2 -10.4,0 -10.9,0.6 -8.9,1 -0.2,1.8 -5.3,0.5 -14.6,2.9 -4.6,1.7 8.1,1.5 -2.8,1.6 -14.9,2.2 -15.5,2.2 -2.2,1.7 6.4,2 14.5,1.2 -7.5,0.2 -10.9,1.5 3.8,3.1 3,1.5 9.4,-0.3 10.1,-0.2 7.6,0.3 8,2.9 -1.4,2.1 3.6,1.9 1.4,5.3 1,3.6 1.4,1.9 -7,4.8 2.6,1.3 4.4,-0.8 2.6,1.8 5.3,3.4 -7.5,-1.4 -3.8,0 -3,2.8 -1.5,3.6 4.2,1.8 4,-0.8 2.6,-0.8 5.5,-1.9 -2.8,4.2 -2.6,2.3 -7.1,2 -7,6.3 2,2 -3.4,4 3.7,5.2 -1.5,5 0.7,3.7 4.8,7.1 0.8,5.6 3.1,3.2 8.9,0 5,4.7 6.5,-0.3 4.1,-5.7 3.5,-4.8 -0.3,-4.4 8.6,-4.6 3.3,-3.7 1.4,-3.9 4.7,-3.5 6.5,-1.3 6.1,-1.4 3,-0.2 10.2,-3.9 7.4,-5.7 4.8,-2.1 4.6,-0.1 12.5,-1.8 12.1,-4.3 11.9,-4.6 -5.5,-0.3 -10.6,-0.2 5.3,-2.8 -0.5,-3.6 4.2,3 2.7,2.1 7.3,-1 -0.6,-4.3 -4.5,-3.1 -5,-1.3 2.4,-1.4 7.2,2.1 0.5,-2.3 -4.1,-3.4 5.4,0 5.6,-0.8 1.7,-1.8 -4,-2.1 8.6,-0.3 -4,-4.3 4.1,-0.5 0.1,-4.2 -6.2,-2.5 6.4,-1.6 5.8,-0.1 -3.6,-3.2 1.1,-5.1 3.6,-2.9 4.9,-3.2 -8,-0.2 11.3,-0.7 2.2,-1 14.6,-2.9 -1.6,-1.7 -10,-0.8 -16.9,1.5 -9.2,1.5 4.5,-2.3 -2.3,-1.4 -7,1.2 -9.7,-1.4 -12.1,0.5 -1.4,-0.7 18.3,-0.4 12.9,-0.2 6.6,-1.4 -19.7,-2.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GT\"\r\n              data-name=\"Guatemala\"\r\n              data-id=\"GT\"\r\n              d=\"m 482.8,458.9 -5.1,-0.1 -5.2,0 -0.4,3.6 -2.6,0 1.8,2.1 1.9,1.5 0.5,1.4 0.8,0.4 -0.4,2.1 -7.1,0 -3.3,5.2 0.7,1.2 -0.8,1.5 -0.4,1.9 2.7,2.6 2.5,1.3 3.4,0.1 2.8,1.1 0.2,-1 2.1,-1.6 1.1,-0.7 -0.2,-0.7 1.4,-0.4 1.3,-1.6 -0.3,-1.3 0.5,-1.2 2.8,-1.8 2.8,-2.4 -1.5,-0.8 -0.6,0.9 -1.7,-1.1 -1.6,0 1.2,-7.2 0.7,-5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GY\"\r\n              data-name=\"Guyana\"\r\n              data-id=\"GY\"\r\n              d=\"m 656.1,534.2 -2.1,-2.3 -2.9,-3.1 -2.1,-0.1 -0.1,-3.3 -3.3,-4.1 -3.6,-2.4 -4.6,3.8 -0.6,2.3 1.9,2.3 -1.5,1.2 -3.4,1.1 0,2.9 -1.6,1.8 3.7,4.8 2.9,-0.3 1.3,1.5 -0.8,2.8 1.9,0.9 1.2,3 -1.6,2.2 -1,5.4 1.4,3.3 0.3,2.9 3.5,3 2.7,0.3 0.7,-1.3 1.7,-0.2 2.6,-1.1 1.8,-1.7 3.1,0.5 1.4,-0.2 -3.3,-5.6 -0.7,-3.5 -1.8,-0.1 -2.4,-4.6 1.1,-3.3 -0.3,-1.5 3.5,-1.6 1,-5.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"HN\"\r\n              data-name=\"Honduras\"\r\n              data-id=\"HN\"\r\n              d=\"m 514.1,476.8 -1.3,-1.8 -1.9,-1 -1.5,-1.4 -1.6,-1.2 -0.8,-0.1 -2.5,-0.9 -1.1,0.5 -1.5,0.2 -1.3,-0.4 -1.7,-0.4 -0.8,0.7 -1.8,0.7 -2.6,0.2 -2.5,-0.6 -0.9,0.4 -0.5,-0.6 -1.6,0.1 -1.3,1.1 -0.6,-0.2 -2.8,2.4 -2.8,1.8 -0.5,1.2 0.3,1.3 -1.3,1.6 1.5,0.5 1.1,1.3 1.6,1 0.1,0.9 2.5,-0.8 1.1,0.5 0.7,0.7 -0.6,2.5 1.7,0.6 0.7,2 1.8,-0.3 0.8,-1.5 0.8,0 0.2,-3.1 1.3,-0.2 1.2,0 1.4,-1.7 1.5,1.3 0.6,-0.8 1.1,-0.7 2.1,-1.8 0.3,-1.3 0.5,0.1 0.8,-1.5 0.6,-0.2 0.9,0.9 1.1,0.3 1.3,-0.8 1.4,0 2,-0.8 0.9,-0.9 1.9,0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"HR\"\r\n              data-name=\"Croatia\"\r\n              data-id=\"HR\"\r\n              d=\"m 1065,280.4 -4,-2.6 -1.6,-0.8 -3.9,1.7 -0.3,2.5 -1.7,0.6 0.2,1.7 -2,-0.1 -1.8,-1 -0.8,1 -3.5,-0.2 -0.2,0.1 0,2.2 1.7,2 1.3,-2.6 3.3,1 0.3,2 2.5,2.6 -1,0.5 4.6,4.5 4.8,1.8 3.1,2.2 5,2.3 0,0 0.5,-1 -4.7,-2.4 -2.2,-2.5 -2,-1.4 -2.5,-2.3 -1.3,-1.9 -2.7,-2.9 0.9,-2.5 1.9,1.4 1,-1.3 2.3,-0.1 4.4,1 3.5,-0.1 2.4,1.4 0,0 1.7,-2.3 -1.7,-1.8 -1.5,-2.4 0,0 -1.8,0.9 -4.2,-1.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"HT\"\r\n              data-name=\"Haiti\"\r\n              data-id=\"HT\"\r\n              d=\"m 580.6,446.7 -4.6,-1 -3.4,-0.2 -1.4,1.7 3.4,1 -0.3,2.4 2.2,2.8 -2.1,1.4 -4.2,-0.5 -5,-0.9 -0.7,2.1 2.8,1.9 2.7,-1.1 3.3,0.4 2.7,-0.4 3.6,1.1 0.2,-1.8 -1.2,-1.9 1.5,-1.1 0.7,-2.4 -0.2,-3.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"HU\"\r\n              data-name=\"Hungary\"\r\n              data-id=\"HU\"\r\n              d=\"m 1079.1,263.8 -1.6,0.4 -1,1.5 -2.2,0.7 -0.6,-0.4 -2.3,1 -1.9,0.2 -0.3,1.2 -4.1,0.8 -1.9,-0.7 -2.6,-1.6 -0.2,2.6 -2.8,0 1.1,1.3 -1.3,4 0.8,0.1 1.2,2.1 1.6,0.8 4,2.6 4.2,1.2 1.8,-0.9 0,0 3.7,-1.6 3.2,0.2 3.8,-1.1 2.6,-4.3 1.9,-4.2 2.9,-1.3 -0.6,-1.6 -2.9,-1.7 -1,0.6 -5.5,-1.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ID\"\r\n              data-name=\"Indonesia\"\r\n              data-id=\"ID\"\r\n              d=\"m 1651.9,637.3 0.5,-1.7 -1.8,-1.9 -2.8,-2 -5.3,1.3 7,4.4 2.4,-0.1 z m 20.9,-0.6 4,-4.8 0.1,-1.9 -0.5,-1.3 -5.7,2.6 -2.8,3.9 -0.7,2.1 0.6,0.8 5,-1.4 z m -35.6,-13 -1.6,2.2 -3.1,0.1 -2.2,3.6 3,0.1 3.9,-0.9 6.6,-1.2 -1.2,-2.8 -3.5,0.6 -1.9,-1.7 z m 28.1,0 -5.2,2.3 -3.8,0.5 -3.4,-1.9 -4.5,1.3 -0.2,2.3 7.4,0.8 8.6,-1.8 1.1,-3.5 z m -79.5,-8.4 -0.7,-2.3 -2.3,-0.5 -4.4,-2.4 -6.8,-0.4 -4.1,6.1 5.1,0.4 0.8,2.8 10,2.6 2.4,-0.8 4.1,0.6 6.3,2.4 5.2,1.2 5.8,0.5 5.1,-0.2 5.9,2.5 6.6,-2.4 -6.6,-3.8 -8.3,-1.1 -1.8,-4.1 -10.3,-3.1 -1.3,2.6 -10.7,-0.6 z m 146.6,-3.6 0.2,-3 -1.2,-1.9 -1.3,2.2 -1.2,2.2 0.3,4.8 3.2,-4.3 z m -41,-17.5 -1.4,-2.1 -5.7,0.3 1,2.7 3.9,1.2 2.2,-2.1 z m 18.1,-2.4 -6.1,-1.8 -6.9,0.3 -1.5,3.5 3.9,0.2 3.2,-0.4 4.6,0.5 4.7,2.6 -1.9,-4.9 z m 21,-12.3 -0.8,-2.4 -9,-2.6 -2.9,2.1 -7.6,1.5 2.3,3.2 5,1.2 2.1,3.7 8.3,0.1 0.4,1.6 -4,-0.1 -6.2,2.3 4.2,3.1 -0.1,2.8 1.2,2.3 2.1,-0.5 1.8,-3.1 8.2,5.9 4.6,0.5 10.6,5.4 2.3,5.3 1,6.9 -3.7,1.8 -2.8,5.2 7.1,-0.2 1.6,-1.8 5.5,1.3 4.6,5.2 1.5,-20.8 1,-20.7 -6,-1.2 -4.1,-2.3 -4.7,-2.2 -5,0 -6.6,3.8 -4.9,6.8 -5.7,-3.8 -1.3,-10.3 z m -50,-16.4 -1,-1.4 -5.5,4.6 -6.5,0.3 -7.1,-0.9 -4.4,-1.9 -4.7,4.8 -1.2,2.6 -2.9,9.6 -0.9,5 -2.4,4.2 1.6,4.3 2.3,0.1 0.6,6.1 -1.9,5.9 2.3,1.9 3.6,-1 0.3,-9.1 -0.2,-7.4 3.8,-1.9 -0.7,6.2 3.9,3.7 -0.8,2.5 1.3,1.7 5.6,-2.4 -3,5.2 2.1,2.2 3.1,-1.9 0.3,-4.1 -4.7,-7.4 1.1,-2.2 -5.1,-8.1 5,-2.5 2.6,-3.7 2.4,0.9 0.5,-2.9 -10.5,2.1 -3.1,2.9 -5,-5.6 0.9,-4.8 4.9,-1 9.3,-0.3 5.4,1.3 4.3,-1.3 4.4,-6.3 z m 19.4,1.9 -0.6,-2.6 -3.3,-0.6 -0.5,-3.5 -1.8,2.3 -1,5.1 1.7,8.2 2.2,4 1.6,-0.8 -2.3,-3.3 0.9,-3.9 2.9,0.6 0.2,-5.5 z m -60.9,-4.5 0.9,-2.9 -4.3,-6 3,-5.8 -5,-1 -6.4,0 -1.7,7.2 -2,2.2 -2.7,8.9 -4.5,1.3 -5.4,-1.8 -2.7,0.6 -3.2,3.2 -3.6,-0.4 -3.6,1.2 -3.9,-3.5 -1,-4.3 -3.3,4.2 -0.6,5.9 0.8,5.6 2.6,5.4 2.8,1.8 0.7,8.5 4.6,0.8 3.6,-0.4 2,3.1 6.7,-2.3 2.8,2 4,0.4 2,3.9 6.5,-2.9 0.8,2.3 2.5,-9.7 0.3,-6.4 5.5,-4.3 -0.2,-5.8 1.8,-4.3 6.7,-0.8 -6.5,-5.9 z m -68.7,48.9 0.7,-9.8 1.7,-8 -2.6,-4 -4.1,-0.5 -1.9,-3.6 -0.9,-4.4 -2,-0.2 -3.2,-2.2 2.3,-5.2 -4.3,-2.9 -3.3,-5.3 -4.8,-4.4 -5.7,-0.1 -5.5,-6.8 -3.2,-2.7 -4.5,-4.3 -5.2,-6.2 -8.8,-1.2 -3.6,-0.3 0.6,3.2 6.1,7 4.4,3.6 3.1,5.5 5.1,4 2.2,4.9 1.7,5.5 4.9,5.3 4.1,8.9 2.7,4.8 4.1,5.2 2.2,3.8 7,5.2 4.5,5.3 6.2,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IN\"\r\n              data-name=\"India\"\r\n              data-id=\"IN\"\r\n              d=\"m 1414.1,380.1 -8.5,-4.4 -6.2,-4 -3.2,-7 4.1,0.9 -0.6,-3.3 -3,-3.3 -0.8,-5.2 -7.6,-7.5 -3.7,5.4 -5.7,1 -8.5,-1.6 -1.9,2.8 3.2,5.6 2.9,4.3 5,3.1 -3.7,3.7 1,4.5 -3.9,6.3 -2.1,6.5 -4.5,6.7 -6.4,-0.5 -4.9,6.6 4,2.9 1.3,4.9 3.5,3.2 1.8,5.5 -12,0 -3.2,4.2 7.1,5.4 1.9,2.5 -2.4,2.3 8,7.7 4,0.8 7.6,-3.8 1.7,5.9 0.8,7.8 2.5,8.1 3.6,12.3 5.8,8.8 1.3,3.9 2,8 3.4,6.1 2.2,3 2.5,6.4 3.1,8.9 5.5,6 2.2,-1.8 1.7,-4.4 5,-1.8 -1.8,-2.1 2.2,-4.8 2.9,-0.3 -0.7,-10.8 1.9,-6.1 -0.7,-5.3 -1.9,-8.2 1.2,-4.9 2.5,-0.3 4.8,-2.3 2.6,-1.6 -0.3,-2.9 5,-4.2 3.7,-4 5.3,-7.5 7.4,-4.2 2.4,-3.8 -0.9,-4.8 6.6,-1.3 3.7,0.1 0.5,-2.4 -1.6,-5.2 -2.6,-4.8 0.4,-3.8 -3.7,-1.7 0.8,-2.3 3.1,-2.4 -4.6,-3.4 1.2,-4.3 4.8,2.7 2.7,0.4 1.2,4.4 5.4,0.9 5,-0.1 3.4,1.1 -1.6,5.3 -2.4,0.4 -1.1,3.6 3.5,3.3 0.2,-4 1.5,-0.1 4.5,10.1 2.4,-1.5 -0.9,-2.7 0.9,-2.1 -0.9,-6.6 4.6,1.4 1.5,-5.2 -0.3,-3.1 2.1,-5.4 -0.9,-3.6 6.1,-4.4 4.1,1.1 -1.3,-3.9 1.6,-1.2 -0.9,-2.4 -6.1,-0.9 1.2,-2.7 -3.5,-3.9 -3.2,2.6 -4.9,-1.5 -5.3,4 -3.9,4.8 -4.2,0.8 2.7,2 0.4,3.9 -4.4,0.2 -4.7,-0.4 -3.2,1 -5.5,-2.5 -0.3,-1.2 -1.5,-5.1 -3,1.4 0.1,2.7 1.5,4.1 -0.1,2.5 -4.6,0.1 -6.8,-1.5 -4.3,-0.6 -3.8,-3.2 -7.6,-0.9 -7.7,-3.5 -5.8,-3.1 -5.7,-2.5 0.9,-5.9 2.8,-2.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IE\"\r\n              data-name=\"Ireland\"\r\n              data-id=\"IE\"\r\n              d=\"m 947.3,231.7 -3.5,-1.3 -2.9,0.1 1.1,-3.2 -0.8,-3.2 -3.7,2.8 -6.7,4.7 2.1,6.1 -4.2,6.4 6.7,0.9 8.7,-3.6 3.9,-5.4 -0.7,-4.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IR\"\r\n              data-name=\"Iran\"\r\n              data-id=\"IR\"\r\n              d=\"m 1213.5,324.4 -3.2,-2.9 -1.2,-2.4 -3.3,1.8 2.9,7.3 -0.7,2 3.7,5.2 0,0 4.7,7.8 3.7,1.9 1,3.8 -2.3,2.2 -0.5,5 4.6,6.1 7,3.4 3.5,4.9 -0.2,4.6 1.7,0 0.5,3.3 3.4,3.4 1.7,-2.5 3.7,2.1 2.8,-1 5.1,8.4 4.3,6.1 5.5,1.8 6.1,4.9 6.9,2.1 5.1,-3.1 4,-1.1 2.8,1.1 3.2,7.8 6.3,0.8 6.1,1.5 10.5,1.9 1.2,-7.4 7.4,-3.3 -0.9,-2.9 -2.7,-1 -1,-5.7 -5.6,-2.7 -2.8,-3.9 -3.2,-3.3 3.9,-5.8 -1.1,-4 -4.3,-1.1 -1.1,-4 -2.7,-5.1 1.6,-3.5 -2.5,-0.9 0.5,-4.7 0.5,-8 -1.6,-5.5 -3.9,-0.2 -7.3,-5.7 -4.3,-0.7 -6.5,-3.3 -3.8,-0.6 -2.1,1.2 -3.5,-0.2 -3,3.7 -4.4,1.2 -0.2,1.6 -7.9,1.7 -7.6,-1.1 -4.3,-3.3 -5.2,-1.3 -2.5,-4.8 -1.3,0.3 -3.8,-3.4 1.2,-3.1 -1.9,-1.9 -1.9,0.5 -5.3,4.7 -1.8,0.2 -3.7,-0.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IQ\"\r\n              data-name=\"Iraq\"\r\n              data-id=\"IQ\"\r\n              d=\"m 1207.3,334.9 -6.2,-0.9 -2.1,1 -2.1,4.1 -2.7,1.6 1.2,4.7 -0.9,7.8 -11,6.7 3.1,7.7 6.7,1.7 8.5,4.5 16.7,12.7 10.2,0.5 3.2,-6.1 3.7,0.5 3.2,0.4 -3.4,-3.4 -0.5,-3.3 -1.7,0 0.2,-4.6 -3.5,-4.9 -7,-3.4 -4.6,-6.1 0.5,-5 2.3,-2.2 -1,-3.8 -3.7,-1.9 -4.7,-7.8 0,0 -2.3,1.1 -2.1,-1.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IS\"\r\n              data-name=\"Iceland\"\r\n              data-id=\"IS\"\r\n              d=\"m 915.7,158.6 -6.9,-0.4 -7.3,2.9 -5.1,-1.5 -6.9,3 -5.9,-3.8 -6.5,0.8 -3.6,3.7 8.7,1.3 -0.1,1.6 -7.8,1.1 8.8,2.7 -4.6,2.5 11.7,1.8 5.6,0.8 3.9,-1 12.9,-3.9 6.1,-4.2 -4.4,-3.8 1.4,-3.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IL\"\r\n              data-name=\"Israel\"\r\n              data-id=\"IL\"\r\n              d=\"m 1167.8,360.5 -1.4,0.1 -0.4,1.1 -1.8,0 -0.1,0.1 -0.6,1.6 -0.6,4.8 -1.1,2.9 0.4,0.4 -1.4,2.1 0,0 3.9,9.2 0.7,1.7 1.7,-10.2 -0.4,-2.4 -2.4,0.8 0.1,-1.7 1.2,-0.8 -1.4,-0.7 0.7,-4.3 2,0.9 0.7,-2 -0.1,0 0.6,-1 -0.3,-2.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IT\"\r\n              data-name=\"Italy\"\r\n              data-id=\"IT\"\r\n              d=\"m 1057.8,328.6 -4,0.5 -5.2,0.7 -6.2,-0.6 -0.6,3.4 7.5,3.3 2.7,0.7 4.2,2.4 0.9,-3.3 -0.9,-2 1.6,-5.1 z m -33.7,-18.9 -2.5,1.9 -2.8,-0.3 1.3,3.6 0.4,7.6 2.1,1.7 2,-2.1 2.4,0.4 0.4,-8.4 -3.3,-4.4 z m 14.3,-34.3 -1.3,-2.2 -4.8,1.1 -0.5,1.2 -3.1,-0.9 -0.3,2.5 -2.1,1.1 -3.8,-0.8 -0.9,2.5 -2.4,0.2 -0.9,-1 -2.7,2.1 -2.4,0.3 -2.2,-1.3 -0.2,1.7 1.6,2.4 -1.7,1.8 1.5,4.8 2.7,0.8 -0.5,2.7 2.1,-0.5 2.8,-2.8 2.3,-0.9 4.2,2.1 2.6,0.7 1.9,6 3.6,3.6 4.9,4 4.2,2.8 3.9,0.4 2.3,2.5 3.4,1.2 1.7,2.7 2.2,0.8 1.8,3.2 2.3,3.7 -1.1,1.3 -0.8,3.5 0.1,2 2.1,-0.5 2.5,-5.6 2.1,-0.4 0.4,-3.3 -3.9,-2.3 1.9,-4.1 4.5,1 3.1,3 0.8,-2.3 -0.6,-1.2 -4.7,-3.2 -3.9,-1.9 -4.8,-2.3 1.4,-1.2 -1.4,-1.4 -4,0.1 -6,-5 -2.9,-5.1 -4.9,-3.1 -1.9,-3.1 0.5,-1.8 -0.4,-3 3.9,-2.2 4.1,0.9 -1.4,-2.7 0.3,-3 -7.2,-1.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"JM\"\r\n              data-name=\"Jamaica\"\r\n              data-id=\"JM\"\r\n              d=\"m 550.7,458.5 3.9,-0.1 -0.8,-1.8 -2.7,-1.5 -3.7,-0.6 -1.2,-0.2 -2.4,0.4 -0.8,1.5 2.9,2.3 3,1 1.8,-1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"JO\"\r\n              data-name=\"Jordan\"\r\n              data-id=\"JO\"\r\n              d=\"m 1186.6,367.6 -3.1,-7.7 -9.6,6.7 -6.3,-2.5 -0.7,2 0.4,3.9 -0.6,1.9 0.4,2.4 -1.7,10.2 0.3,0.9 6.1,1 2.1,-2 1.1,-2.3 4,-0.8 0.7,-2.2 1.7,-1 -6.1,-6.4 10.4,-3.1 0.9,-1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"JP\"\r\n              data-name=\"Japan\"\r\n              data-id=\"JP\"\r\n              d=\"m 1692.5,354.9 -4.5,-1.3 -1.1,2.7 -3.3,-0.8 -1.3,3.8 1.2,3 4.2,1.8 -0.1,-3.7 2.1,-1.5 3.1,2.1 1.3,-3.9 -1.6,-2.2 z m 24.4,-19.3 -3.6,-6.7 1.3,-6.4 -2.8,-5.2 -8.1,-8.7 -4.8,1.2 0.2,3.9 5.1,7.1 1,7.9 -1.7,2.5 -4.5,6.5 -5,-3.1 0,11.5 -6.3,-1.3 -9.6,1.9 -1.9,4.4 -3.9,3.3 -1.1,4 -4.3,2 4,4.3 4.1,1.9 0.9,5.7 3.5,2.5 2.5,-2.7 -0.8,-10.8 -7.3,-4.7 6.1,-0.1 5,-3 8.6,-1.4 2.4,4.8 4.6,2.4 4.4,-7.3 9.1,-0.4 5.4,-3 0.6,-4.6 -2.5,-3.2 -0.6,-5.2 z m -11.8,-44.2 -5.3,-2.1 -10.4,-6.4 1.9,4.8 4.3,8.5 -5.2,0.4 0.6,4.7 4.6,6.1 5.7,0 -1.6,-6.8 10.8,4.2 0.4,-6.1 6.4,-1.7 -6,-6.9 -1.7,2.6 -4.5,-1.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KZ\"\r\n              data-name=\"Kazakhstan\"\r\n              data-id=\"KZ\"\r\n              d=\"m 1308.8,223.8 -9,-1.3 -3.1,2.5 -10.8,2.2 -1.7,1.5 -16.8,2.1 -1.4,2.1 5,4.1 -3.9,1.6 1.5,1.7 -3.6,2.9 9.4,4.2 -0.2,3 -6.9,-0.3 -0.8,1.8 -7.3,-3.2 -7.6,0.2 -4.3,2.5 -6.6,-2.4 -11.9,-4.3 -7.5,0.2 -8.1,6.6 0.7,4.6 -6,-3.6 -2.1,6.8 1.7,1.2 -1.7,4.7 5.3,4.3 3.6,-0.2 4.2,4.1 0.2,3.2 2.8,1 4.4,-1.3 5,-2.7 4.7,1.5 4.9,-0.3 1.9,3.9 0.6,6 -4.6,-0.9 -4,1 0.9,4.5 -5,-0.6 0.6,2 3.2,1.6 3.7,5.5 6.4,2.1 1.5,2.1 -0.7,2.6 0.7,1.5 1.8,-2 5.5,-1.3 3.8,1.7 4.9,4.9 2.5,-0.3 -6.2,-22.8 11.9,-3.6 1.1,0.5 9.1,4.5 4.8,2.3 6.5,5.5 5.7,-0.9 8.6,-0.5 7.5,4.5 1.5,6.2 2.5,0.1 2.6,5 6.6,0.2 2.3,3 1.9,0 0.9,-4.5 5.4,-4.3 2.5,-1.2 0.3,-2.7 3.1,-0.8 9.1,2.1 -0.5,-3.6 2.5,-1.3 8.1,2.6 1.6,-0.7 8.6,0.2 7.8,0.6 3.3,2.2 3.5,0.9 -1.7,-3.5 2.9,-1.6 -8.7,-10.7 9,-2.4 2,-1.4 -1,-11.1 10.7,2 1.6,-2.8 -2.5,-6.2 3.8,-0.6 1.8,-4.2 -4.3,-3.8 -6,0.9 -3.3,-2.6 -3.9,-1.2 -4.1,-3.6 -3.2,-1.1 -6.2,1.6 -8.3,-3.6 -1.1,3.3 -18.1,-15.5 -8.3,-4.7 0.8,-1.9 -9.1,5.7 -4.4,0.4 -1.2,-3.3 -7,-2.1 -4.3,1.5 -4.3,-6.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KE\"\r\n              data-name=\"Kenya\"\r\n              data-id=\"KE\"\r\n              d=\"m 1211.7,547.2 -3.8,0 -2.3,-2.1 -5.1,2.6 -1.6,2.7 -3.8,-0.5 -1.2,-0.7 -1.3,0.1 -1.8,0 -7.2,-5.4 -3.9,0 -2,-2.1 0,-3.6 -2.9,-1.1 -3.8,4.2 -3.4,3.8 2.7,4.4 0.7,3.2 2.6,7.3 -2.1,4.7 -2.7,4.2 -1.6,2.6 0,0.3 1.4,2.4 -0.4,4.7 20.2,13 0.4,3.7 8,6.3 2.2,-2.1 1.2,-4.2 1.8,-2.6 0.9,-4.5 2.1,-0.4 1.4,-2.7 4,-2.5 -3.3,-5.3 -0.2,-23.2 4.8,-7.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KG\"\r\n              data-name=\"Kyrgyzstan\"\r\n              data-id=\"KG\"\r\n              d=\"m 1387.2,302.6 -3.5,-0.9 -3.3,-2.2 -7.8,-0.6 -8.6,-0.2 -1.6,0.7 -8.1,-2.6 -2.5,1.3 0.5,3.6 -9.1,-2.1 -3.1,0.8 -0.3,2.7 1.8,0.6 -3.1,4.1 4.6,2.3 3.2,-1.6 7.1,3.3 -5.2,4.5 -4.1,-0.6 -1.4,2 -5.9,-1.1 0.6,3.7 5.4,-0.5 7.1,2 9.5,-0.9 1,-1.5 -1.1,-1.5 4,-3 3.2,-1.2 5.7,0.9 0.6,-4 6.4,-0.8 1,-2.4 6.8,-3.4 0.2,-1.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KH\"\r\n              data-name=\"Cambodia\"\r\n              data-id=\"KH\"\r\n              d=\"m 1574.8,481.8 -5.2,-2.3 -2,4.3 -4.9,-2.4 -5.3,-1 -7.1,1.3 -3,5.2 2.1,7.7 3.4,6.6 2.6,3.3 4.7,0.9 4.7,-2.5 5.8,-0.5 -2.8,-3.8 8.9,-4.9 -0.1,-7.7 -1.8,-4.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KR\"\r\n              data-name=\"Korea\"\r\n              data-id=\"KR\"\r\n              d=\"m 1637.3,331.7 6.2,5.5 -3.4,1.1 5.2,6.8 1.1,4.8 2.1,3.5 4.5,-0.5 3.2,-2.7 4.2,-1.2 0.5,-3.6 -3.4,-7.5 -3.3,-4.2 -8.2,-7.6 0.1,1.6 -2.1,0.4 -3.5,0.3 -0.7,2.9 -2.4,-0.2 -0.1,0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KW\"\r\n              data-name=\"Kuwait\"\r\n              data-id=\"KW\"\r\n              d=\"m 1235.6,381.4 -3.7,-0.5 -3.2,6.1 4.9,0.6 1.7,3.1 3.8,-0.2 -2.4,-4.8 0.3,-1.5 -1.4,-2.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LA\"\r\n              data-name=\"Lao PDR\"\r\n              data-id=\"LA\"\r\n              d=\"m 1574.8,481.8 0.2,-6.4 -2,-4.5 -4.8,-4.4 -4.3,-5.6 -5.7,-7.5 -7.3,-3.8 1.3,-2.3 3.3,-1.7 -3,-5.5 -6.8,-0.1 -3.4,-5.7 -4,-5.1 -2.7,1 1.9,7.2 -2.9,-0.1 -0.7,-1.5 -4.1,4.1 -0.8,2.4 2.6,1.9 0.9,3.8 3.8,0.3 -0.4,6.7 1,5.7 5.3,-3.8 1.8,1.2 3.2,-0.2 0.8,-2.2 4.3,0.4 4.9,5.2 1.3,6.3 5.2,5.5 0.5,5.4 -1.5,2.9 4.9,2.4 2,-4.3 5.2,2.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LB\"\r\n              data-name=\"Lebanon\"\r\n              data-id=\"LB\"\r\n              d=\"m 1167.8,360.5 0.9,-3.5 2.6,-2.4 -1.2,-2.5 -2.4,-0.3 -0.1,0.2 -2.1,4.5 -1.3,5.2 1.8,0 0.4,-1.1 1.4,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LR\"\r\n              data-name=\"Liberia\"\r\n              data-id=\"LR\"\r\n              d=\"m 929.4,523.3 -1.6,-0.2 -1.1,2.6 -1.6,-0.1 -1.1,-1.3 0.4,-2.6 -2.3,-3.9 -1.5,0.7 -1.2,0.2 -2.6,3 -2.6,3.4 -0.3,1.9 -1.3,2 3.7,4.1 4.8,3.5 5.1,4.8 5.7,3.1 1.5,-0.1 0.5,-5.2 0.5,-0.8 -0.2,-2.5 -2.3,-2.7 -1.8,-0.4 -1.6,-1.8 1.2,-2.8 -0.6,-3.1 0.3,-1.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LY\"\r\n              data-name=\"Libya\"\r\n              data-id=\"LY\"\r\n              d=\"m 1111.8,371.4 -1.5,-2.1 -5.4,-0.8 -1.8,-1.1 -2,0 -2,-2.8 -7.3,-1.3 -3.6,0.8 -3.7,3 -1.5,3.1 1.5,4.8 -2.4,3 -2.5,1.6 -5.9,-3.1 -7.7,-2.7 -4.9,-1.2 -2.8,-5.7 -7.2,-2.8 -4.5,-1.1 -2.2,0.6 -6.4,-2.2 -0.1,4.9 -2.6,1.8 -1.5,2 -3.7,2.5 0.7,2.6 -0.4,2.7 -2.6,1.4 1.9,5.6 0.4,3 -0.9,5.2 0.5,2.9 -0.6,3.5 0.5,4 -2.1,2.6 3.4,4.7 0.2,2.7 2,3.6 2.6,-1.2 4.3,2.9 2.5,4 8.8,2.8 3.1,3.5 3.9,-2.4 5.4,-3.5 22.3,12.2 22.4,12.2 0,-2.7 6.3,0 -0.5,-12.7 -1,-23.4 -1.3,-22.7 -2,-5.1 1.2,-3.9 -1.1,-2.7 1.8,-3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LK\"\r\n              data-name=\"Sri Lanka\"\r\n              data-id=\"LK\"\r\n              d=\"m 1432.2,532.7 2.3,-1.8 0.6,-6.6 -3,-6.6 -2.9,-4.5 -4.1,-3.5 -1.9,10.3 1.4,9.1 2.8,5.1 4.8,-1.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LS\"\r\n              data-name=\"Lesotho\"\r\n              data-id=\"LS\"\r\n              d=\"m 1128.1,766.5 1.1,-2 3.1,-1 1.1,-2.1 1.9,-3.1 -1.7,-1.9 -2.3,-2 -2.6,1.3 -3.1,2.5 -3.2,4 3.7,4.9 2,-0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LT\"\r\n              data-name=\"Lithuania\"\r\n              data-id=\"LT\"\r\n              d=\"m 1100.4,221.2 -5,-2.9 -2.5,-0.4 -0.9,-1.3 -4.4,0.6 -7.9,-0.4 -5,1.9 1.7,5 5,1.1 2.2,0.9 -0.2,1.7 0.6,1.5 2.5,0.6 1.4,1.9 4.6,0 4.8,-2.2 0.5,-3.4 3.5,-2 -0.9,-2.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LU\"\r\n              data-name=\"Luxembourg\"\r\n              data-id=\"LU\"\r\n              d=\"m 1007,258.6 0.2,-2.7 -1,-1.4 -1.3,0.2 -0.4,3.5 1.1,0.5 1.4,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LV\"\r\n              data-name=\"Latvia\"\r\n              data-id=\"LV\"\r\n              d=\"m 1102.1,210.1 -3.8,0 -4.4,-2.2 -2.1,-0.7 -3.7,1 -0.2,4.6 -3.6,0.1 -4.4,-4.5 -4,2.1 -1.7,3.7 0.5,4.5 5,-1.9 7.9,0.4 4.4,-0.6 0.9,1.3 2.5,0.4 5,2.9 2.6,-1 4.6,-2.3 -2.1,-3.6 -1,-2.8 -2.4,-1.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MA\"\r\n              data-name=\"Morocco\"\r\n              data-id=\"MA\"\r\n              d=\"m 965.2,348.4 -2.3,-0.1 -5.5,-1.4 -5,0.4 -3.1,-2.7 -3.9,0 -1.8,3.9 -3.7,6.7 -4,2.6 -5.4,2.9 -3.5,4.3 -0.9,3.4 -2.1,5.4 1.1,7.9 -4.7,5.3 -2.7,1.7 -4.4,4.4 -5.1,0.7 -2.8,2.4 -0.1,0.1 -3.6,6.5 -3.7,2.3 -2.1,4 -0.2,3.3 -1.6,3.8 -1.9,1 -3.1,4 -2,4.5 0.3,2.2 -1.9,3.3 -2.2,1.7 -0.3,3 0.1,0 12.4,-0.5 0.7,-2.3 2.3,-2.9 2,-8.8 7.8,-6.8 2.8,-8.1 1.7,-0.4 1.9,-5 4.6,-0.7 1.9,0.9 2.5,0 1.8,-1.5 3.4,-0.2 -0.1,-3.4 0,0 0.8,0 0.1,-7.5 8.9,-4.7 5.4,-1 4.4,-1.7 2.1,-3.2 6.3,-2.5 0.3,-4.7 3.1,-0.5 2.5,-2.4 7,-1 1,-2.5 -1.4,-1.4 -1.8,-6.7 -0.3,-3.9 -2,-4.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MD\"\r\n              data-name=\"Moldova\"\r\n              data-id=\"MD\"\r\n              d=\"m 1118.5,283.3 1.2,-0.7 0.5,-2.1 1.1,-2 -0.5,-1.1 1,-0.5 0.6,0.9 3,0.2 1.2,-0.5 -1,-0.6 0.2,-1 -2,-1.5 -1.1,-2.6 -1.9,-1.1 0,-2.1 -2.5,-1.6 -2,-0.3 -3.9,-1.9 -3.2,0.6 -1.1,0.9 1.6,0.6 1.8,1.9 1.9,2.6 3.4,3.7 0.6,2.7 -0.2,2.7 1.3,2.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MG\"\r\n              data-name=\"Madagascar\"\r\n              data-id=\"MG\"\r\n              d=\"m 1255.7,658.4 -1.1,-4.2 -1.4,-2.7 -1.8,-2.7 -2,2.8 -0.3,3.8 -3.3,4.5 -2.3,-0.8 0.6,2.7 -1.8,3.2 -4.8,3.9 -3.4,3.7 -2.4,0 -2.2,1.2 -3.1,1.3 -2.8,0.2 -1,4.1 -2.2,3.5 0.1,5.9 0.8,4 1.1,3 -0.8,4.1 -2.9,4.8 -0.2,2.1 -2.6,1.1 -1.3,4.6 0.2,4.6 1.6,5 -0.1,5.7 1.2,3.3 4.2,2.3 3,1.7 5,-2.7 4.6,-1.5 3.1,-7.4 2.8,-8.9 4.3,-12 3.3,-8.8 2.7,-7.4 0.8,-5.4 1.6,-1.5 0.7,-2.7 -0.8,-4.7 1.2,-1.9 1.6,3.8 1.1,-1.9 0.8,-3.1 -1.3,-2.9 -0.5,-7.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MX\"\r\n              data-name=\"Mexico\"\r\n              data-id=\"MX\"\r\n              d=\"m 444.4,407.8 -3.6,-1.4 -3.9,-2 -0.8,-3 -0.2,-4.5 -2.4,-3.6 -1,-3.7 -1.6,-4.4 -3.1,-2.5 -4.4,0.1 -4.8,5 -4,-1.9 -2.2,-1.9 -0.4,-3.5 -0.8,-3.3 -2.4,-2.8 -2.1,-2 -1.3,-2.2 -9.3,0 -0.8,2.6 -4.3,0 -10.7,0 -10.7,-4.4 -7.1,-3.1 1,-1.3 -7,0.7 -6.3,0.5 0.2,5.7 0.7,5.1 0.7,4.1 0.8,4 2.6,1.8 2.9,4.5 -1,2.9 -2.7,2.3 -2.1,-0.3 -0.6,0.5 2.3,3.7 2.9,1.5 1,1.7 0.9,-0.9 3.1,2.9 2.1,2 0.1,3.4 -1.2,4.7 2.5,1.6 3.3,3.1 2.9,3.6 0.7,3.9 1,0 2.7,-2.3 0.4,-1.2 -1.5,-2.8 -1.6,-2.9 -2.6,-0.2 0.4,-3.4 -0.9,-3 -1,-2.8 -0.5,-5.9 -2.6,-3.2 -0.6,-2.3 -1.2,-1.6 0,-4.1 -1,0.1 -0.1,-2.2 -0.7,-0.5 -0.4,-1.4 -2.7,-4.4 -1.1,-2.6 1,-4.8 0.1,-3 1.8,-2.6 2.4,1.7 1.9,-0.2 3.1,2.5 -0.9,2.4 0.4,4.9 1.5,4.7 -0.4,2 1.7,3.1 2.3,3.4 2.7,0.5 0.3,4.4 2.4,3.1 2.5,1.5 -1.8,4 0.7,1.5 4.1,2.6 1.9,4 4.5,4.9 3.8,6.4 1.3,3.2 0,2.5 1.4,2.9 -0.3,2.2 -1.6,1.6 0.3,1.8 -1.9,0.7 0.8,3.1 2.2,4 5.3,3.6 1.9,2.9 5.4,2 3,0.4 1.2,1.7 4.2,3 5.9,3 4,0.9 4.8,2.9 4,1.2 3.7,1.7 2.9,-0.7 4.8,-2.4 3.1,-0.4 4.4,1.6 2.6,2.1 5.5,6.9 0.4,-1.9 0.8,-1.5 -0.7,-1.2 3.3,-5.2 7.1,0 0.4,-2.1 -0.8,-0.4 -0.5,-1.4 -1.9,-1.5 -1.8,-2.1 2.6,0 0.4,-3.6 5.2,0 5.1,0.1 0.1,-1 0.7,-0.3 0.9,0.8 2.5,-3.9 1,0 1.2,-0.1 1.2,1.6 2,-5 1.2,-2.7 -0.9,-1.1 1.8,-3.9 3.5,-3.8 0.6,-3.1 -1.2,-1.3 -3.4,0.5 -4.8,-0.2 -6,1.5 -4,1.7 -1.2,1.8 -1.2,5.4 -1.8,3.7 -3.9,2.6 -3.6,1.1 -4.3,1.1 -4.3,0.6 -5.1,1.8 -1.9,-2.6 -5.6,-1.7 -1.8,-3.2 -0.7,-3.6 -3,-4.7 -0.4,-5 -1.2,-3.1 -0.5,-3.4 1.1,-3.1 1.8,-8.6 1.8,-4.5 3.1,-5.6 -2.1,0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MK\"\r\n              data-name=\"Macedonia\"\r\n              data-id=\"MK\"\r\n              d=\"m 1094,304.8 -2.8,-2 -2.4,0.1 -1.7,0.4 -1.1,0.2 -2.9,1 -0.1,1.2 -0.7,0 0,0 -0.4,2.1 0.9,2.6 2.3,1.6 3.3,-0.6 1.9,-1.3 2.8,0.1 0.7,-1.1 1,-0.2 -0.8,-4.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ML\"\r\n              data-name=\"Mali\"\r\n              data-id=\"ML\"\r\n              d=\"m 1000.3,450.3 -6.1,0.6 -0.1,-4 -2.6,-1.1 -3.4,-1.8 -1.3,-3 -18.6,-13.8 -18.4,-13.9 -8.4,0.1 2.4,27.4 2.4,27.5 1,0.8 -1.3,4.4 -22.3,0.1 -0.9,1.4 -2.1,-0.4 -3.2,1.3 -3.8,-1.8 -1.8,0.2 -1,3.7 -1.9,1.2 0.2,3.9 1.1,3.7 2.1,1.8 0.4,2.4 -0.3,2 0.3,2.3 0.9,0 1.5,-0.8 0.9,0.2 1.5,1.6 2.4,0.5 1.6,-1.4 1.8,-0.8 1.3,-0.9 1.1,0.2 1.3,1.4 0.6,1.7 2.3,2.7 -1.2,1.6 -0.2,2.1 1.2,-0.6 0.7,0.7 -0.3,1.9 1.7,1.8 0.7,-0.6 1.6,1 4.3,0.1 1,-1.9 1,0.1 1.6,-0.7 0.9,2.7 1.3,-0.8 2.3,-0.9 -0.4,-3.7 1.6,-2.7 -0.2,-2.2 4.5,-5.2 0.8,-4.4 1.6,-1.6 2.7,0.9 2.3,-1.3 0.8,-1.6 4.3,-2.9 1.1,-2 5.2,-2.6 3,-0.9 1.4,1.2 3.6,0 3.6,-0.3 2,-2.2 7.6,-0.6 4.9,-1 0.5,-3.9 3,-4.3 -0.1,-14.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MM\"\r\n              data-name=\"Myanmar\"\r\n              data-id=\"MM\"\r\n              d=\"m 1533.9,435.8 -0.6,-2.6 -3.8,1.8 -2.5,-1.2 -4.5,-2.4 0.8,-5.2 -3.7,-1.3 -2.3,-5.8 -5.6,1 -0.7,-7.5 4.1,-5.3 -0.8,-5.3 -1.3,-4.9 -2.7,-1.5 -2.7,-3.7 -3,0.4 0.9,2.4 -1.6,1.2 1.3,3.9 -4.1,-1.1 -6.1,4.4 0.9,3.6 -2.1,5.4 0.3,3.1 -1.5,5.2 -4.6,-1.4 0.9,6.6 -0.9,2.1 0.9,2.7 -2.4,1.5 0.5,4.6 -2.1,-1 1.1,5.1 4.6,5.2 3.4,0.9 -0.4,2.2 5.4,7.4 1.9,5.9 -0.9,7.9 3.6,1.5 3.2,0.6 5.8,-4.6 3.2,-3.1 3.1,5.2 2,8.1 2.6,7.6 2.6,3.3 0.2,6.9 2.2,3.8 -1.3,4.8 0.9,4.8 2.2,-6.6 2.6,-5.9 -2.8,-5.8 -0.2,-3 -1,-3.5 -4.2,-5.1 -1.7,-3.2 1.7,-1.1 1.4,-5.6 -2.9,-4.2 -4.1,-4.6 -3.5,-5.6 2.2,-1.1 1.5,-6.9 3.9,-0.3 2.8,-2.8 3,-1.4 0.8,-2.4 4.1,-4.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ME\"\r\n              data-name=\"Montenegro\"\r\n              data-id=\"ME\"\r\n              d=\"m 1080,299.8 0.4,-0.6 -2,-1.2 -1.8,-0.7 -0.8,-0.8 -1.5,-1.1 -0.9,0.6 -1.5,1.4 -0.4,3.4 -0.5,1 0,0 2.3,1.2 1.6,2.1 1.1,0.4 0,0 -0.5,-1.9 2,-3.1 0.4,1.2 1.3,-0.5 0.8,-1.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MN\"\r\n              data-name=\"Mongolia\"\r\n              data-id=\"MN\"\r\n              d=\"m 1473.7,252.1 -3.7,-4.6 -6.6,-1.5 -4.8,-0.8 -6.9,-2.5 -1.3,6.4 4,3.6 -2.4,4.3 -7.9,-1.6 -5,-0.2 -4.7,-2.9 -5.1,-0.1 -5.3,-1.9 -5.9,2.9 -6.6,5.4 -4.7,1 3.3,4.4 5.7,3.3 8.1,2.3 5.8,5 1.3,7.3 3,2.7 6.4,1 7.2,0.9 7.9,3.8 3.4,0.7 4.9,5.7 4.7,3.6 5.5,-0.1 11.2,1.3 6.4,-0.8 5.5,0.9 9.3,3.8 6.2,-0.1 3.2,2 4.4,-3.3 7.2,-2.2 7.5,-0.2 4.9,-2.2 1.9,-3.3 2.5,-2 -1.9,-2.1 -2.9,-2.3 0.4,-4 3.2,0.5 5.9,1.3 3.1,-3.3 6.3,-2.4 1.4,-4.1 2.4,-1.8 6.8,-0.8 4.3,0.7 -0.7,-2.2 -7.2,-4.3 -5.1,-2 -2.5,2.3 -5.4,-1 -2.4,0.8 -2.7,-2.6 -0.3,-6.2 -0.6,-4.6 -5.5,0.5 -3.9,-2.1 -3.3,-0.7 -4.5,4.4 -5.8,1 -3.6,1.6 -6.7,-1 -4.5,0 -4.9,-3.1 -6.5,-3 -5.4,-0.8 -5.7,0.8 -3.9,1.1 -8.4,-2.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MZ\"\r\n              data-name=\"Mozambique\"\r\n              data-id=\"MZ\"\r\n              d=\"m 1203,640.7 -0.8,-2.9 0,0 0,0 -4.6,3.7 -6.2,2.5 -3.3,-0.1 -2.1,1.9 -3.9,0.1 -1.4,0.8 -6.7,-1.8 -2.1,0.3 -1.6,6 0.7,7.3 0.3,0 1.9,2 2.2,4.6 0.1,8.2 -2.5,1.3 -1.9,4.5 -3.4,-4 -0.2,-4.5 1.3,-2.9 -0.3,-2.6 -2.1,-1.6 -1.6,0.6 -3,-3 -17.1,5.2 0.3,4.5 0.3,2.4 4.6,-0.1 2.6,1.3 1.1,1.6 2.6,0.5 2.8,2 -0.3,8.1 -1.3,4.4 -0.5,4.7 0.8,1.9 -0.8,3.7 -0.9,0.6 -1.6,4.6 -6.2,7.2 2.2,9 1.1,4.5 -1.4,7.1 0.4,2.3 0.6,2.9 0.3,2.8 4.1,0 0.7,-3.3 -1.4,-0.5 -0.3,-2.6 2.6,-2.4 6.8,-3.4 4.6,-2.2 2.5,-2.3 0.9,-2.6 -1.2,-1.1 1.1,-3 0.5,-6.2 -1,0.3 0,-1.9 -0.8,-3.7 -2.4,-4.8 0.7,-4.6 2.3,-1.4 4.1,-4.6 2.2,-1.1 6.7,-6.8 6.4,-3.1 5.2,-2.5 3.7,-3.9 2.4,-4.4 1.9,-4.6 -0.9,-3.1 0.2,-9.9 -0.4,-5.6 0.4,-6.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MR\"\r\n              data-name=\"Mauritania\"\r\n              data-id=\"MR\"\r\n              d=\"m 949.8,413.3 -20.3,-15.5 -0.2,9.7 -17.9,-0.3 -0.2,16.3 -5.2,0.5 -1.4,3.3 0.9,9.2 -21.6,-0.1 -1.2,2.2 2.8,2.7 1.4,3 -0.7,3.2 0.6,3.2 0.5,6.3 -0.8,5.9 -1.7,3.2 0.4,3.4 2,-2 2.7,0.5 2.8,-1.4 3.1,0 2.6,1.8 3.7,1.7 3.2,4.7 3.6,4.4 1.9,-1.2 1,-3.7 1.8,-0.2 3.8,1.8 3.2,-1.3 2.1,0.4 0.9,-1.4 22.3,-0.1 1.3,-4.4 -1,-0.8 -2.4,-27.5 -2.4,-27.4 8.4,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MW\"\r\n              data-name=\"Malawi\"\r\n              data-id=\"MW\"\r\n              d=\"m 1169.2,661.5 0.1,-2.3 -1.2,-1.9 0.1,-2.8 -1.5,-4.7 1.7,-3.5 -0.1,-7.7 -1.9,-4.1 0.2,-0.7 0,0 -1.1,-1.7 -5.4,-1.2 2.6,2.8 1.2,5.4 -1,1.8 -1.2,5.1 0.9,5.3 -1.8,2.2 -1.9,5.9 2.9,1.7 3,3 1.6,-0.6 2.1,1.6 0.3,2.6 -1.3,2.9 0.2,4.5 3.4,4 1.9,-4.5 2.5,-1.3 -0.1,-8.2 -2.2,-4.6 -1.9,-2 -0.3,0 0,0.8 1.1,0.3 1,3.4 -0.2,0.8 -1.9,-2.5 -1,1.6 -0.8,-1.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MY\"\r\n              data-name=\"Malaysia\"\r\n              data-id=\"MY\"\r\n              d=\"m 1543.6,532.7 -4.7,-2.8 -0.9,1.1 1.4,2.7 -0.4,4.7 2.1,3.4 1,5.3 3.4,4.3 0.8,3.2 6.7,5 5.4,4.8 4,-0.5 0.1,-2.1 -2.3,-5.6 -2.1,-1.8 -0.5,-3.8 -0.6,-2.1 0.5,-2.9 -0.5,-4.3 -2.6,-4.3 -3.5,-3.8 -1.3,-0.6 -1.7,2.6 -3.7,0.8 -0.6,-3.3 z m 99,11 -1.2,-3.1 3.8,-0.4 0.3,-2.4 -4.8,-2 -3.8,-1.7 -0.4,-2.8 -3.1,-3.2 -2.3,0 -2.5,5 -4.1,4.4 -0.1,3.1 -0.1,4.1 -2.7,-0.2 -1.1,2.2 -2.7,-3.3 -2.6,4 -3.8,5 -6.7,1.4 -2.4,1.2 -0.9,5.4 -4.4,1.2 -4.1,-2.2 1,4.3 3.9,3.5 3.6,-1.2 3.6,0.4 3.2,-3.2 2.7,-0.6 5.4,1.8 4.5,-1.3 2.7,-8.9 2,-2.2 1.7,-7.2 6.4,0 5,1 4,-2.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NA\"\r\n              data-name=\"Namibia\"\r\n              data-id=\"NA\"\r\n              d=\"m 1105.4,683.7 -10.3,2.5 -13.4,-0.9 -3.7,-3 -22.5,0.3 -0.9,0.4 -3.2,-2.9 -3.6,-0.1 -3.3,1 -2.7,1.2 0.2,4.9 4.4,6.2 1.1,4 2.8,7.7 2.7,5.2 2.1,2.6 0.6,3.5 0,7.6 1.6,9.8 1.2,4.6 1,6.2 1.9,4.7 3.9,4.8 2.7,-3.2 2.1,1.8 0.8,2.7 2.4,0.5 3.3,1.2 2.9,-0.5 5,-3.2 1.1,-23.6 0.6,-18.5 5.4,-0.2 0.9,-22.7 4.1,-0.2 8.6,-2.2 2,2.6 3.7,-2.5 1.6,0 3.2,-1.5 0,-0.5 -2.1,-1.4 -3.6,-0.4 -4.6,1.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NE\"\r\n              data-name=\"Niger\"\r\n              data-id=\"NE\"\r\n              d=\"m 1051.3,425.6 -8.8,-2.8 -18.6,12.2 -15.8,12.5 -7.8,2.8 0.1,14.6 -3,4.3 -0.5,3.9 -4.9,1 -7.6,0.6 -2,2.2 -3.6,0.3 -0.5,3.1 0.8,2.9 3.1,4.1 0.2,3.1 6.4,1.4 -0.1,4.4 1.9,-1.9 2,0 4.3,3.7 0.3,-5.7 1.6,-2.6 0.8,-3.6 1.4,-1.4 6,-0.8 5.6,2.4 2.1,2.4 2.9,0.1 2.6,-1.5 6.8,3.3 2.8,-0.2 3.3,-2.7 3.3,0.2 1.6,-0.9 3,0.4 4.3,1.8 4.3,-3.5 1.3,0.2 3.9,7 1,-0.2 0.2,-2 1.6,-0.4 0.5,-2.9 -3.6,-0.2 0,-4.1 -2.4,-2.3 2.3,-8.4 6.9,-6 0.2,-8.3 1.8,-12.9 1.1,-2.7 -2.3,-2.2 -0.2,-2.1 -2,-1.6 -1.6,-9.9 -3.9,2.4 -3.1,-3.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NG\"\r\n              data-name=\"Nigeria\"\r\n              data-id=\"NG\"\r\n              d=\"m 1055.8,492.7 -1,0.2 -3.9,-7 -1.3,-0.2 -4.3,3.5 -4.3,-1.8 -3,-0.4 -1.6,0.9 -3.3,-0.2 -3.3,2.7 -2.8,0.2 -6.8,-3.3 -2.6,1.5 -2.9,-0.1 -2.1,-2.4 -5.6,-2.4 -6,0.8 -1.4,1.4 -0.8,3.6 -1.6,2.6 -0.3,5.7 -0.2,2.1 1.2,3.8 -1.1,2.5 0.6,1.7 -2.7,4 -1.7,1.9 -1,4 0.1,4.1 -0.3,10.2 4.9,0 4.3,0 3.9,4.2 1.9,4.6 3,3.9 4.5,0.2 2.2,-1.4 2.1,0.3 5.8,-2.3 1.4,-4.5 2.7,-6.1 1.6,-0.1 3.3,-3.7 2.1,-0.1 3.2,2.6 3.9,-2.2 0.5,-2.6 1.2,-2.6 0.8,-3.2 3,-2.6 1.1,-4.5 1.2,-1.4 0.7,-3.3 1.5,-4 4.6,-5 0.3,-2.1 0.6,-1.1 -2.3,-2.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NI\"\r\n              data-name=\"Nicaragua\"\r\n              data-id=\"NI\"\r\n              d=\"m 514.1,476.8 -1.9,-0.2 -0.9,0.9 -2,0.8 -1.4,0 -1.3,0.8 -1.1,-0.3 -0.9,-0.9 -0.6,0.2 -0.8,1.5 -0.5,-0.1 -0.3,1.3 -2.1,1.8 -1.1,0.7 -0.6,0.8 -1.5,-1.3 -1.4,1.7 -1.2,0 -1.3,0.2 -0.2,3.1 -0.8,0 -0.8,1.5 -1.8,0.3 -0.4,0.4 -0.9,-1 -0.7,1 2.6,2.9 2.2,2 1,2.1 2.5,2.6 1.8,2 0.9,-0.8 3.5,1.7 1.4,-0.8 1.7,0.5 0.8,1.3 1.7,0.4 1.4,-1.3 -0.8,-1.1 -0.1,-1.7 1.2,-1.6 -0.2,-1.7 0.7,-2.7 0.9,-0.7 0.1,-2.8 -0.2,-1.7 0.4,-2.8 0.9,-2.5 1.4,-2.2 -0.3,-2.3 0.4,-1.4 0.6,-0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NL\"\r\n              data-name=\"Netherlands\"\r\n              data-id=\"NL\"\r\n              d=\"m 1005.5,243.9 2.9,0 1.1,-2.3 1,-5.6 -1,-2 -3.9,-0.2 -6.5,2.6 -3.9,8.9 -2.5,1.7 0,0 3.6,0.5 4.4,-1.3 3.1,2.7 2.8,1.4 -1.1,-6.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NO\"\r\n              data-name=\"Norway\"\r\n              data-id=\"NO\"\r\n              d=\"m 1088.8,133.1 -6.9,1.1 -7.3,-0.3 -5.1,4.4 -6.7,-0.3 -8.5,2.3 -10.1,6.8 -6.4,4 -8.8,10.7 -7.1,7.8 -8.1,5.8 -11.2,4.8 -3.9,3.6 1.9,13.4 1.9,6.3 6.4,3 6,-1.4 8.5,-6.8 3.3,3.6 1.7,-3.3 3.4,-4 0.9,-6.9 -3.1,-2.9 -1,-7.6 2.3,-5.3 4.3,0.1 1.3,-2.2 -1.8,-1.9 5.7,-7.9 3.4,-6.1 2.2,-3.9 4,0.1 0.6,-3.1 7.9,0.9 0,-3.5 2.5,-0.3 2.1,-1.4 5.1,2.9 5.3,-0.3 4.7,1.3 3.4,-2.4 1.1,-3.9 5.8,-1.8 5.7,2.1 -0.8,3.8 3.2,-0.5 6.4,-2.2 0,0 -5.4,-3.3 4.8,-1.4 -13.6,-3.9 z m -22.6,-33.3 -5.6,-1 -1.9,-1.7 -7.2,0.9 2.6,1.5 -2.2,1.2 6.7,1.1 7.6,-2 z m -25.4,-8.3 -4.8,-1.6 -5.1,0.2 -1,1.5 -5,0 -2.2,-1.5 -9.3,1.6 3.2,3.5 7.6,3.8 5.7,1.4 -3,1.7 8.4,2.9 4.4,-0.2 0.9,-3.9 3,-0.9 1.2,-3.4 8.5,-1.8 -12.5,-3.3 z m 24.2,-3.1 -9.1,-1 -3.2,1.2 -5.3,-1 -10.4,1.2 4.3,2 5.1,0 0.9,1.3 10.6,0.7 10.1,-0.5 4.3,-2.4 -7.3,-1.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NP\"\r\n              data-name=\"Nepal\"\r\n              data-id=\"NP\"\r\n              d=\"m 1455.2,394.8 -6.5,-0.6 -6.4,-1.5 -5,-2.8 -4.5,-1.2 -2.5,-3.1 -3.2,-0.9 -6.4,-4.1 -4.7,-2 -1.9,1.5 -2.8,2.9 -0.9,5.9 5.7,2.5 5.8,3.1 7.7,3.5 7.6,0.9 3.8,3.2 4.3,0.6 6.8,1.5 4.6,-0.1 0.1,-2.5 -1.5,-4.1 -0.1,-2.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NZ\"\r\n              data-name=\"New Zealand\"\r\n              data-id=\"NZ\"\r\n              d=\"m 1868.6,832.8 0.9,-2.6 -5.8,2.9 -3.4,3.4 -3.2,1.6 -5.9,4.6 -5.6,3.2 -7,3.2 -5.5,2.4 -4.3,1.1 -11.3,6.1 -6.4,4.6 -1.1,2.3 5.1,0.4 1.5,2.1 4.5,0.1 4,-1.8 6.3,-2.8 8.1,-6.2 4.7,-4.1 6.2,-2.3 4,-0.1 0.6,-2.9 4.6,-2.5 7,-4.5 4.2,-2.9 2.1,-2.6 0.5,-2.6 -5.6,2.5 0.8,-2.6 z m 28.8,-30.5 1.9,-5.7 -3.1,-1.7 -0.8,-3.6 -2.3,0.5 -0.4,4.6 0.8,5.7 0.9,2.7 -0.9,1.1 -0.6,4.4 -2.4,4.1 -4.2,5 -5.3,2.2 -1.7,2.4 3.7,2.5 -0.8,3.5 -6.9,5.1 1.4,0.9 -0.4,1.6 5.9,-2.5 5.9,-4.2 4.5,-3.4 1.6,-1.2 1.5,-2.7 2.8,-2 3.8,0.2 4.2,-3.8 5.1,-5.7 -2.1,-0.8 -4.6,2.5 -3.2,-0.5 -2.9,-2.1 2.3,-4.9 -1.2,-1.8 -2.9,4.4 0.4,-6.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"OM\"\r\n              data-name=\"Oman\"\r\n              data-id=\"OM\"\r\n              d=\"m 1301,437.8 2.1,-2 0.8,-1.8 1.6,-3.8 -0.1,-1.4 -2.1,-0.8 -1.6,-2.1 -2.9,-3.7 -3.3,-1.1 -4.1,-0.9 -3.3,-2.3 -2.9,-4.3 -2.8,0 -0.1,4.2 1.1,0.8 -2.4,1.3 0.3,2.6 -1.4,2.6 0.1,2.6 2.9,4.5 -2.6,12.7 -16.1,6.4 5.2,10.5 2.1,4.4 2.5,-0.3 3.6,-2.2 3.1,0.6 2.5,-1.8 -0.2,-2.5 2.1,-1.6 3.4,0 1.2,-1.3 0.2,-3.1 3.3,-2.4 2.6,0 0.4,-0.8 -1,-4.2 0.6,-3.2 1,-1.5 2.5,0.3 1.7,-4.4 z m -16.6,-30.4 0.2,-2.6 -0.7,-0.6 -1.3,2.2 1.3,2.2 0.5,-1.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PK\"\r\n              data-name=\"Pakistan\"\r\n              data-id=\"PK\"\r\n              d=\"m 1388.3,346.3 -9.4,-2.6 -2.9,-5 -4.7,-3 -2.8,0.7 -2.4,1.2 -5.8,0.8 -5.3,1.3 -2.4,2.8 1.9,2.8 1.4,3.2 -2,2.7 0.8,2.5 -0.9,2.3 -5.1,-0.2 3,4.2 -3,1.6 -1.5,3.8 1.1,3.8 -1.7,1.8 -2.1,-0.6 -4,0.9 -0.2,1.7 -4,0 -2.3,3.6 0.8,5.4 -6.6,2.6 -3.8,-0.5 -0.9,1.4 -3.3,-0.8 -5.3,0.9 -9.6,-3.2 3.2,3.3 2.8,3.9 5.6,2.7 1,5.7 2.7,1 0.9,2.9 -7.4,3.3 -1.2,7.4 7.6,-0.9 8.9,-0.1 9.9,-1.2 4.9,4.8 2.1,4.6 4.2,1.6 3.2,-4.2 12,0 -1.8,-5.5 -3.5,-3.2 -1.3,-4.9 -4,-2.9 4.9,-6.6 6.4,0.5 4.5,-6.7 2.1,-6.5 3.9,-6.3 -1,-4.5 3.7,-3.7 -5,-3.1 -2.9,-4.3 -3.2,-5.6 1.9,-2.8 8.5,1.6 5.7,-1 3.7,-5.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PA\"\r\n              data-name=\"Panama\"\r\n              data-id=\"PA\"\r\n              d=\"m 543.5,517 -2,-1.8 -1.7,-1.9 -2.5,-1.1 -3.1,-0.2 0.3,-0.6 -3.1,-0.4 -2,1.9 -3.5,1.3 -2.5,1.6 -2.7,0.5 -1.5,-1.6 -0.5,0.5 -2.3,-0.3 0.2,-1.3 -1.9,-2.3 -2.2,0.6 -0.1,2.5 1.1,1 -0.8,0.7 0.1,1.2 -0.5,1.3 -0.4,1.2 0.6,1 0.3,-1.4 2.4,0 1.4,0.7 2.3,0.5 1,2.5 1.8,0.4 0.8,-1.1 0.8,3.8 2.6,-0.3 0.9,-0.9 1.5,-0.9 -2.5,-3.4 0.6,-1.3 1.3,-0.3 2.3,-1.6 1.2,-2.2 2.5,-0.4 2.7,1.8 1,2.1 1.4,0.4 -1.5,1.7 1,3.5 1.8,1.8 0.9,-3.1 1.8,0.5 1.1,-1.9 -1.1,-3.8 0.7,-0.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PE\"\r\n              data-name=\"Peru\"\r\n              data-id=\"PE\"\r\n              d=\"m 584.3,599.5 -2.9,-3.4 -1.7,-0.1 3.5,-6.5 -4.4,-3 -3.3,0.6 -2.1,-1.1 -3,1.7 -4.2,-0.8 -3.4,-6.7 -2.7,-1.7 -1.8,-3 -3.7,-3 -1.5,0.6 0.8,4.9 -1.7,4.1 -6,6.7 -6.7,2.5 -3.3,5.5 -0.9,4.3 -3.1,2.6 -2.5,-3.2 -2.3,-0.7 -2.3,0.5 -0.2,-2.3 1.5,-1.5 -0.7,-2.7 -4.4,4 -1.6,4.5 3,6.1 -1.7,2.8 4.1,2.6 4.5,4.1 2,4.7 2.4,2.9 6,12.7 6.2,11.7 5.4,8.4 -0.8,1.8 2.8,5.3 4.6,3.9 10.7,6.9 11.6,6.4 0.7,2.6 5.9,3.7 2.7,-1.6 1.2,-3.3 2.8,-6.9 -2.8,-5.3 1.1,-2.1 -1.2,-2.4 1.9,-3.2 -0.3,-5.4 -0.1,-4.5 1.1,-2.1 -5.5,-10.3 -3,1.1 -2.6,-0.7 -0.2,-9.7 -4.4,3.8 -4.9,-0.2 -2.3,-3.4 -3.7,-0.3 1,-2.8 -3.3,-3.8 -2.6,-5.8 1.5,-1.1 -0.1,-2.7 3.3,-1.9 -0.7,-3.4 1.3,-2.2 0.4,-3 6.2,-4.3 4.6,-1.2 0.7,-1 5.1,0.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PH\"\r\n              data-name=\"Philippines\"\r\n              data-id=\"PH\"\r\n              d=\"m 1684.6,518.6 -0.6,-2.3 -0.8,-3.2 -4.8,-3 0.8,4.9 -3.9,0.2 -0.7,2.8 -4.2,1.7 -2.2,-2.8 -2.8,2.4 -3.4,1.7 -1.9,5.4 1.1,1.9 3.9,-3.6 2.7,0.3 1.5,-2.7 3.8,3 -1.5,3.1 1.9,4.6 6.8,3.7 1.4,-3 -2.1,-4.7 2.4,-3.2 2.5,6.4 1.5,-5.8 -0.6,-3.5 -0.8,-4.3 z m -14.5,-11.8 0,-6.1 -3.6,6.1 0.5,-4.2 -3,0.3 -0.3,4 -1.2,1.8 -1,1.7 3.8,4.4 1.6,-1.9 1.4,-4 1.8,-2.1 z m -30.1,6.1 2.6,-4.4 3.4,-3.5 -1.5,-5.2 -2.4,6.3 -2.9,4.4 -3.8,4 -2.4,4.4 7,-6 z m 17.4,-16.4 1.2,3 -0.1,3.3 0.5,2.9 3.3,-1.9 2.4,-2.7 -0.2,-2.6 -3.6,0 -3.5,-2 z m 20,-1.7 -1.8,-2.4 -5.4,-0.1 4,4.8 0.3,2.4 -3.3,-0.5 1.2,3.9 1.7,0.3 0.7,4.5 2.5,-1.4 -1.7,-4 -0.4,-2.1 4.5,1.7 -2.3,-7.1 z m -22.9,-5.8 -2.2,-2.3 -4.8,-0.2 3.4,4.8 2.8,3.2 0.8,-5.5 z m -6.4,-34.6 -3.3,0 -0.9,5.8 1.1,9.9 -2.6,-2 1.2,6 1.2,2.8 3.3,3.7 0.4,-2.3 1.8,1.4 -1.5,1.7 0.1,2.6 2.9,1.4 5,-0.9 4,3.8 1.1,-2.4 2.5,3.4 4.8,3.1 0.2,-2.9 -2,-1.6 0.1,-3.4 -7.5,-3.6 -2.3,0.8 -3.1,-0.7 -2,-5.1 0.1,-5.1 3,-2.1 0.6,-5.3 -2.7,-4.6 0.4,-2.6 -0.7,-1.6 -1.5,1.6 -3.7,-1.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PG\"\r\n              data-name=\"Papua New Guinea\"\r\n              data-id=\"PG\"\r\n              d=\"m 1850.7,615.6 0.9,-1.8 -2.4,-2.2 -2.5,-4 -1.6,-1.5 -0.5,-1.9 -0.8,0.7 0.9,4.8 2.2,4 2.2,2.5 1.6,-0.6 z m -21.2,-8.6 2.1,-3.9 0.4,-3.5 -1.1,-1 -3.4,0.1 0.4,3.7 -3.3,2.3 -1.7,2.2 -3.2,0.5 -0.4,-3.4 -0.8,0.1 -1,3.1 -3.1,0.5 -5,-0.9 -0.6,1.9 3.1,1.8 4.5,1.9 2.9,0 3,-1.5 3.2,-1.6 1,-1.8 3,-0.5 z m -27.8,12.2 -0.9,-4.3 5.2,-0.7 -1.1,-3.3 -9.1,-4 -0.6,-3.7 -2.9,-3.2 -3.7,-3.3 -10.2,-3.6 -9.6,-4.4 -1,20.7 -1.5,20.8 5.7,0.2 3.1,1.1 4.6,-2.2 -0.3,-4.7 3.6,-2.1 4.9,-1.8 7,2.8 2.4,5.6 2.9,3.5 3.9,4 5.5,1 4.8,0.7 1.1,1.6 3.8,-0.4 0.8,-1.8 -5.6,-2.7 1.8,-1.2 -4.2,-1.1 0.5,-2.8 -3.2,0.2 -3,-6.8 -4.7,-4.1 z m 34.7,-18.4 -0.5,-3.3 -2,-2.1 -2.1,-2.6 -2.3,-1.5 -1.9,-1.4 -2.9,-1.8 -1.6,1.5 3.9,1.9 3.1,2.7 2.4,2.1 1.2,2.4 0.8,3.8 1.9,-1.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PL\"\r\n              data-name=\"Poland\"\r\n              data-id=\"PL\"\r\n              d=\"m 1069.4,228.3 -4.6,-0.1 -0.5,-1.4 -4.8,-1.1 -5.7,2.1 -7.1,2.8 -3.1,1.7 1.4,3.1 -1.2,1.6 2,2.2 1.4,3.3 -0.1,2.1 2.3,3.9 2.4,1.9 3.7,0.6 -0.1,1.7 2.7,1.2 0.6,-1.5 3.4,0.6 0.7,2 3.6,0.3 2.6,3.1 0.3,0.4 1.9,-0.9 2.7,2.2 2.8,-1.3 2.4,0.6 3.4,-0.8 4.9,2.3 1.1,0.4 -1.6,-2.8 3.8,-5.1 2.3,-0.7 0.3,-1.8 -3.1,-5.3 -0.5,-2.7 -1.9,-2.9 2.7,-1.2 -0.3,-2.4 -1.7,-2.3 -0.6,-2.7 -1.4,-1.9 -2.5,-0.6 -8.7,0.1 -5.9,-0.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KP\"\r\n              data-name=\"Dem. Rep. Korea\"\r\n              data-id=\"KP\"\r\n              d=\"m 1644.7,302.3 0,0 -5.5,-3.6 0.1,3.5 -6.3,2.6 2.7,3.3 -4.6,-0.2 -3.6,-2 -1,4.4 -3.8,3.4 -2.1,4 3.3,1.7 3.4,0.7 0.8,1 0.4,3.5 1.1,1.2 -0.9,0.7 -0.1,2.9 1.9,1 1.6,0.6 0.8,1.2 1.3,-0.5 0,-1.3 3.1,1.3 0.1,-0.6 2.4,0.2 0.7,-2.9 3.5,-0.3 2.1,-0.4 -0.1,-1.6 -4.3,-2.8 -2.6,-1 0.2,-0.7 -1.2,-2.8 1.3,-1.7 2.9,-1 1,-1.9 0.3,-1.1 1.9,-1.4 -2.8,-4.5 0.3,-2.1 0.9,-2 2.2,0.3 0,0 0,0 0,0 -1.4,-1.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PT\"\r\n              data-name=\"Portugal\"\r\n              data-id=\"PT\"\r\n              d=\"m 937.6,335.9 -0.4,-2.1 2,-2.5 0.8,-1.7 -1.8,-1.9 1.6,-4.3 -2,-3.8 2.2,-0.5 0.3,-3 0.9,-0.9 0.2,-4.9 2.4,-1.7 -1.3,-3.1 -3,-0.2 -0.9,0.8 -3,0 -1.2,-3.1 -2.1,0.9 -1.9,1.6 0.1,2.1 0.9,2.2 0.1,2.7 -1.3,3.8 -0.4,2.5 -2.2,2.3 -0.6,4.2 1.2,2.4 2.3,0.6 0.4,4 -1,5.1 2.8,-0.7 2.7,0.9 2.2,-1.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PY\"\r\n              data-name=\"Paraguay\"\r\n              data-id=\"PY\"\r\n              d=\"m 655.7,700.5 -0.3,-1.9 -5.4,-3.3 -5.1,-0.1 -9.5,1.9 -2.1,5.6 0.2,3.4 -1.5,7.6 11.2,10.4 4.6,1 7.2,4.7 5.9,2.5 1.1,2.8 -4.2,9.6 5.7,1.8 6.2,1 4.2,-1.1 4.3,-4.8 0.3,-5.7 0.7,-3.6 0.3,-3.8 -0.3,-3.5 -2.1,-1.2 -2,1.1 -2,-0.3 -0.9,-2.5 -1,-5.8 -1.2,-1.9 -3.9,-1.7 -2.1,1.2 -6,-1.2 -0.4,-8.6 -1.9,-3.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PS\"\r\n              data-name=\"Palestine\"\r\n              data-id=\"PS\"\r\n              d=\"m 1166.9,366.1 -2,-0.9 -0.7,4.3 1.4,0.7 -1.2,0.8 -0.1,1.7 2.4,-0.8 0.6,-1.9 -0.4,-3.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"QA\"\r\n              data-name=\"Qatar\"\r\n              data-id=\"QA\"\r\n              d=\"m 1258,415.5 0.8,-3.8 -0.5,-3.7 -1.9,-2 -1.4,0.7 -1.1,3.3 0.8,4.7 1.8,1.2 1.5,-0.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"RO\"\r\n              data-name=\"Romania\"\r\n              data-id=\"RO\"\r\n              d=\"m 1108.1,266.3 -2.1,0 -1,1.5 -3.6,0.6 -1.6,0.9 -2.4,-1.5 -3.2,0 -3.2,-0.7 -1.9,1.3 -2.9,1.3 -1.9,4.2 -2.6,4.3 -3.8,1.1 2.9,2.5 0.8,1.9 3.2,1.5 0.7,2.5 3.1,1.8 1.4,-1.3 1.4,0.7 -1.1,1.1 1,1 1.8,2.6 1.9,-0.5 4,1 7.5,0.3 2.3,-1.6 5.8,-1.4 4,2.2 3,0.7 0.4,-7.4 1.6,0.5 2.3,-1.3 -0.4,-1.6 -2.4,-1.1 -2.2,1 -2.4,-1.1 -1.3,-2.8 0.2,-2.7 -0.6,-2.7 -3.4,-3.7 -1.9,-2.6 -1.8,-1.9 -1.6,-0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path id=\"RU\"\r\n              data-name=\"Russia\"\r\n              data-id=\"RU\"\r\n              style=\"fill-rule:evenodd\"\r\n              d=\"m 1332.3,95.1 -4.5,-4 -13.6,-4.1 -9.4,-2.1 -6.2,0.9 -5.3,2.9 5.8,0.8 6.6,3.2 8,1.7 11.5,1.3 7.1,-0.6 z m -178.7,-7.3 0.9,-0.6 -5.7,-0.9 -2.8,0.7 -1.3,1 -1.5,-1.2 -5.2,0.1 -6.2,0.8 7.7,0.1 -1.1,1.3 4.4,1 3.6,-0.7 0.1,-0.7 2.9,-0.3 4.2,-0.6 z m 200.5,9.9 -1.5,-1.8 -12.5,-2.6 -3,-0.3 -2.2,0.5 1.2,6 18,-1.8 z m 15.2,6.3 -9.2,-0.7 3.4,-1.2 -8.2,-1.5 -6.1,1.9 -1,2 1.5,2.1 -6.9,-0.1 -5.3,2.6 -4.3,-1.1 -9.3,0.5 0.3,1.3 -9.2,0.7 -4.9,2.4 -4.2,0.2 -1.2,3.3 5.5,2.6 -7.7,0.7 -9.5,-0.3 -5.8,1.1 4.8,5.4 6.9,4.3 -9.6,-3 -7.9,0.3 -5.1,2 4.5,3.8 -4.9,-1 -2.1,-5 -4.2,-2.8 -1.8,0.1 3.6,3.7 -4.6,3.5 8.1,4.2 0.4,5.4 2.9,2.9 4.7,0.5 0.4,3.5 4.4,3.1 -1.9,2.6 0.5,2.7 -3.7,1.4 -0.5,2 -5.3,-0.8 3.5,-7.8 -0.5,-3.6 -6.7,-3.3 -3.8,-7.3 -3.7,-3.7 -3.6,-1.6 0.8,-4.2 -2.9,-2.9 -11.3,-1.4 -2.1,1 0.5,4.7 -4.3,4.7 1.2,1.7 4.7,4.1 0.1,2.6 5.3,0.5 0.8,1.1 5.8,2.9 -1,2.8 -18.5,-6.1 -6.6,-1.7 -12.8,-1.6 -1.2,1.7 5.9,3.1 -2.7,3.6 -6.4,-3.2 -5,2.2 -7.6,0.1 -2.1,1.9 -5.3,-0.6 2.5,-3.3 -3.2,-0.2 -12.3,4.6 -7.6,2.6 0.4,3.5 -6,1.2 -4,-1.9 -1.2,-3 5,-0.7 -3.6,-3 -12.2,-1.8 4.3,3.4 -0.8,3.2 4.7,3.3 -1.1,3.8 -4.6,-1.9 -4,-0.3 -8,5.4 4.2,4.1 -3.2,1.4 -11.4,-3.5 -2.1,2.1 3.3,2.4 0.2,2.7 -3.8,-1.4 -6,-1.7 -1.9,-5.8 -1,-2.6 -8,-4 2.9,-0.7 20.1,4.2 6.4,-1.5 3.7,-2.9 -1.6,-3.6 -4,-2.6 -17.6,-6.1 -11.6,-1.3 -7.6,-3.2 -3.6,1.8 0,0 -6.4,2.2 -3.2,0.5 0.4,3.7 7.2,3.7 -2.8,4.1 6.4,6.3 -1.7,4.8 4.9,4.1 -0.9,3.7 7.3,3.9 -0.9,2.9 -3.3,3.3 -7.9,7.4 0,0 5.3,2.8 -4.5,3.2 0,0 0.9,1 -2.6,3.4 2.5,5.5 -1.6,1.9 2.4,1.4 1,2.8 2.1,3.6 5.2,1.5 1,1.4 2.3,-0.7 4.8,1.4 1,2.9 -0.6,1.6 3.7,3.9 2.2,1.1 -0.1,1.1 3.4,1.1 1.7,1.6 -1.6,1.3 -3.9,-0.2 -0.8,0.6 1.5,2 2,3.9 0,0 1.8,0.2 1,-1.4 1.5,0.3 4.8,-0.5 3.8,3.4 -0.9,1.3 0.7,1.9 4,0.2 2.2,2.7 0.2,1.2 6.6,2.2 3.5,-1 3.6,2.9 2.9,-0.1 7.6,2 0.4,1.9 -1.3,3.2 1.8,3.4 -0.3,2.1 -4.7,0.5 -2.2,1.7 0.4,2.8 4.2,-1 0.4,1.3 -6.8,2.6 3.2,2.4 -3.2,5.2 -3.4,1 5,3.6 6.2,2.4 7.4,5.1 0.5,-0.7 4.5,1.1 7.7,1 7.5,2.9 1.1,1.2 2.9,-1 5.1,1.3 2.1,2.5 3.5,1.4 1.5,0.2 4.3,3.8 2.4,0.4 0.5,-1.5 2.6,-2.5 0,0 -7.3,-7.3 -0.4,-4.1 -5.9,-5.9 3.5,-6.3 4.6,-1.1 1.4,-3.7 -2.8,-1 -0.2,-3.2 -4.2,-4.1 -3.6,0.2 -5.3,-4.3 1.7,-4.7 -1.7,-1.2 2.1,-6.8 6,3.6 -0.7,-4.6 8.1,-6.6 7.5,-0.2 11.9,4.3 6.6,2.4 4.3,-2.5 7.6,-0.2 7.3,3.2 0.8,-1.8 6.9,0.3 0.2,-3 -9.4,-4.2 3.6,-2.9 -1.5,-1.7 3.9,-1.6 -5,-4.1 1.4,-2.1 16.8,-2.1 1.7,-1.5 10.8,-2.2 3.1,-2.5 9,1.3 4.3,6.3 4.3,-1.5 7,2.1 1.2,3.3 4.4,-0.4 9.1,-5.7 -0.8,1.9 8.3,4.7 18.1,15.5 1.1,-3.3 8.3,3.6 6.2,-1.6 3.2,1.1 4.1,3.6 3.9,1.2 3.3,2.6 6,-0.9 4.3,3.8 1.7,-0.5 4.7,-1 6.6,-5.4 5.9,-2.9 5.3,1.9 5.1,0.1 4.7,2.9 5,0.2 7.9,1.6 2.4,-4.3 -4,-3.6 1.3,-6.4 6.9,2.5 4.8,0.8 6.6,1.5 3.7,4.6 8.4,2.6 3.9,-1.1 5.7,-0.8 5.4,0.8 6.5,3 4.9,3.1 4.5,0 6.7,1 3.6,-1.6 5.8,-1 4.5,-4.4 3.3,0.7 3.9,2.1 5.5,-0.5 7.3,2.3 4.4,-3.9 -1.9,-2.7 -0.1,-6.5 1.2,-2 -2.5,-3.3 -3.7,-1.5 1.7,-3 5.1,-1.1 6.2,-0.2 8.5,1.8 5.9,2.3 7.7,6.1 3.8,2.7 4.4,3.7 6.1,6.1 9.9,1.9 8.9,4.5 6,5.8 7.5,0 2.6,-2.5 6.9,-1.8 1.3,5.6 -0.4,2.3 2.8,6.8 0.6,6 -6.8,-1.1 -2.9,2.2 4.7,5.3 3.8,7.3 -2.5,0.1 1.9,3.1 0,0 1.4,1.1 0,0 0,0 0,0 -0.4,-2 4,-4.5 5.1,3 3.2,-0.1 4.4,-3.6 1,-3.7 2.1,-7.1 1.9,-7.2 -1.3,-4.3 1,-9 -5.2,-9.9 -5.5,-7.3 -1.3,-6.2 -4.7,-5.1 -12.7,-6.7 -5.6,-0.4 -0.3,3 -5.8,-1.3 -5.7,-3.8 -8,-0.7 4.9,-14.1 3.5,-11.5 13.1,-1.8 14.9,1 2.5,-2.8 7.9,0.8 4.3,4.3 6.4,-0.6 8.4,-1.6 -7.7,-3.5 0,-9.8 9.1,-1.9 12.1,7.1 3.6,-6.4 -3.2,-4.7 4.7,-0.5 6.5,8.1 -2.4,4.6 -0.8,6 0.3,7.5 -5.7,1.3 2.8,2.7 -0.1,3.6 6.4,8.3 16,13.4 10.5,8.8 5.7,4.3 1.6,-5.7 -4.5,-6.2 5.7,-1.5 -5.4,-6.9 5,-3.1 -4.7,-2.6 -3.4,-5 4.1,-0.2 -9,-8.6 -6.7,-1.4 -2.9,-2.4 -1.1,-5.6 -3.1,-3.9 7,0.8 1.3,-2.5 4.7,2.2 6.1,-4.6 11.4,4 -1.7,-2.6 2,-3.6 1.5,-4 3.1,-0.7 6.5,-4.3 9.8,1.2 -0.9,-1.5 -3.8,-2.3 -4.1,-1.6 -9.1,-4.6 -8.1,-3 6.1,0.4 2,-2.5 0,0 -32.9,-21.9 -9.4,-2.3 -15.7,-2.6 -7.9,0.3 -15.2,-1.4 1.8,2.3 8.5,3.4 -2.5,1.8 -14.2,-4.8 -6.8,0.6 -9.2,-1.1 -7,0.2 -3.9,1.1 -7.2,-1.6 -5.1,-3.8 -6.5,-2.2 -9.2,-0.9 -14.7,1 -16.1,-4 -7.8,-3 -40.1,-3.4 -2.1,2.2 9.3,4.8 -7.5,-0.7 -1,1.5 -9.7,-1.6 -5,1.4 -9.3,-2.4 3,5.5 -8.9,-2.1 -10,-4.1 -0.4,-2.2 -6,-3.3 -9.8,-2.6 -6.1,0 -9.3,-0.9 4.7,3.9 -17.2,-0.8 -3.9,-2.3 -13.3,-0.9 -5.3,0.8 -0.1,1.3 -5.8,-3.2 -2.3,0.9 -7.2,-1.2 -5.6,-0.7 1.1,-1.5 6.6,-2.8 2.3,-1.5 -2.4,-2.5 -5.5,-1.9 -11.5,-2.3 -10.8,-0.1 -1.9,1.2 -4.1,-2.4 z m -162.2,31.6 -9.9,-4.3 -3.1,-4.3 3.3,-4.9 2.8,-5 8.6,-4.7 9.8,-2.4 11.3,-2.4 1.3,-1.5 -4.2,-1.9 -6.6,0.6 -4.9,1.8 -11.7,0.9 -10.1,3.1 -6.8,2.7 2.5,2.2 -6.6,4.4 3.9,0.7 -5.4,4.3 1.6,2.8 -3.4,1.1 1.9,2.8 7.9,1.4 2.2,2.3 13.4,0.7 2.2,-0.4 z m 314,-24.7 -17.9,-2.6 -10.2,-0.2 -3.4,0.9 3.4,3.4 12.4,3.2 4.5,-1.2 14.2,0.2 -3,-3.7 z m 25.2,2.3 -11.7,-1.3 -8.2,-0.7 1.7,1.6 10.3,2 6.8,0.4 1.1,-2 z m -12.5,9.5 -2.5,-1.4 -8.3,-1.9 -4.1,0.5 -0.8,2 1.1,0.2 8.8,0.6 5.8,0 z m 162.6,12.3 -6,-3.6 -1.4,2.2 3.5,1.6 3.9,-0.2 z m -612.4,93.9 -0.6,-1.5 0.2,-1.7 -2.2,-0.9 -5,-1.1 -6.3,2 -0.7,2.6 5.9,0.7 8.7,-0.1 z m 589.7,21.8 -7.2,-6.2 -5.1,-6 -6.8,-5.8 -4.9,-4 -1.3,0.8 4.4,2.8 -1.9,2.8 6.8,8.3 7.8,6 6.4,8.3 2.4,4.6 5.5,6.8 3.8,6 4.6,5.2 -0.1,-4.8 6.5,3.8 -3,-4.4 -9.5,-6.3 -3.7,-9 8.9,2 -13.6,-10.9 z\"\r\n              inkscape:connector-curvature=\"0\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"RW\"\r\n              data-name=\"Rwanda\"\r\n              data-id=\"RW\"\r\n              d=\"m 1147.6,579.4 -3.3,1.9 -1.4,-0.6 -1.6,1.8 -0.2,3.8 -0.8,0.4 -0.6,3.5 3.5,0.5 1.7,-3.6 3,0.4 0,0 1.6,-0.8 0.4,-3.7 -2.3,-3.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"EH\"\r\n              data-name=\"W. Sahara\"\r\n              data-id=\"EH\"\r\n              d=\"m 929.6,396.2 -0.8,0 0,0 0.1,3.4 -3.4,0.2 -1.8,1.5 -2.5,0 -1.9,-0.9 -4.6,0.7 -1.9,5 -1.7,0.4 -2.8,8.1 -7.8,6.8 -2,8.8 -2.3,2.9 -0.7,2.3 -12.4,0.5 -0.1,0 -0.3,2.7 1.2,-2.2 21.6,0.1 -0.9,-9.2 1.4,-3.3 5.2,-0.5 0.2,-16.3 17.9,0.3 0.2,-9.7 0.1,-1.2 0,-0.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SA\"\r\n              data-name=\"Saudi Arabia\"\r\n              data-id=\"SA\"\r\n              d=\"m 1228.7,387 -10.2,-0.5 -16.7,-12.7 -8.5,-4.5 -6.7,-1.7 -0.9,1 -10.4,3.1 6.1,6.4 -1.7,1 -0.7,2.2 -4,0.8 -1.1,2.3 -2.1,2 -6.1,-1 -0.5,2.5 0,2.2 -0.6,3.5 2.7,0 3.2,4.4 3.7,5.1 2.5,4.7 1.7,1.5 1.7,3.3 -0.2,1.4 2.1,3.7 3,1.3 2.8,2.5 3.6,7 0,3.8 0.9,4.4 4,6.1 2.5,1 4.1,4.4 1.9,5.2 3.2,5.3 3,2.3 0.6,2.5 1.8,1.9 0.9,2.8 2.3,-2.1 -0.7,-2.7 1.2,-3.1 2.4,1.7 1.5,-0.6 6.4,-0.2 1,0.7 5.4,0.6 2.1,-0.3 1.6,2.1 2.5,-1 3.5,-6.7 5,-2.9 15.7,-2.4 16.1,-6.4 2.6,-12.7 -2.9,-4.5 -1,1.3 -16.8,-3.2 -2.6,-6.4 -0.4,-1.5 -1.2,-2.4 -1.5,0.4 -1.8,-1.2 -1,-1.6 -0.9,-2.1 -1.7,-1.8 -1,-2.1 0.4,-2.1 -0.6,-2.7 -4,-2.6 -1.2,-2.3 -2.9,-1.4 -2.7,-5.5 -3.8,0.2 -1.7,-3.1 -4.9,-0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SD\"\r\n              data-name=\"Sudan\"\r\n              data-id=\"SD\"\r\n              d=\"m 1180.8,468.5 0.4,-4.2 1.6,-2 4,-1 2.6,-3.6 -3.1,-2.4 -2.2,-1.6 -2.5,-7.6 -1.1,-6.5 1.1,-1.2 -2.1,-6.2 -21.8,0 -21.4,0 -22.1,0 0.5,12.7 -6.3,0 0,2.7 1.1,25.2 -4.8,-0.4 -2.4,4.7 -1.4,3.9 1.2,1.5 -1.8,1.9 0.7,2.7 -1.4,2.6 -0.5,2.4 2,-0.4 1.2,2.5 0.1,3.7 2.1,1.8 0,1.6 0.7,2.7 3.3,4 0,2.6 -0.8,2.6 0.3,2 2,1.8 0.5,0.3 1.7,-0.7 1.9,-1.2 1.3,-5.7 1.5,-2.9 4,-0.9 1,1.8 3,3.7 1.5,0.5 2,-1.1 4.1,0.3 0.8,1.3 5.5,0 0.2,-1.3 2.9,-1.2 0.5,-1.9 2.1,-1.3 4.8,3.7 2.8,-0.7 2.7,-4.5 3,-3.5 -0.6,-3.9 -1.4,-1.8 3.4,-0.3 0.3,-1.5 2.6,0.5 -0.5,4.7 0.8,4.6 2.9,2.5 0.7,2.2 0,3.1 0.8,0.1 0,-0.7 1.4,-6.7 2.6,-1.8 0.5,-2.6 2.3,-4.8 3.2,-3.2 2.1,-6.2 0.7,-5.5 -0.7,-2.5 1.9,-9.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SS\"\r\n              data-name=\"S. Sudan\"\r\n              data-id=\"SS\"\r\n              d=\"m 1166,508.7 -0.7,-2.2 -2.9,-2.5 -0.8,-4.6 0.5,-4.7 -2.6,-0.5 -0.3,1.5 -3.4,0.3 1.4,1.8 0.6,3.9 -3,3.5 -2.7,4.5 -2.8,0.7 -4.8,-3.7 -2.1,1.3 -0.5,1.9 -2.9,1.2 -0.2,1.3 -5.5,0 -0.8,-1.3 -4.1,-0.3 -2,1.1 -1.5,-0.5 -3,-3.7 -1,-1.8 -4,0.9 -1.5,2.9 -1.3,5.7 -1.9,1.2 -1.7,0.7 3.8,2.5 3.1,2.6 0.1,2 3.8,3.4 2.4,2.7 1.5,3.8 4.2,2.5 0.9,2.1 3.5,5.2 2.5,0.8 1.5,-1.1 2.6,0.4 3.1,-1.3 1.4,2.7 5,4.2 0,0 2.3,-1.7 3.5,1.4 4.5,-1.5 4,0.1 3.4,-3 3.4,-3.8 3.8,-4.2 -3.5,-6.9 -2.6,-1.5 -1,-2.5 -2.9,-3.1 -3.4,-0.5 1.8,-3.6 3,-0.1 0.8,-2 -0.2,-5 -0.8,-0.1 0,-3.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SN\"\r\n              data-name=\"Senegal\"\r\n              data-id=\"SN\"\r\n              d=\"m 908.9,479.2 -3.6,-4.4 -3.2,-4.7 -3.7,-1.7 -2.6,-1.8 -3.1,0 -2.8,1.4 -2.7,-0.5 -2,2 -1.3,3.3 -2.8,4.4 -2.5,1.2 2.7,2.3 2.2,5 6.1,-0.2 1.3,-1.5 1.8,-0.1 2.1,1.5 1.8,0.1 1.8,-1.1 1.1,1.8 -2.4,1.5 -2.4,-0.1 -2.4,-1.4 -2.1,1.5 -1,0 -1.4,0.9 -5,-0.1 0.8,4.9 3,-1.1 1.8,0.2 1.5,-0.7 10.3,0.3 2.7,0.1 4,1.5 1.3,-0.1 0.4,-0.7 3,0.5 0.8,-0.4 0.3,-2 -0.4,-2.4 -2.1,-1.8 -1.1,-3.7 -0.2,-3.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SL\"\r\n              data-name=\"Sierra Leone\"\r\n              data-id=\"SL\"\r\n              d=\"m 919.4,518.7 -1.5,0.3 0,-2.3 -0.9,-1.7 0.2,-1.8 -1.2,-2.7 -1.5,-2.3 -4.5,0 -1.3,1.2 -1.5,0.2 -1,1.4 -0.7,1.7 -3,2.8 0.7,4.7 0.9,2.3 2.9,3.5 4.1,2.5 1.5,0.5 1.3,-2 0.3,-1.9 2.6,-3.4 2.6,-3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SV\"\r\n              data-name=\"El Salvador\"\r\n              data-id=\"SV\"\r\n              d=\"m 487.2,487 0.6,-2.5 -0.7,-0.7 -1.1,-0.5 -2.5,0.8 -0.1,-0.9 -1.6,-1 -1.1,-1.3 -1.5,-0.5 -1.4,0.4 0.2,0.7 -1.1,0.7 -2.1,1.6 -0.2,1 1.4,1.3 3.1,0.4 2.2,1.3 1.9,0.6 3.3,0.1 0.7,-1.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"RS\"\r\n              data-name=\"Serbia\"\r\n              data-id=\"RS\"\r\n              d=\"m 1084.8,285.2 -3.2,-1.5 -0.8,-1.9 -2.9,-2.5 -3.2,-0.2 -3.7,1.6 0,0 1.5,2.4 1.7,1.8 -1.7,2.3 0,0 1.8,0 -1,2.7 2.7,2.3 -0.5,2.9 -1.2,0.3 1.5,1.1 0.8,0.8 1.8,0.7 2,1.2 -0.4,0.6 1.2,-0.5 0.5,-2 0.9,-0.4 0.8,0.9 1,0.4 0.8,1 0.8,0.3 1.1,1.1 0.8,0 -0.5,1.5 -0.5,0.7 0.2,0.5 1.7,-0.4 2.4,-0.1 0.7,-0.9 -0.6,-0.7 0.7,-2 1.7,-1.9 -2.8,-2.6 -0.7,-2.3 1.1,-1.4 -1,-1 1.1,-1.1 -1.4,-0.7 -1.4,1.3 -3.1,-1.8 -0.7,-2.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SR\"\r\n              data-name=\"Suriname\"\r\n              data-id=\"SR\"\r\n              d=\"m 668,533.8 -4.6,0.5 -0.6,1.1 -6.7,-1.2 -1,5.7 -3.5,1.6 0.3,1.5 -1.1,3.3 2.4,4.6 1.8,0.1 0.7,3.5 3.3,5.6 3.1,0.5 0.5,-1.3 -0.9,-1.3 0.5,-1.8 2.3,0.6 2.7,-0.7 3.2,1.4 1.4,-2.7 0.6,-2.9 1,-2.8 -2.1,-3.7 -0.4,-4.4 3.1,-5.5 -6,-1.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SK\"\r\n              data-name=\"Slovakia\"\r\n              data-id=\"SK\"\r\n              d=\"m 1087.4,260.9 -4.9,-2.3 -3.4,0.8 -2.4,-0.6 -2.8,1.3 -2.7,-2.2 -1.9,0.9 -0.3,-0.4 -1.5,0 -0.6,1.1 -1.1,0.3 -0.2,1.4 -0.9,0.3 -0.1,0.6 -1.6,0.6 -2.2,-0.1 -0.6,1.4 -0.3,0.8 0.7,2.1 2.6,1.6 1.9,0.7 4.1,-0.8 0.3,-1.2 1.9,-0.2 2.3,-1 0.6,0.4 2.2,-0.7 1,-1.5 1.6,-0.4 5.5,1.9 1,-0.6 0.7,-2.5 1.1,-1.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SI\"\r\n              data-name=\"Slovenia\"\r\n              data-id=\"SI\"\r\n              d=\"m 1059.4,277 -1.2,-2.1 -0.8,-0.1 -0.9,1.1 -4.3,0.1 -2.4,1.4 -4.2,-0.4 -0.3,3 1.4,2.7 -1.1,0.5 3.5,0.2 0.8,-1 1.8,1 2,0.1 -0.2,-1.7 1.7,-0.6 0.3,-2.5 3.9,-1.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SE\"\r\n              data-name=\"Sweden\"\r\n              data-id=\"SE\"\r\n              d=\"m 1077.7,161.1 -1.9,-2.2 -1.7,-8.4 -7.2,-3.7 -5.9,-2.7 -2.5,0.3 0,3.5 -7.9,-0.9 -0.6,3.1 -4,-0.1 -2.2,3.9 -3.4,6.1 -5.7,7.9 1.8,1.9 -1.3,2.2 -4.3,-0.1 -2.3,5.3 1,7.6 3.1,2.9 -0.9,6.9 -3.4,4 -1.7,3.3 4.2,8.4 4.4,6.7 2,5.7 5.3,-0.3 2.2,-4.7 5.7,0.5 2,-5.5 0.6,-10 4.6,-1.3 3.3,-6.6 -4.8,-3.3 -3.6,-4 2.1,-8.1 7.7,-4.9 6.1,-4.5 -1.2,-3.5 3.4,-3.9 7,-1.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SZ\"\r\n              data-name=\"Swaziland\"\r\n              data-id=\"SZ\"\r\n              d=\"m 1150.5,736.6 -2.7,-1.2 -1.6,0.5 -0.7,1.8 -1.6,2.4 -0.1,2.2 3,3.5 3.3,-0.7 1.3,-2.8 -0.3,-2.8 -0.6,-2.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SY\"\r\n              data-name=\"Syria\"\r\n              data-id=\"SY\"\r\n              d=\"m 1183.5,359.9 11,-6.7 0.9,-7.8 -1.2,-4.7 2.7,-1.6 2.1,-4.1 -5.9,1.1 -2.8,-0.2 -5.7,2.5 -4.3,0 -3,-1.2 -5.5,1.8 -1.9,-1.3 0.1,3.6 -1.2,1.5 -1.2,1.4 -1,2.6 1.1,5 2.4,0.3 1.2,2.5 -2.6,2.4 -0.9,3.5 0.3,2.6 -0.6,1 0.1,0 6.3,2.5 9.6,-6.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TD\"\r\n              data-name=\"Chad\"\r\n              data-id=\"TD\"\r\n              d=\"m 1108.4,447.6 -22.4,-12.2 -22.3,-12.2 -5.4,3.5 1.6,9.9 2,1.6 0.2,2.1 2.3,2.2 -1.1,2.7 -1.8,12.9 -0.2,8.3 -6.9,6 -2.3,8.4 2.4,2.3 0,4.1 3.6,0.2 -0.5,2.9 2.2,4.1 0.5,4.2 -0.2,4.3 3.1,5.8 -3.1,-0.1 -1.6,0.4 -2.5,-0.6 -1.2,3 3.3,3.7 2.5,1.1 0.8,2.6 1.8,4.4 -0.9,1.7 4.7,-0.4 1,-1.7 0.9,0.2 1.4,1.4 7.1,-2.4 2.3,-2.5 2.9,-2.2 -0.6,-2.3 1.6,-0.6 5.4,0.4 5.2,-2.9 4,-7 2.8,-2.5 3.5,-1.1 0,-1.6 -2.1,-1.8 -0.1,-3.7 -1.2,-2.5 -2,0.4 0.5,-2.4 1.4,-2.6 -0.7,-2.7 1.8,-1.9 -1.2,-1.5 1.4,-3.9 2.4,-4.7 4.8,0.4 -1.1,-25.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TG\"\r\n              data-name=\"Togo\"\r\n              data-id=\"TG\"\r\n              d=\"m 981.7,502.2 -4.9,-0.1 -0.4,1.9 2.4,3.3 -0.1,4.6 0.6,5.1 1.4,2.3 -1.2,5.7 0.4,3.2 1.5,4 1.2,2.2 4.6,-1.3 -1.4,-4.4 0.2,-14.6 -1.1,-1.3 -0.2,-3.1 -2,-2.3 -1.7,-1.9 0.7,-3.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TH\"\r\n              data-name=\"Thailand\"\r\n              data-id=\"TH\"\r\n              d=\"m 1562.7,481.4 1.5,-2.9 -0.5,-5.4 -5.2,-5.5 -1.3,-6.3 -4.9,-5.2 -4.3,-0.4 -0.8,2.2 -3.2,0.2 -1.8,-1.2 -5.3,3.8 -1,-5.7 0.4,-6.7 -3.8,-0.3 -0.9,-3.8 -2.6,-1.9 -3,1.4 -2.8,2.8 -3.9,0.3 -1.5,6.9 -2.2,1.1 3.5,5.6 4.1,4.6 2.9,4.2 -1.4,5.6 -1.7,1.1 1.7,3.2 4.2,5.1 1,3.5 0.2,3 2.8,5.8 -2.6,5.9 -2.2,6.6 -1.3,6.1 -0.3,3.9 1.2,3.6 0.7,-3.8 2.9,3.1 3.2,3.5 1.1,3.2 2.4,2.4 0.9,-1.1 4.7,2.8 0.6,3.3 3.7,-0.8 1.7,-2.6 -3.1,-3.3 -3.4,-0.8 -3.3,-3.6 -1.4,-5.5 -2.6,-5.8 -3.7,-0.2 -0.7,-4.6 1.4,-5.6 2.2,-9.3 -0.2,-7 4.9,-0.1 -0.3,5 4.7,-0.1 5.3,2.9 -2.1,-7.7 3,-5.2 7.1,-1.3 5.3,1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TJ\"\r\n              data-name=\"Tajikistan\"\r\n              data-id=\"TJ\"\r\n              d=\"m 1344.1,315.7 -2.1,0.2 -1.3,-1.8 0.2,-2.9 -6.4,1.5 -0.5,4 -1.5,3.5 -4.4,-0.3 -0.6,2.8 4.2,1.6 2.4,4.7 -1.3,6.6 1.8,0.8 3.3,-2.1 2.1,1.3 0.9,-3 3.2,0.1 0.6,-0.9 -0.2,-2.6 1.7,-2.3 3.2,1.5 0,2 1.6,0.3 1,5.4 2.6,2.1 1.5,-1.3 2.1,-0.7 2.5,-2.9 3.8,0.5 5.4,0 -1.8,-3.7 -0.6,-2.5 -3.5,-1.4 -1.6,0.6 -3,-5.9 -9.5,0.9 -7.1,-2 -5.4,0.5 -0.6,-3.7 5.9,1.1 1.4,-2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TM\"\r\n              data-name=\"Turkmenistan\"\r\n              data-id=\"TM\"\r\n              d=\"m 1325.6,334.2 -0.8,-4 -7.7,-2.7 -6.2,-3.2 -4.2,-3 -7,-4.4 -4.3,-6.4 -2,-1.2 -5.5,0.3 -2.3,-1.3 -1.9,-4.9 -7.8,-3.3 -3.3,3.6 -3.8,2.2 1.6,3.1 -5.8,0.1 -2.5,0.3 -4.9,-4.9 -3.8,-1.7 -5.5,1.3 -1.8,2 2.5,4 -0.5,-4.5 3.7,-1.6 2.4,3.6 4.6,3.7 -4,2 -5.3,-1.5 0.1,5.2 3.5,0.4 -0.4,4.4 4.5,2.1 0.7,6.8 1.8,4.5 4.4,-1.2 3,-3.7 3.5,0.2 2.1,-1.2 3.8,0.6 6.5,3.3 4.3,0.7 7.3,5.7 3.9,0.2 1.6,5.5 5.9,2.4 3.9,-0.8 0.4,-3 4,-0.9 2.5,-2 -0.1,-5.2 4.1,-1.2 0.3,-2.3 2.9,1.7 1.6,0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TL\"\r\n              data-name=\"Timor-Leste\"\r\n              data-id=\"TL\"\r\n              d=\"m 1676.8,631.9 4.9,-1.8 6,-2.8 2.2,-1.7 -2,-0.8 -1.8,0.8 -4,0.2 -4.9,1.4 -0.8,1.5 0.5,1.3 -0.1,1.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TN\"\r\n              data-name=\"Tunisia\"\r\n              data-id=\"TN\"\r\n              d=\"m 1038,361.4 -2,-1 -1.5,-3 -2.8,-0.1 -1.1,-3.5 3.4,-3.2 0.5,-5.6 -1.9,-1.6 -0.1,-3 2.5,-3.2 -0.4,-1.3 -4.4,2.4 0.1,-3.3 -3.7,-0.7 -5.6,2.6 -1,3.3 1,6.2 -1.1,5.3 -3.2,3.6 0.6,4.8 4.5,3.8 0,1.5 3.4,2.6 2.6,11.3 2.6,-1.4 0.4,-2.7 -0.7,-2.6 3.7,-2.5 1.5,-2 2.6,-1.8 0.1,-4.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TR\"\r\n              data-name=\"Turkey\"\r\n              data-id=\"TR\"\r\n              d=\"m 1166.6,308.9 -9.7,-4.4 -8.5,0.2 -5.7,1.7 -5.6,4 -9.9,-0.8 -1.6,4.8 -7.9,0.2 -5.1,6.1 3.6,3 -2,5 4.2,3.6 3.7,6.4 5.8,-0.1 5.4,3.5 3.6,-0.8 0.9,-2.7 5.7,0.2 4.6,3.5 8,-0.7 3.1,-3.7 4.6,1.5 3.2,-0.6 -1.7,2.4 2.3,3 1.2,-1.4 1.2,-1.5 -0.1,-3.6 1.9,1.3 5.5,-1.8 3,1.2 4.3,0 5.7,-2.5 2.8,0.2 5.9,-1.1 2.1,-1 6.2,0.9 2.1,1.6 2.3,-1.1 0,0 -3.7,-5.2 0.7,-2 -2.9,-7.3 3.3,-1.8 -2.4,-1.9 -4.2,-1.5 0,-3.1 -1.3,-2.2 -5.6,-3 -5.4,0.3 -5.5,3.2 -4.5,-0.6 -5.8,1 -7.8,-2.4 z m -49.6,4 2,-1.9 6.1,-0.4 0.7,-1.5 -4.7,-2 -0.9,-2.4 -4.5,-0.8 -5,2 2.7,1.6 -1.2,3.9 -1.1,0.7 0.1,1.3 1.9,2.9 3.9,-3.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TW\"\r\n              data-name=\"Taiwan\"\r\n              data-id=\"TW\"\r\n              d=\"m 1642.3,427.2 1.2,-10.2 0.1,-3.9 -2.9,-1.9 -3.3,4.8 -1.9,6.3 1.5,4.7 4,5.4 1.3,-5.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TZ\"\r\n              data-name=\"Tanzania\"\r\n              data-id=\"TZ\"\r\n              d=\"m 1149.6,578.6 -2,0.8 2.3,3.6 -0.4,3.7 -1.6,0.8 0,0 0.3,2.5 1.2,1.5 0,2 -1.4,1.4 -2.2,3.3 -2.1,2.3 -0.6,0.1 -0.3,2.7 1.1,0.9 -0.2,2.7 1,2.6 -1.3,2.4 4.5,4.3 0.3,3.9 2.7,6.5 0,0 0.3,0.2 2.2,1.1 3.5,1.1 3.2,1.9 5.4,1.2 1.1,1.7 0,0 0.4,-1.2 2.8,3.4 0.3,6.7 1.8,2.4 0,0.1 2.1,-0.3 6.7,1.8 1.4,-0.8 3.9,-0.1 2.1,-1.9 3.3,0.1 6.2,-2.5 4.6,-3.7 0,0 -2,-1.4 -2.2,-6.3 -1.8,-3.9 0.4,-3.1 -0.3,-1.9 1.7,-3.9 -0.2,-1.6 -3.5,-2.3 -0.3,-3.6 2.8,-7.9 -8,-6.3 -0.4,-3.7 -20.2,-13 0,0 -2.8,2.8 -1.9,2.9 2.2,2.2 -3.2,1.6 -0.7,-0.8 -3.2,0.4 -2.5,1.4 -1.6,-2.4 1.1,-4.5 0.2,-3.8 0,0 0,0 -6.2,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"UG\"\r\n              data-name=\"Uganda\"\r\n              data-id=\"UG\"\r\n              d=\"m 1167.6,545.1 -3.4,3 -4,-0.1 -4.5,1.5 -3.5,-1.4 -2.3,1.7 0,0 -0.3,7.5 2.3,0.8 -1.8,2.3 -2.2,1.7 -2.1,3.3 -1.2,3 -0.3,5.1 -1.3,2.4 -0.1,4.8 1.4,0.6 3.3,-1.9 2,-0.8 6.2,0.1 0,0 -0.3,-2.5 2.6,-3.7 3.5,-0.9 2.4,-1.5 2.9,1.2 0.3,0.5 0,-0.3 1.6,-2.6 2.7,-4.2 2.1,-4.7 -2.6,-7.3 -0.7,-3.2 -2.7,-4.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"UA\"\r\n              data-name=\"Ukraine\"\r\n              data-id=\"UA\"\r\n              d=\"m 1138.5,241 -4.8,0.5 -1.5,-0.3 -1,1.4 -1.8,-0.2 0,0 -4.1,0.3 -1.2,1.4 0.2,3.1 -2,-0.6 -4.3,0.3 -1.5,-1.5 -1.6,1.1 -2,-0.9 -3.8,-0.1 -5.6,-1.5 -5,-0.5 -3.7,0.2 -2.4,1.6 -2.2,0.3 3.1,5.3 -0.3,1.8 -2.3,0.7 -3.8,5.1 1.6,2.8 -1.1,-0.4 -1.1,1.7 -0.7,2.5 2.9,1.7 0.6,1.6 1.9,-1.3 3.2,0.7 3.2,0 2.4,1.5 1.6,-0.9 3.6,-0.6 1,-1.5 2.1,0 1.1,-0.9 3.2,-0.6 3.9,1.9 2,0.3 2.5,1.6 0,2.1 1.9,1.1 1.1,2.6 2,1.5 -0.2,1 1,0.6 -1.2,0.5 -3,-0.2 -0.6,-0.9 -1,0.5 0.5,1.1 -1.1,2 -0.5,2.1 -1.2,0.7 2.4,1.1 2.2,-1 2.4,1.1 3.3,-4.6 1.3,-3.4 4.5,-0.8 0.7,2.4 8,1.5 1.7,1.4 -4.5,2.1 -0.7,1.2 5.8,1.8 -0.6,2.9 3,1.3 6.3,-3.6 5.3,-1.1 0.6,-2.2 -5.1,0.4 -2.7,-1.5 -1,-3.9 3.9,-2.3 4.6,-0.3 3,-2 3.9,-0.5 -0.4,-2.8 2.2,-1.7 4.7,-0.5 0.3,-2.1 -1.8,-3.4 1.3,-3.2 -0.4,-1.9 -7.6,-2 -2.9,0.1 -3.6,-2.9 -3.5,1 -6.6,-2.2 -0.2,-1.2 -2.2,-2.7 -4,-0.2 -0.7,-1.9 0.9,-1.3 -3.8,-3.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"UY\"\r\n              data-name=\"Uruguay\"\r\n              data-id=\"UY\"\r\n              d=\"m 692.5,787 -2.1,-3.7 1.9,-3 -3.8,-4.3 -4.8,-3.5 -6.2,-4.1 -1.9,0.2 -6.2,-4.9 -3.4,0.7 -0.5,5.1 -0.3,6.5 1.1,6.3 -0.9,1.4 0.4,4.2 3.9,3.5 3.6,-0.2 5.4,2.7 2.7,-0.6 4.2,1.2 5.3,-3.5 1.6,-4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"US\"\r\n              data-name=\"United States\"\r\n              data-id=\"US\"\r\n              d=\"m 116.7,450.7 2,-0.9 2.5,-1.4 0.2,-0.4 -0.9,-2.2 -0.7,-0.8 -0.8,-0.6 -1.9,-1.1 -0.4,-0.1 -0.4,0.6 0,1.3 -1.2,1 -0.4,0.7 0.4,2.3 -0.6,1.8 1.2,0.9 1,-1.1 z m -0.6,-9.9 0.6,-0.7 -1.2,-1 -1.8,-0.6 -0.7,0.5 0,0.4 0.5,0.5 0.6,1.4 2,-0.5 z m -3,-3.4 -2.6,-0.2 -0.6,0.7 2.9,0.2 0.3,-0.7 z m -4.7,-0.9 -1.1,-2.1 -0.3,-0.4 -1.7,0.9 0.1,0.2 0.4,1.5 1.8,0.2 0.4,0.1 0.4,-0.4 z m -8.3,-4.2 0.3,-1.5 -1.3,-0.1 -1,0.6 -0.4,0.5 1.6,1.1 0.8,-0.6 z m 412.1,-173.2 -1.6,0 -1.3,2.4 -10.1,0 -16.8,0 -16.7,0 -14.8,0 -14.7,0 -14.5,0 -15,0 -4.8,0 -14.6,0 -13.9,0 -1.6,5.1 -2.4,5.1 -2.3,1.6 1.1,-5.9 -5.8,-2.1 -1.4,1.2 -0.4,2.9 -1.8,5.4 -4.2,8.3 -4,5.6 -4,5.6 -5.4,5.8 -1.1,4.7 -2.8,5.3 -3.9,5.2 1,3.4 -1.9,5.2 1.5,5.4 1.3,2.2 -0.8,1.5 0.4,9 2.5,6.5 -0.8,3.5 1,1 4.6,0.7 1.3,1.7 2.8,0.3 -0.1,1.9 2.2,0.7 2.1,3.7 -0.3,3.2 6.3,-0.5 7,-0.7 -1,1.3 7.1,3.1 10.7,4.4 10.7,0 4.3,0 0.8,-2.6 9.3,0 1.3,2.2 2.1,2 2.4,2.8 0.8,3.3 0.4,3.5 2.2,1.9 4,1.9 4.8,-5 4.4,-0.1 3.1,2.5 1.6,4.4 1,3.7 2.4,3.6 0.2,4.5 0.8,3 3.9,2 3.6,1.4 2.1,-0.2 -0.6,-2.2 0.4,-3.1 1,-4.4 1.9,-2.8 3.7,-3.1 6,-2.7 6.1,-4.7 4.9,-1.5 3.5,-0.4 3.5,1.4 4.9,-0.8 3.3,3.4 3.8,0.2 2.4,-1.2 1.7,0.9 1.3,-0.8 -0.9,-1.3 0.7,-2.5 -0.5,-1.7 2.4,-1 4.2,-0.4 4.7,0.7 6.2,-0.8 3,1.5 2,3 0.9,0.3 6.1,-2.9 1.9,1 3,5.3 0.8,3.5 -2,4.2 0.4,2.5 1.6,4.9 2,5.5 1.8,1.4 0.4,2.8 2.6,0.8 1.7,-0.8 2,-3.9 0.7,-2.5 0.9,-4.3 -1.2,-7.4 0.5,-2.7 -1.5,-4.5 -0.7,-5.4 0.1,-4.4 1.8,-4.5 3.5,-3.8 3.7,-3 6.9,-4.1 1.3,-2.2 3.3,-2.3 2.8,-0.4 4.4,-3.8 6,-1.9 4.6,-4.8 0.9,-6.5 0.1,-2.2 -1.4,-0.4 1.5,-6.2 -3,-2.1 3.2,1 0,-4.1 1.9,-2.7 -1,5.3 2,2.5 -2.9,4.4 0.4,0.2 4.4,-5.1 2.4,-2.5 0.6,-2.5 -0.9,-1.1 -0.1,-3.5 1.2,1.6 1.1,0.4 -0.1,1.6 5.2,-4.9 2.5,-4.5 -1.4,-0.3 2.1,-1.8 -0.4,0.8 3.3,0 7.8,-1.9 -1.1,-1.2 -7.9,1.2 4.8,-1.8 3.1,-0.3 2.4,-0.3 4.1,-1.1 2.4,0.1 3.8,-1 1,-1.7 -1.1,-1.4 -0.2,2.2 -2.1,-0.1 -0.6,-3.3 1.1,-3.3 1.4,-1.3 3.9,-3.7 5.9,-1.8 6,-2.1 6.3,-3 -0.2,-2 -2.1,-3.5 2.8,-8.5 -1.5,-1.8 -3.7,1.1 -1.1,-1.7 -5.5,4.7 -3.2,4.9 -2.7,2.8 -2.5,0.9 -1.7,0.3 -1,1.6 -9.3,0 -7.7,0 -2.7,1.2 -6.7,4.2 0.2,0.9 -0.6,2.4 -4.6,2 -3.9,-0.5 -4,-0.2 -2.6,0.7 -0.3,1.8 0,0 -0.1,0.6 -5.8,3.7 -4.5,1.8 -2.9,0.8 -3.7,1.7 -4,0.9 -2.5,-0.3 -2.7,-1.3 2.7,-2.4 0,0 2,-2.2 3.7,-3.4 0,0 0,0 0.7,-2.5 0.5,-3.5 -1.6,-0.7 -4.3,2.8 -0.9,-0.1 0.3,-1.5 3.8,-2.5 1.6,-2.8 0.7,-2.8 -2.7,-2.4 -3.7,-1.3 -1.7,2.4 -1.4,0.6 -2.2,3.1 0.4,-2.1 -2.6,1.5 -2.1,2 -2.6,3.1 -1.3,2.6 0.1,3.8 -1.8,4 -3.3,3 -1.4,0.9 -1.6,0.7 -1.8,0 -0.3,-0.4 -0.1,-3.3 0.7,-1.6 0.7,-1.5 0.6,-3 2.5,-3.5 2.9,-4.3 4.6,-4.7 -0.7,0 -5.4,4 -0.4,-0.7 2.9,-2.3 4.7,-4 3.7,-0.5 4.4,-1.3 3.7,0.7 0.1,0 4.7,-0.5 -1.5,-2.5 0,0 -1.2,-0.2 0,0 0,0 -1.4,-0.3 -0.4,-1.7 -5.1,0.5 -5,1.4 -2.5,-2.3 -2.5,-0.8 3.1,-3.3 -5.3,2 -4.9,2.1 -4.6,1.5 -2.1,-2.1 -5.5,1.3 0.4,-0.9 4.6,-2.6 4.7,-2.5 5.9,-2.1 0,0 0,0 -5.3,-1.6 -4.4,0.8 -3.8,-1.9 -4.6,-1 -3.2,-0.4 -1,-1 0.8,-3.4 z m -240.6,-46.9 6.9,-2.8 0,-1.8 -2.6,-0.4 -3.4,0.9 -6.4,2.1 -2.2,2.7 0.7,1.6 7,-2.3 z m -38.7,-16.4 2.3,-2.3 -2.9,-0.5 -5.7,1 0.8,1.6 1.6,1.1 3.9,-0.9 z m 1.2,-22.3 -3.1,2.2 0.4,0.5 4.2,-0.4 0.3,1.1 1.7,1.2 4.9,-1.2 1.2,-0.6 -3.3,-0.8 -1.6,-1.5 -3.4,0.6 -1.3,-1.1 z m 124.9,-40.2 -4.4,-1.1 -10.2,2.8 -3.2,-0.3 -11,2.3 -4.8,0.6 -7.8,2.5 -4.8,2.6 -8.6,2.5 -7.6,0.1 -6.3,2.9 3.2,1.7 0.7,2.3 -0.8,2.7 2.3,2.1 -1.2,3.5 -9.2,0.2 4.3,-2.8 -3.4,0 -13.1,2.7 -9.1,2.3 1,3.3 -1.2,2.2 4.5,1.4 6.9,-0.7 1.8,1.3 2.9,-1.3 6.1,-1.2 2.7,0 -5.9,2.1 1.1,1 -2.5,2.6 -5.5,1.8 -2.5,-0.5 -7,2.7 -1.8,-0.9 -4.1,0.4 -5.3,3 -7.6,3.1 -5.8,3.4 0.3,2.4 -4,3.3 1.4,1.4 0.5,2.7 7.2,-1.1 0.4,2.1 -3.3,2.1 -3.6,3.5 2.8,0 7.2,-2.3 -1.6,2.9 3.6,-2.1 -0.4,3 4.8,-2.2 0.4,1.1 7.2,-1.8 -6.2,3.4 -5.7,4.5 -5.7,2.1 -2.3,1.2 -10.3,3.6 -4.9,2.4 -6.5,0.7 -8.5,3.3 -6.6,1.8 -8.1,2.8 -0.4,1 10,-1.7 6,-2 6.9,-2 6.1,-1.7 2.8,0.5 8.1,-2.6 4.5,-2.8 10.5,-3.1 3.9,-2.6 6.6,-1.8 7.6,-2.5 8.9,-4.2 -0.2,-2.9 11.1,-4.1 7.4,-3.9 9.2,-3.2 -0.4,1.4 -6.7,1.8 -8.3,5.7 -3.2,3.5 6.4,-1.3 6.1,-1.9 6.5,-1.3 2.9,-0.3 3.5,-4.1 6.3,-1.2 2.6,2.5 6,2.7 6.7,-0.5 5.7,2 3.2,1.1 3.3,6.1 3.7,1.7 7.1,0.2 4.1,0.4 -2.7,5.5 1.6,4.9 -3.3,5.2 2.5,1.9 0.6,2.2 0,0 5.1,-2.9 3.1,-3.7 -4.6,-3.8 1.5,-6.8 1.1,-4.2 -1.7,-2.7 -0.7,-2.4 0.5,-3 -6.4,1.9 -7.6,3.3 -0.2,-3.9 -0.6,-2.6 -2.7,-1.6 -4.2,-0.1 35.4,-32.4 24.3,-20.2 0,0 0,0 -3.5,-0.7 -4.1,-1.6 -6.5,0.8 -2.2,-0.7 -7.1,-0.5 -6.2,-1.6 -4.8,0.5 -4.9,-0.9 2,-1.2 -6.3,-0.3 -3.3,1 0.5,-2.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"UZ\"\r\n              data-name=\"Uzbekistan\"\r\n              data-id=\"UZ\"\r\n              d=\"m 1339.8,303.1 -2.5,1.2 -5.4,4.3 -0.9,4.5 -1.9,0 -2.3,-3 -6.6,-0.2 -2.6,-5 -2.5,-0.1 -1.5,-6.2 -7.5,-4.5 -8.6,0.5 -5.7,0.9 -6.5,-5.5 -4.8,-2.3 -9.1,-4.5 -1.1,-0.5 -11.9,3.6 6.2,22.8 5.8,-0.1 -1.6,-3.1 3.8,-2.2 3.3,-3.6 7.8,3.3 1.9,4.9 2.3,1.3 5.5,-0.3 2,1.2 4.3,6.4 7,4.4 4.2,3 6.2,3.2 7.7,2.7 0.8,4 2.9,0 4.3,1.4 1.3,-6.6 -2.4,-4.7 -4.2,-1.6 0.6,-2.8 4.4,0.3 1.5,-3.5 0.5,-4 6.4,-1.5 -0.2,2.9 1.3,1.8 2.1,-0.2 4.1,0.6 5.2,-4.5 -7.1,-3.3 -3.2,1.6 -4.6,-2.3 3.1,-4.1 -1.8,-0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"VE\"\r\n              data-name=\"Venezuela\"\r\n              data-id=\"VE\"\r\n              d=\"m 642,518.9 -2.2,-1.5 -2.9,0.2 -0.7,-5.1 -4.1,-3.2 -4.4,-0.4 -1.8,-3 4.8,-1.9 -6.7,0.1 -6.9,0.4 -0.2,1.6 -3.2,1.9 -4.2,-0.7 -3.1,-2.9 -6,0.7 -5,-0.1 -0.1,-2.1 -3.5,-3.5 -3.9,-0.1 -1.7,-4.5 -2.1,2 0.6,3 -7.1,2.6 0,4.8 1.6,2.2 -1.5,4.6 -2.4,0.4 -1.9,-5 2.7,-3.7 0.3,-3.3 -1.7,-2.9 3.3,-0.8 0.3,-1.5 -3.7,1.1 -1.6,3.2 -2.2,1.8 -1.8,2.4 -0.9,4.5 -1.8,3.7 2.9,0.5 0.6,2.9 1.1,1.4 0.4,2.5 -0.8,2.4 0.2,1.3 1.3,0.6 1.3,2.2 7.2,-0.6 3.2,0.8 3.8,5.5 2.3,-0.7 4,0.3 3.2,-0.7 2,1.1 -1.2,3.4 -1.3,2.1 -0.5,4.6 1,4.2 1.5,1.9 0.2,1.5 -2.9,3.1 2,1.4 1.4,2.2 1.7,6.4 3,3.4 4.4,-0.5 1.1,-1.9 4.2,-1.5 2.3,-1 0.7,-2.7 4.1,-1.8 -0.3,-1.4 -4.8,-0.5 -0.7,-4 0.3,-4.3 -2.4,-1.6 1,-0.6 4.2,0.8 4.4,1.6 1.7,-1.5 4,-1 6.4,-2.4 2.1,-2.4 -0.7,-1.8 -3.7,-4.8 1.6,-1.8 0,-2.9 3.4,-1.1 1.5,-1.2 -1.9,-2.3 0.6,-2.3 4.6,-3.8 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"VN\"\r\n              data-name=\"Vietnam\"\r\n              data-id=\"VN\"\r\n              d=\"m 1571.6,435 -5.9,-1.6 -3,-2.6 0.2,-3.7 -5.2,-1.1 -3,-2.4 -4.1,3.4 -5.3,0.7 -4.3,0 -2.7,1.5 4,5.1 3.4,5.7 6.8,0.1 3,5.5 -3.3,1.7 -1.3,2.3 7.3,3.8 5.7,7.5 4.3,5.6 4.8,4.4 2,4.5 -0.2,6.4 1.8,4.2 0.1,7.7 -8.9,4.9 2.8,3.8 -5.8,0.5 -4.7,2.5 4.5,3.7 -1.3,4.3 2.3,4 6.6,-5.9 4.1,-5.3 6.1,-4.1 4.3,-4.2 -0.4,-11.2 -4,-11.7 -4.1,-5.1 -5.6,-4 -6.4,-8.3 -5.3,-6.7 0.5,-4.4 3.7,-6 6.5,-5.5 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"VU\"\r\n              data-name=\"Vanuatu\"\r\n              data-id=\"VU\"\r\n              d=\"m 1908.6,676.9 -2.7,-3.6 -0.6,1.7 1.3,2.8 2,-0.9 z m -2,-9.7 -2.3,-2 -0.9,4.9 0.5,1.8 1.2,-0.4 1.3,0.8 0.2,-5.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"YE\"\r\n              data-name=\"Yemen\"\r\n              data-id=\"YE\"\r\n              d=\"m 1271.5,466.2 -2.1,-4.4 -5.2,-10.5 -15.7,2.4 -5,2.9 -3.5,6.7 -2.5,1 -1.6,-2.1 -2.1,0.3 -5.4,-0.6 -1,-0.7 -6.4,0.2 -1.5,0.6 -2.4,-1.7 -1.2,3.1 0.7,2.7 -2.3,2.1 0.4,2.7 -0.6,1.3 0.7,2.9 -1.1,0.3 1.7,2.6 1.3,4.7 1,1.9 0,3.4 1.6,3.8 3.9,0.3 1.8,-0.9 2.7,0.2 0.8,-1.7 1.5,-0.4 1.1,-1.7 1.4,-0.4 4.7,-0.3 3.5,-1.2 3.1,-2.7 1.7,0.4 2.4,-0.3 4.7,-4.5 8.8,-3 5.3,-2.7 0,-2.1 0.9,-2.9 3.9,-1.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ZA\"\r\n              data-name=\"South Africa\"\r\n              data-id=\"ZA\"\r\n              d=\"m 1148.2,713.7 -2.9,-0.6 -1.9,0.8 -2.6,-1.1 -2.2,-0.1 -8,4.7 -5.2,4.7 -2,4.3 -1.7,2.4 -3,0.5 -1.2,3 -0.6,2 -3.6,1.5 -4.4,-0.3 -2.5,-1.8 -2.3,-0.8 -2.7,1.5 -1.5,3.1 -2.7,1.9 -2.8,2.8 -4,0.7 -1.1,-2.3 0.7,-3.8 -3,-6.1 -1.4,-1 -1.1,23.6 -5,3.2 -2.9,0.5 -3.3,-1.2 -2.4,-0.5 -0.8,-2.7 -2.1,-1.8 -2.7,3.2 3.5,8.2 0,0.1 2.5,5.3 3.2,6 -0.2,4.8 -1.7,1.2 1.4,4.2 -0.2,3.8 0.6,1.7 0.3,-0.9 2.1,2.9 1.8,0.1 2.1,2.3 2.4,-0.2 3.5,-2.4 4.6,-1 5.6,-2.5 2.2,0.3 3.3,-0.8 5.7,1.2 2.7,-1.2 3.2,1 0.8,-1.8 2.7,-0.3 5.8,-2.5 4.3,-2.9 4.1,-3.8 6.7,-6.5 3.4,-4.6 1.8,-3.2 2.5,-3.3 1.2,-0.9 3.9,-3.2 1.6,-2.9 1.1,-5.2 1.7,-4.7 -4.1,0 -1.3,2.8 -3.3,0.7 -3,-3.5 0.1,-2.2 1.6,-2.4 0.7,-1.8 1.6,-0.5 2.7,1.2 -0.4,-2.3 1.4,-7.1 -1.1,-4.5 -2.2,-9 z m -20.1,52.8 -2,0.6 -3.7,-4.9 3.2,-4 3.1,-2.5 2.6,-1.3 2.3,2 1.7,1.9 -1.9,3.1 -1.1,2.1 -3.1,1 -1.1,2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ZM\"\r\n              data-name=\"Zambia\"\r\n              data-id=\"ZM\"\r\n              d=\"m 1149.2,626.7 -1.9,-0.5 0.4,-1.3 -1,-0.3 -7.5,1.1 -1.6,0.7 -1.6,4.1 1.2,2.8 -1.2,7.5 -0.8,6.4 1.4,1.1 3.9,2.5 1.5,-1.2 0.3,6.9 -4.3,0 -2.1,-3.5 -2,-2.8 -4.3,-0.8 -1.2,-3.4 -3.4,2 -4.5,-0.9 -1.8,-2.8 -3.5,-0.6 -2.6,0.1 -0.3,-2 -1.9,-0.1 0.5,2 -0.7,3 0.9,3 -0.9,2.4 0.5,2.2 -11.6,-0.1 -0.8,20.3 3.6,5.2 3.5,4 4.6,-1.5 3.6,0.4 2.1,1.4 0,0.5 1,0.5 6.2,0.7 1.7,0.7 1.9,-0.1 3.2,-4.1 5.1,-5.3 2,-0.5 0.7,-2.2 3.3,-2.5 4.2,-0.9 -0.3,-4.5 17.1,-5.2 -2.9,-1.7 1.9,-5.9 1.8,-2.2 -0.9,-5.3 1.2,-5.1 1,-1.8 -1.2,-5.4 -2.6,-2.8 -3.2,-1.9 -3.5,-1.1 -2.2,-1.1 -0.3,-0.2 0,0 0.5,1.1 -1,0.4 -1.2,-1.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ZW\"\r\n              data-name=\"Zimbabwe\"\r\n              data-id=\"ZW\"\r\n              d=\"m 1148.2,713.7 6.2,-7.2 1.6,-4.6 0.9,-0.6 0.8,-3.7 -0.8,-1.9 0.5,-4.7 1.3,-4.4 0.3,-8.1 -2.8,-2 -2.6,-0.5 -1.1,-1.6 -2.6,-1.3 -4.6,0.1 -0.3,-2.4 -4.2,0.9 -3.3,2.5 -0.7,2.2 -2,0.5 -5.1,5.3 -3.2,4.1 -1.9,0.1 -1.7,-0.7 -6.2,-0.7 1.9,5.1 1.1,1.1 1.6,3.7 6,7 2.3,0.7 -0.1,2.2 1.5,4.1 4.2,0.9 3.4,2.9 2.2,0.1 2.6,1.1 1.9,-0.8 2.9,0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SO\"\r\n              data-name=\"Somalia\"\r\n              data-id=\"SO\"\r\n              d=\"m 1223.4,505.7 -2.6,-2.7 -1.2,-2.6 -1.8,-1.2 -2,3.4 -1.1,2.3 2.2,3.5 2.1,3.1 2.2,2.2 18.5,7.6 4.8,-0.1 -15.4,19.1 -7.4,0.3 -4.9,4.5 -3.6,0.1 -1.5,2 -4.8,7.2 0.2,23.2 3.3,5.3 1.3,-1.5 1.3,-3.4 6.1,-7.7 5.3,-4.8 8.3,-6.4 5.6,-5.1 6.4,-8.7 4.7,-7.1 4.6,-9.3 3.2,-8.2 2.5,-7.1 1.3,-6.8 1.1,-2.3 -0.2,-3.4 0.4,-3.7 -0.2,-1.7 -2.1,0 -2.6,2.2 -2.9,0.6 -2.5,0.9 -1.8,0.2 0,0 -3.2,0.2 -1.9,1.1 -2.8,0.5 -4.8,1.9 -6.1,0.8 -5.2,1.6 -2.8,0 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GF\"\r\n              data-name=\"French Guiana\"\r\n              data-id=\"GF\"\r\n              d=\"m 681.4,556.2 1.8,-4.7 3.5,-5.8 -0.9,-2.6 -5.8,-5.4 -4.1,-1.5 -1.9,-0.7 -3.1,5.5 0.4,4.4 2.1,3.7 -1,2.7 -0.6,2.9 -1.4,2.8 2.4,1.3 1.8,-1.8 1.2,0.3 0.8,1.8 2.7,-0.5 2.1,-2.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"FR\"\r\n              data-name=\"France\"\r\n              data-id=\"FR\"\r\n              d=\"m 1025.7,303.8 -1.1,-5.2 -3.2,2.3 -1,2.3 1.4,4.2 2.4,1.2 1.5,-4.8 z m -31.5,-50.9 -2.4,-2.4 -2.2,-0.1 -0.7,-2.2 -4.3,1.2 -1.4,5.1 -11.3,4.8 -4.6,-2.6 1.4,7 -8.2,-1.6 -6.4,1.3 0.4,4.6 7.5,2.4 3.6,3.1 5.1,6.5 -1,12.3 -2.7,3.7 2,2.4 9.4,2.8 1.9,-1.3 5.7,2.8 6,-0.8 0.5,-3.7 7.4,-2 10,1.6 4.5,-3.4 0.5,-2.7 -2.7,-0.8 -1.5,-4.8 1.7,-1.8 -1.6,-2.4 0.2,-1.7 -1.8,-2.7 -2.4,0.9 0,-2.8 3.5,-3.5 -0.2,-1.6 2.3,0.6 1.3,-1 0.5,-4.5 2.3,-4.2 -7.1,-1.2 -2.4,-1.6 -1.4,0.1 -1.1,-0.5 -4.4,-2.8 -2.5,0.4 -3.4,-2.9 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ES\"\r\n              data-name=\"Spain\"\r\n              data-id=\"ES\"\r\n              d=\"m 985,325.7 0,-0.2 -0.5,0 -0.3,-0.4 -0.1,0.2 -0.1,0.2 0,0.2 0.5,0 0.4,0.1 0.1,-0.1 z m -0.8,-1.6 0.3,0 0.6,-0.7 0,-0.3 -0.3,-0.2 -1.1,0.2 -0.2,0.3 0,0.3 -0.3,0.1 -0.1,0.4 0.1,0.2 0.8,0.1 0.2,-0.4 z M 967,296 l -8.2,-0.2 -4.2,0.3 -5.4,-1 -6.8,0 -6.2,-1.1 -7.4,4.5 2,2.6 -0.4,4.4 1.9,-1.6 2.1,-0.9 1.2,3.1 3,0 0.9,-0.8 3,0.2 1.3,3.1 -2.4,1.7 -0.2,4.9 -0.9,0.9 -0.3,3 -2.2,0.5 2,3.8 -1.6,4.3 1.8,1.9 -0.8,1.7 -2,2.5 0.4,2.1 4.8,1 1.4,3.7 2,2.2 2.5,0.6 2.1,-2.5 3.3,-2.3 5,0.1 6.7,0 3.8,-5 3.9,-1.3 1.2,-4.2 3,-2.9 -2,-3.7 2,-5.1 3.1,-3.5 0.5,-2.1 6.6,-1.3 4.8,-4.2 -0.3,-3.5 -6,0.8 -5.7,-2.8 -1.9,1.3 -9.4,-2.8 -2,-2.4 z m 26,22.6 0.1,-0.3 0.1,-0.2 0.1,-0.1 -0.2,-0.2 0,-0.1 0.2,-0.2 -0.2,-0.1 -1.3,0.4 -0.7,0.4 -2.1,1.5 0,0.3 0.1,0.2 0.4,0 0.2,0.4 0.4,-0.4 0.3,-0.1 0.3,0.1 0.3,0.2 0.1,0.6 0.1,0.2 0.6,0.1 0.9,0.4 0.4,-0.2 0.5,-0.3 0.2,-0.6 0.3,-0.5 0.3,-0.5 0.3,-0.4 -0.1,-0.4 -0.3,-0.1 -0.3,-0.1 -0.5,0.2 -0.5,-0.2 z m 6,-0.3 0.1,-0.4 0,-0.1 -0.5,-0.7 -0.9,-0.3 -1,0.1 -0.1,0.1 0,0.4 0.1,0.1 0.6,0.1 1.6,0.7 0.1,0 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AW\"\r\n              data-name=\"Aruba\"\r\n              data-id=\"AW\"\r\n              d=\"m 586.6,492.9 -0.1,-0.1 -0.3,-0.6 -0.3,-0.3 -0.1,0.1 -0.1,0.3 0.3,0.3 0.3,0.4 0.3,0.1 0,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AI\"\r\n              data-name=\"Anguilla\"\r\n              data-id=\"AI\"\r\n              d=\"m 627.9,456.2 0.1,-0.2 -0.2,-0.1 -0.8,0.5 0,0.1 0.9,-0.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AD\"\r\n              data-name=\"Andorra\"\r\n              data-id=\"AD\"\r\n              d=\"m 985.4,301.7 0.1,-0.2 0.1,-0.2 0,-0.1 -0.2,-0.1 -0.7,-0.2 -0.3,-0.1 -0.2,0.1 -0.2,0.2 -0.1,0.3 0.1,0.1 0,0.2 0,0.2 0.1,0.2 0.2,0 0.2,0 0.3,-0.1 0.5,-0.3 0.1,0 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"AG\"\r\n              data-name=\"Antigua and Barb.\"\r\n              data-id=\"AG\"\r\n              d=\"m 634.3,463.8 0.2,-0.1 0,-0.1 0,-0.2 -0.1,-0.1 -0.1,-0.2 -0.4,-0.2 -0.5,0.5 0,0.2 0.1,0.3 0.6,0.1 0.2,-0.2 z m 0.2,-3.5 0,-0.5 -0.1,-0.2 -0.3,0 -0.1,-0.1 -0.1,0 -0.1,0.1 0.1,0.6 0.5,0.3 0.1,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BS\"\r\n              data-name=\"Bahamas\"\r\n              data-id=\"BS\"\r\n              d=\"m 574.4,437.3 0.2,-0.6 -0.3,-0.1 -0.5,0.7 -0.6,0.3 -0.3,0 -0.7,-0.3 -0.5,0 -0.4,0.5 -0.6,0.1 0.1,0.1 0,0.2 -0.2,0.3 0,0.2 0.1,0.3 1.5,-0.1 1.3,-0.2 0.7,-0.9 0.2,-0.5 z m 0.8,-2 -0.4,-0.3 -0.4,0.3 0.1,0.3 0.7,-0.3 z m 0,-5.8 -0.4,-0.2 -0.3,0.5 0.3,0.1 0.7,-0.1 0.5,0.1 0.5,0.4 0.3,-0.2 -0.1,-0.1 -0.4,-0.3 -0.6,-0.1 -0.2,0 -0.3,-0.1 z m -6.6,1.3 0.7,-0.6 0.7,-0.3 0.9,-1.1 -0.1,-0.9 0.2,-0.4 -0.6,0.1 -0.1,0.3 -0.1,0.3 0.3,0.4 0,0.2 -0.2,0.4 -0.3,0.1 -0.1,0.2 -0.3,0.1 -0.4,0.5 -0.8,0.6 -0.2,0.3 0.4,-0.2 z m 1.2,-3.2 -0.6,-0.2 -0.2,-0.4 -0.4,-0.1 -0.1,0.2 0,0.2 0.1,0.4 0.2,-0.1 0.8,0.4 0.4,-0.3 -0.2,-0.1 z m -4.1,-1.1 0,-0.7 -0.4,-0.5 -0.6,-0.4 -0.1,-1.2 -0.3,-0.7 -0.2,-0.6 -0.4,-0.8 0,0.5 0.1,0.1 0.1,0.6 0.4,0.9 0.1,0.4 -0.1,0.4 -0.4,0.1 -0.1,0.2 0.5,0.3 0.8,0.3 0.5,1.3 0.1,-0.2 z m -4.1,-3.5 -0.5,-0.3 -0.2,-0.3 -0.7,-0.7 -0.3,-0.1 -0.2,0.4 0.4,0.1 0.9,0.7 0.4,0.2 0.2,0 z m 7.3,-4 -0.1,-0.3 -0.1,0 -0.3,0.1 -0.3,0.9 0.3,0 0.5,-0.7 z m -17.6,-1.1 -0.2,-0.3 -0.3,0.2 -0.5,0 -0.2,0.1 -0.4,0 -0.3,0.2 0.4,0.8 0.3,0.3 0.1,1 0.2,0.1 -0.1,0.7 1.1,0.1 0.4,-0.8 0,-0.3 0,-0.1 0,-0.2 0,-0.2 0,-0.9 -0.3,-0.5 -0.4,0.6 -0.4,-0.3 0.6,-0.4 0,-0.1 z m 12.9,0.3 -1,-1.4 0,-0.2 -0.5,-1.5 -0.3,-0.1 -0.1,0.1 -0.1,0.2 0.4,0.4 0,0.4 0.3,0.2 0.4,1.1 0.4,0.4 -0.1,0.3 -0.4,0.3 -0.1,0.2 0.1,0 0.6,-0.1 0.4,0 0,-0.3 z m -10.5,-5.2 0.5,-0.2 0,0 -0.3,-0.2 -0.7,0 -0.4,0.1 -0.2,0.2 0.1,0.1 0.4,0.1 0.6,-0.1 z m -2.4,2 -0.5,-0.6 -0.3,-0.9 -0.2,-0.4 0.1,-0.5 -0.3,-0.4 -0.6,-0.4 -0.3,0.1 0.1,1.1 -0.2,0.6 -0.8,1.1 0.1,0.4 0,0 0.1,0.2 -0.5,0.4 0,-0.3 -0.6,0.1 0.3,0.5 0.6,0.4 0.3,0.1 0.3,-0.2 0,0.5 0.3,0.4 0.1,0.4 0.3,-0.3 0.6,-0.2 0.2,-0.2 0.7,-0.4 0,-0.2 0.1,-0.6 0.1,-0.7 z m 6.7,-5 -0.3,-0.5 -0.1,0.1 -0.1,0.4 -0.3,0.4 0.5,-0.1 0.4,0.1 0.6,0.5 0.7,0.2 0.3,0.6 0.6,0.6 0,0.6 -0.4,0.6 -0.1,0.7 -0.6,0.1 0.1,0.1 0.3,0.3 0.1,0.4 0.2,0.2 0,-0.7 0.3,-0.8 0.4,-1.3 -0.1,-0.3 -0.3,-0.3 -0.7,-0.9 -0.7,-0.3 -0.8,-0.7 z m -8.8,-7.9 -0.5,-0.4 -0.2,0.4 0,0.1 -0.1,0.3 -0.5,0.4 -0.5,0.1 -0.7,-0.6 -0.2,-0.1 0.8,1.1 0.3,0.1 0.4,0 0.9,-0.3 1.6,-0.5 1.7,-0.2 0.1,-0.2 -0.1,-0.3 -0.8,0.2 -1,-0.1 -0.2,0.2 -0.4,0 -0.6,-0.2 z m 6.1,5.2 0.2,-0.3 0.4,-1.8 0.8,-0.6 0.1,-1.2 -0.5,-0.5 -0.4,-0.2 -0.1,-0.2 0.1,-0.2 -0.2,-0.1 -0.3,-0.2 -0.4,-0.6 -0.4,-0.4 -0.7,-0.1 -0.6,-0.1 -0.4,-0.1 -0.5,0.3 0.8,0 1.5,0.3 0.7,1.5 0.5,0.4 0.1,0.4 -0.2,0.4 0,0.4 -0.3,0.5 -0.1,0.8 -0.3,0.4 -0.7,0.5 0.4,0.2 0.3,0.6 0.2,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BM\"\r\n              data-name=\"Bermuda\"\r\n              data-id=\"BM\"\r\n              d=\"m 630.2,366.8 0.4,-0.6 -0.1,0 -0.5,0.5 -0.6,0.2 0.1,0.1 0.1,0 0.6,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"BB\"\r\n              data-name=\"Barbados\"\r\n              data-id=\"BB\"\r\n              d=\"m 644.9,488.9 0.4,-0.4 -0.3,-0.3 -0.6,-0.8 -0.3,0.1 0,1 0.1,0.3 0.5,0.3 0.2,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KM\"\r\n              data-name=\"Comoros\"\r\n              data-id=\"KM\"\r\n              d=\"m 1221.1,650.5 -0.4,-0.4 -0.4,0 0,0.2 0.1,0.4 1.1,0.2 -0.4,-0.4 z m 3.9,-1.5 -0.1,0 -0.2,0.1 -0.1,0.2 -0.1,0.3 -0.3,0 -0.2,0 -0.4,0 0.8,0.5 0.5,0.5 0.2,0.2 0.1,-0.2 0.1,-0.7 -0.3,-0.9 z m -5.6,-1.1 0.2,-0.3 -0.2,-0.7 -0.4,-0.8 0.1,-1.4 -0.2,-0.2 -0.3,0 -0.1,0.1 -0.1,0.3 -0.3,2 0.4,0.6 0.3,0.1 0.5,0.4 0.1,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CV\"\r\n              data-name=\"Cape Verde\"\r\n              data-id=\"CV\"\r\n              d=\"m 841.4,477.6 0.1,-0.4 -0.2,-0.6 -0.3,-0.1 -0.6,0.4 -0.1,0.3 0.1,0.3 0.3,0.3 0.3,0.1 0.4,-0.3 z m 6.3,-1.7 0.4,-0.2 0,-0.7 -0.1,-0.3 -0.4,0 -0.2,0.4 0,0.1 0,0.4 0.2,0.3 0.1,0 z m -1.4,0.8 -0.5,-0.9 -0.3,-0.1 -0.6,-0.7 0,-0.3 -0.3,-0.1 0,0.2 0,0.4 -0.2,0.5 0,0.5 0.4,0.8 0.4,0.2 0.7,0.1 0.4,-0.6 z m 3.1,-7.8 0,0.5 -0.3,0.7 0.5,0.3 0.3,0.1 0.6,-0.4 0.2,-0.5 -0.1,-0.3 -0.3,-0.3 -0.3,-0.1 -0.1,0.1 -0.5,-0.1 z m -6.4,-2.5 -1,-0.1 -0.6,-0.2 -0.1,0 0,0.3 0.4,0.8 0.2,-0.5 0.2,-0.1 0.8,0.2 0.4,-0.1 -0.1,-0.1 -0.2,-0.2 z m 6.7,-0.2 -0.1,-0.5 0,-0.7 -0.2,0 -0.3,0.2 0.1,0.7 0.1,0.1 0.2,0.5 0.2,-0.3 z m -11.1,-1 0,-0.2 -0.3,-0.5 -0.3,0.1 -0.4,0.2 -0.1,0.3 0.4,0.2 0.2,0 0.5,-0.1 z m -1.5,-0.9 0.8,-0.6 0.2,-0.3 -0.2,-0.5 -0.5,-0.1 -1.2,0.6 -0.1,0.2 0.1,0.3 0.1,0.5 0.2,0.1 0.6,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KY\"\r\n              data-name=\"Cayman Is.\"\r\n              data-id=\"KY\"\r\n              d=\"m 527,449.1 -0.1,-0.3 -0.1,0.1 0,0.6 0.5,0 0.2,0 0.3,-0.2 0.6,0 -0.1,-0.2 -0.8,-0.1 -0.1,0.1 -0.2,0.1 -0.2,-0.1 z m 8,-2.3 0,0 -0.1,-0.1 -0.1,0 -0.3,0.1 -0.1,0 -0.1,0 -0.1,0.1 -0.1,0.1 0.2,0 0.4,-0.2 0.2,0 0.1,0 z m 0.8,-0.1 0.5,-0.2 0,0 -0.1,-0.1 -0.1,0 -0.1,0.1 -0.1,0 -0.5,0.3 0.2,0 0.2,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"DM\"\r\n              data-name=\"Dominica\"\r\n              data-id=\"DM\"\r\n              d=\"m 635.8,475.1 0.3,-0.7 -0.1,-1 -0.2,-0.4 -0.8,-0.3 0,0.2 -0.1,0.5 0.3,0.8 0.1,1.1 0.5,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"FK\"\r\n              data-name=\"Falkland Is.\"\r\n              data-id=\"FK\"\r\n              d=\"m 690.3,902.7 -0.1,-0.3 -0.4,-0.2 -0.2,-0.1 0.1,0.2 0.1,0.3 0.1,0.2 0.2,0.1 0.2,-0.2 z m 5.5,-1.3 -0.1,-0.1 -0.2,0 -0.1,0.2 0.2,0.3 0.4,0.1 -0.2,-0.5 z m -12.9,-1.4 -0.1,0.2 -0.4,0.1 0.2,0.3 0.6,0.4 0.4,0 0.1,-0.3 -0.1,-0.6 -0.3,0 -0.4,-0.1 z m 2.8,-2 -0.9,-0.3 -0.4,-0.3 -0.3,0 0.4,0.4 0.1,0.2 0.1,0.2 0.6,0.3 0.6,0.3 0.4,0.3 -0.1,0.1 -0.8,0.3 -0.3,0 -0.2,0.1 0.4,0.2 0.6,-0.1 0.2,-0.1 0.2,0 0.3,0.1 0,0.2 -0.1,0.2 -0.2,0.2 -0.4,0.3 -0.6,0.4 -0.8,0 -0.7,0.7 0.9,0.5 0.7,0.3 0.9,0 0,-0.1 0.2,-0.1 0.3,0 0.1,-0.1 0.2,-0.4 0,-0.6 0.2,0 0.3,0.1 0.7,-0.1 0.3,-0.1 0.6,-0.9 0.4,-0.8 0.2,-0.4 0.3,-0.2 0.1,-0.2 0.1,-0.3 0.3,-0.2 0,-0.3 -0.4,-0.2 -0.3,-0.2 -0.3,0.3 -0.2,-0.1 -0.9,0.3 -0.4,0 -0.3,-0.2 -0.4,-0.1 -0.4,0.1 -0.5,0.5 -0.8,-0.2 z m 0.7,-0.4 0.1,-0.3 -0.1,-0.2 -0.5,-0.2 -0.5,0 0.2,0.5 0.2,0.2 0.6,0 z m 5.9,-0.7 -0.4,0 0.4,0.5 -0.8,0.8 0.2,0.6 0.3,0.4 0.1,0.2 -0.1,0.1 -0.4,0.1 -0.3,0.1 -0.2,0.3 -0.9,0.9 0.2,0.2 -0.3,0.7 0.2,0.3 0.8,0.7 0.8,0.4 0,-0.7 0.4,-0.1 0.4,0.2 0.4,-0.2 -0.9,-1 0.3,0 2.5,0.5 -0.1,-0.4 -0.1,-0.2 -0.3,-0.4 1.5,-0.4 0.5,-0.3 0.2,-0.3 0.6,-0.1 0.8,-0.3 -0.1,-0.1 0.1,-0.3 -0.4,-0.2 -0.5,-0.1 0.1,-0.3 0.5,-0.1 -0.8,-0.7 -0.3,-0.1 -1,0.1 -0.3,0.1 0,0.2 0.1,0.3 0.3,0.3 0.1,0.2 -0.2,-0.1 -1.1,-0.4 -0.2,-0.1 -0.2,-0.4 0.2,-0.1 0.3,0.1 0.1,-0.3 -0.4,-0.3 -0.4,-0.1 -0.9,0.1 -0.8,-0.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"FO\"\r\n              data-name=\"Faeroe Is.\"\r\n              data-id=\"FO\"\r\n              d=\"m 947,186.9 0,-0.3 -0.1,-0.3 0,-0.2 -0.1,0 -0.5,-0.1 -0.1,-0.2 -0.1,0 0,0.2 0.1,0.4 0.5,0.4 0.3,0.2 0.1,0 -0.1,-0.1 z m 0.5,-2.1 0,-0.1 -0.2,-0.2 -0.5,-0.2 -0.2,-0.1 -0.2,0.1 0,0.2 0.1,0.1 0.4,0.1 0.4,0.3 0.1,0 0.1,-0.2 z m -2.4,-1.9 -0.2,-0.1 -0.5,0.1 -0.3,0 0.1,0.3 0.6,0.2 0.3,0 0.3,0 0.2,-0.1 -0.1,-0.2 -0.4,-0.2 z m 2.5,-0.5 -0.8,-0.2 -0.6,-0.3 -1,0.1 0.7,1.1 0.8,0.7 0.4,0.2 0,-0.1 0,-0.2 -0.4,-0.5 -0.1,-0.1 0,-0.1 0.1,-0.1 0.2,0 0.3,0.2 0.2,0 0.2,-0.7 z m 1,-0.2 -0.3,-0.2 -0.4,-0.4 0,0.5 0,0.3 0,0.1 0.1,0 0.3,0.1 0.3,-0.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GD\"\r\n              data-name=\"Grenada\"\r\n              data-id=\"GD\"\r\n              d=\"m 632.1,495.7 0.5,-0.2 0.2,-1.1 -0.3,-0.1 -0.3,0.3 -0.3,0.5 0,0.4 -0.2,0.3 0.4,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"HK\"\r\n              data-name=\"Hong Kong\"\r\n              data-id=\"HK\"\r\n              d=\"m 1604.9,430.9 0,-0.2 0,-0.2 -0.4,-0.2 -0.3,0 0.1,0.2 0.4,0.5 0.2,-0.1 z m -1.3,0 -0.1,-0.5 0.2,-0.3 -0.9,0.3 -0.1,0.3 0,0.1 0.2,0.1 0.7,0 z m 1.6,-1.2 -0.1,-0.3 -0.2,-0.1 -0.1,-0.3 -0.1,-0.2 0,0 -0.3,-0.1 -0.2,-0.1 -0.4,0 -0.1,0.1 -0.2,0 -0.2,0.2 0,0 0,0.2 -0.5,0.4 0,0.2 0.3,0.2 0.5,-0.1 0.6,0.2 0.8,0.3 0,-0.2 0,-0.3 0.2,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"KN\"\r\n              data-name=\"St. Kitts and Nevis\"\r\n              data-id=\"KN\"\r\n              d=\"m 629.9,463.2 0,-0.3 -0.2,-0.2 -0.3,0 0,0.5 0.2,0.2 0.3,-0.2 z m -0.5,-0.7 -0.1,-0.2 -0.1,-0.1 -0.2,-0.4 -0.4,-0.4 -0.2,0.1 -0.1,0.2 0,0.1 0,0 0.3,0.3 0.4,0.1 0.2,0.4 0.2,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LC\"\r\n              data-name=\"Saint Lucia\"\r\n              data-id=\"LC\"\r\n              d=\"m 637.4,484.2 0.1,-1.2 -0.1,-0.5 -0.2,0.1 -0.3,0.4 -0.4,0.6 -0.1,0.3 0,0.6 0.6,0.4 0.4,-0.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"LI\"\r\n              data-name=\"Liechtenstein\"\r\n              data-id=\"LI\"\r\n              d=\"m 1024.4,273.6 0,-0.2 0.1,-0.2 -0.1,-0.1 -0.1,-0.2 -0.1,-0.1 0,-0.2 -0.1,-0.1 0,-0.2 -0.1,-0.1 -0.2,0.6 0,0.5 0.1,0.2 0.1,0 0.4,0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MV\"\r\n              data-name=\"Maldives\"\r\n              data-id=\"MV\"\r\n              d=\"m 1389.1,551.6 0.1,-0.1 0,-0.2 -0.1,-0.1 -0.1,0 -0.1,0.2 0,0.1 0,0.1 0.2,0 z m 0.3,-5.9 0.1,-0.2 0,-0.1 0,-0.1 0,-0.1 0,-0.1 -0.1,0.1 -0.1,0.2 0,0.1 -0.1,0.1 0,0.1 0.1,0 0.1,0 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MT\"\r\n              data-name=\"Malta\"\r\n              data-id=\"MT\"\r\n              d=\"m 1053.6,344 -0.2,-0.2 -0.5,-0.5 -0.5,-0.1 0.1,0.6 0.4,0.4 0.5,0 0.2,-0.2 z m -1.4,-1.2 0,0 0,-0.2 -0.3,-0.1 -0.4,0.1 0.1,0.1 0.3,0.2 0.3,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MS\"\r\n              data-name=\"Montserrat\"\r\n              data-id=\"MS\"\r\n              d=\"m 631.8,465.7 -0.1,-0.5 -0.1,0 -0.2,0.4 0,0.3 0.3,0.1 0.1,-0.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MU\"\r\n              data-name=\"Mauritius\"\r\n              data-id=\"MU\"\r\n              d=\"m 1294.7,702.5 0.3,-0.3 0.2,-0.4 0.3,-0.3 0.1,-0.7 -0.2,-0.8 -0.4,-0.7 -0.5,0.1 -0.3,0.4 -0.2,0.5 -0.5,0.3 -0.1,0.3 -0.2,0.7 -0.1,0.4 -0.2,0.1 0,0.2 0.3,0.3 0.8,0.1 0.7,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NC\"\r\n              data-name=\"New Caledonia\"\r\n              data-id=\"NC\"\r\n              d=\"m 1897.3,716.1 0,-0.3 -0.4,-0.2 -0.2,0.5 0,0.1 0.2,0.1 0.2,0 0.2,-0.2 z m 4.6,-7.6 -0.1,-0.1 0,-0.3 0.1,-0.2 -0.4,0.2 -0.6,0.2 0.1,0.8 -0.1,0.4 0.3,0.1 0.1,0.3 0.2,0 0.7,-0.2 0.3,-1.1 -0.4,0 -0.2,-0.1 z m -3,-1.7 0.3,-0.5 0.1,-0.2 -0.2,-0.7 -0.3,-0.3 0.3,-1 -0.1,-0.2 -0.4,-0.2 -0.9,0.3 -0.1,0.2 0.5,0.1 0.2,0.2 -0.5,0.7 -0.5,0.1 0.1,0.5 0.2,0.4 0.7,0.2 0.3,0.4 0.3,0 z m -3.9,-2.9 0.3,-0.3 0.3,-0.4 -0.1,-0.1 0,-0.3 0.2,-0.4 0.3,-0.1 -0.2,-0.2 -0.2,-0.1 0,0.3 -0.3,0.7 -0.1,0.3 -0.5,0.6 0.3,0 z m -12.3,-2.9 -0.6,-0.7 -0.1,0.2 -0.1,0.4 0,0.3 0.3,0.2 0.1,0.2 -0.1,0.5 0,0.4 0.6,0.9 0.1,0.7 0.3,0.6 0.5,0.5 0.4,0.5 0.8,1.4 0.2,0.5 0.4,0.3 1,1.2 0.4,0.4 0.4,0.2 0.9,0.7 0.6,0.3 0.3,0.5 0.6,0.3 0.8,0.4 0.1,0.2 0,0.3 0.1,0.3 0.5,0.4 0.6,0.3 0.1,0.2 0.1,0.2 0.3,-0.1 0.3,0.1 0.9,0.7 0.4,-0.1 0.3,0 0.5,-0.2 0.3,-0.4 -0.1,-1.1 -0.5,-0.5 -0.7,-0.4 -0.4,-0.5 -0.4,-0.5 -0.8,-1 -1.1,-1 -0.5,-0.2 -0.3,-0.4 -0.3,-0.1 -0.2,-0.3 -0.5,-0.3 -0.3,-0.6 -0.6,-0.6 -0.1,-0.3 0.1,-0.3 -0.1,-0.3 -0.4,-0.3 -0.2,-0.5 -0.2,-0.3 -0.4,-0.2 -0.7,-0.4 -1.6,-1.9 -0.7,-0.6 -0.7,0.2 -0.6,-0.4 z m -22,-6 0.2,-0.4 0.1,-0.8 -0.2,0.4 -0.2,1 0.1,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"NR\"\r\n              data-name=\"Nauru\"\r\n              data-id=\"NR\"\r\n              d=\"m 1915,575.5 0,-0.2 -0.1,0 -0.1,0 -0.1,0.2 0.1,0.1 0.1,0.1 0.1,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PN\"\r\n              data-name=\"Pitcairn Is.\"\r\n              data-id=\"PN\"\r\n              d=\"m 274.2,727.4 0,-0.2 -0.1,-0.2 -0.2,-0.1 -0.1,0.1 0.1,0.2 0.2,0.2 0.1,0.1 0,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PR\"\r\n              data-name=\"Puerto Rico\"\r\n              data-id=\"PR\"\r\n              d=\"m 600.8,457.3 0,-0.1 0,0 0.1,0 0,-0.1 0.1,-0.1 0,0 0,-0.1 -0.1,0 0,0 -0.3,0 -0.1,0 0,0.1 0,0.1 0.2,0.1 0,0 0,0.1 0.1,0 0,0 z m 13.6,-0.3 0.7,-0.2 0,-0.1 -0.4,-0.1 -0.6,0 -0.5,0.2 0.1,0.2 0.2,0 0.5,0 z m -3.7,-2.2 -0.1,-0.2 -0.2,0 -3.5,-0.1 -1.3,-0.2 -0.3,0.1 -0.3,0.1 -0.1,0.4 -0.2,0.2 -0.3,0.2 0.1,0.3 0.1,0.2 0.2,0.4 -0.1,0.5 -0.2,1 0.3,0.2 0.7,-0.1 0.3,0.1 0.3,0.1 0.4,-0.1 0.4,-0.2 0.9,0.1 0.5,-0.1 0.6,0.3 0.4,-0.1 0.2,0.1 0.3,0 0.6,0 0.9,-0.2 0.8,-0.5 0.3,-0.5 0.4,-0.3 0.6,-0.4 0,-0.9 -0.7,-0.1 -0.6,-0.3 -1.1,-0.1 -0.1,0 0.1,0.2 -0.1,0 -0.2,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"PF\"\r\n              data-name=\"Fr. Polynesia\"\r\n              data-id=\"PF\"\r\n              d=\"m 213.2,704.9 -0.1,-0.3 -0.2,-0.3 -0.1,0.1 0.1,0.1 0.2,0.3 0,0.2 0.1,-0.1 z m 9.3,-14.7 -0.2,-0.2 -0.4,-0.2 -0.2,-0.1 -0.2,-0.1 -0.1,0.1 0.1,0.1 0.1,0 0.3,0.2 0.3,0.1 0.2,0.1 0,0.1 0.1,-0.1 z m -24.5,-1.1 -0.6,-0.3 0.1,0.2 0.4,0.2 0.2,0.1 -0.1,-0.2 z m 20.5,-0.2 -0.4,-0.5 -0.3,0 0.7,0.6 0,-0.1 z m -21.6,-1 -0.4,-0.4 -0.2,-0.3 -0.3,-0.1 0.1,0.1 0.4,0.4 0.3,0.4 0.2,0.1 -0.1,-0.2 z m -0.3,-2.1 -0.1,-0.1 0,0 0,-0.3 0.2,-0.3 0.6,-0.4 0,-0.1 0,0 -0.2,0.1 -0.4,0.2 -0.2,0.2 -0.1,0.2 -0.1,0.3 0.1,0.2 0.1,0.1 0.2,0 -0.1,-0.1 z m -47.4,-1.1 -0.2,-0.6 -0.3,-0.5 -0.8,-0.1 -0.5,0.2 -0.1,0.2 0.1,0.4 0.5,0.7 0.5,0.1 0.8,-0.1 0.4,0.6 0.2,0.1 0.4,0.1 0.1,-0.3 -0.2,-0.5 -0.9,-0.3 z m -2.9,-0.9 0.1,-0.4 -0.2,-0.1 -0.5,0 0,0.2 0.1,0.2 0.1,0.1 0.3,0.2 0.1,-0.2 z m -9.7,-4.3 0.2,0 -0.4,-0.6 -0.3,-0.2 0,0.1 0,0.7 0.3,0.1 0.2,-0.1 z m 43.9,-1.6 -0.2,0 -0.3,0 -0.1,0 0.5,0.1 0.4,0.2 -0.3,-0.3 z m -0.7,0.1 -0.3,-0.1 -0.3,-0.2 -0.3,0 0.7,0.3 0.2,0 z m -43.8,0.1 0.1,-0.2 -0.1,-0.1 -0.4,-0.2 0.1,0.3 0,0.2 0.2,0.1 0.1,-0.1 z m 32.8,-2 -0.3,-0.4 -0.2,-0.3 -0.2,-0.4 -0.4,-0.5 0.1,0.3 0.1,0.2 0.2,0.2 0.2,0.4 0.1,0.2 0.3,0.4 0.1,0 0,-0.1 z m 16.2,-1.5 0.1,-0.5 -0.2,0 0,0.5 0.1,0 z m -14.4,-1.6 -0.6,-0.6 -0.1,0 0.1,0.2 0.5,0.5 0.1,0.2 0,-0.3 z m 30.8,-33.9 0.1,-0.2 0,-0.2 -0.1,-0.1 -0.3,-0.1 0.1,0.7 0.2,-0.1 z m -2.7,-3.7 -0.1,-0.2 -0.2,0 -0.1,0.1 0,0.5 0.4,-0.4 z m 0.1,-1.6 -0.8,0.5 0.2,0.4 0.4,0.1 0.2,-0.2 0.8,-0.1 0.3,-0.4 -0.3,0.1 -0.8,-0.4 z m -6.1,-1.7 0.2,-0.5 -0.2,-0.1 -0.4,0.2 0,0.2 0.3,0.4 0.1,-0.2 z m 2.6,-3.1 0.3,-0.1 0,-0.1 -0.2,-0.2 -0.3,-0.1 -0.1,0.1 -0.1,0.2 0.1,0.3 0.3,-0.1 z m -2.9,-0.1 0.1,-0.3 0,-0.2 -0.1,-0.2 -0.9,-0.2 -0.1,0.1 0,0.4 0.2,0.5 0.3,0 0.5,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SG\"\r\n              data-name=\"Singapore\"\r\n              data-id=\"SG\"\r\n              d=\"m 1561,563.7 0.1,-0.2 -0.2,-0.2 -0.3,-0.1 -0.5,-0.2 -0.6,0.1 -0.3,0.6 0.9,0.4 0.9,-0.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SB\"\r\n              data-name=\"Solomon Is.\"\r\n              data-id=\"SB\"\r\n              d=\"m 1909.1,646.4 -0.2,-0.2 -0.1,-0.4 -0.3,0 -0.3,0.1 0.2,0.6 0.2,0 0.5,-0.1 z m -35.6,0.8 -0.1,-0.2 -0.5,-0.4 -1.9,-1.3 -0.4,-0.1 -0.1,0.1 -0.1,0.3 0.1,0.2 0.5,0.1 0,0.1 0.3,0.2 0.7,0.2 0.4,0.3 0.1,0.5 0.3,0.1 0.3,0.1 0.4,-0.2 z m 32,-6.6 0,-0.1 0.2,-0.3 -0.2,-0.1 -0.5,-0.1 -0.7,0.1 -0.3,0.2 -0.2,0.3 -0.2,0 0,0.2 0.1,0.4 0.2,-0.1 0.2,0.1 0.5,-0.5 0.3,0 0.1,0 0.5,-0.1 z m -24.4,-2.3 -0.1,-0.2 -0.2,-0.1 -0.9,-0.7 -0.5,-0.2 -0.5,0 -0.1,0.5 0,0.3 0.6,0 0.4,0.2 0,0.6 0.2,0.2 0,0.5 1.2,0.9 0.7,0.4 0.7,0.1 0.4,0.2 0.5,-0.1 0.5,0.2 0.4,-0.1 -0.4,-0.3 0,-0.4 -0.5,-1.3 -0.3,-0.3 -0.5,0.1 -0.5,-0.2 -0.4,0 -0.7,-0.3 z m -0.4,-4.9 -0.6,-1.6 -0.2,-0.1 0.1,0.6 0.1,0.4 -0.1,0.5 -0.1,0.6 0.2,0.2 0.2,-0.2 0.4,0.5 0,-0.2 0,-0.7 z m -9.8,-2.2 -0.3,-0.1 -0.4,0.3 -0.1,0.3 -0.1,0.7 0,0.4 0.3,0.7 0.3,0.5 0.3,0.3 0.2,0.2 0.9,0.1 1.7,0.1 0.9,0.4 0.9,0.2 0.4,-0.1 0.5,-0.2 0.1,-0.1 -0.1,-0.6 -0.2,-0.3 -0.4,-0.2 -0.2,-0.6 -0.5,-0.4 -0.9,-0.7 -1.6,0 -0.6,0.1 -1.1,-1 z m 2.6,-1.8 -0.5,0.2 0,0.3 0.4,0.1 0.4,0.2 0.1,0.3 0,0 0.2,-0.1 0.4,0.2 0.2,-0.3 -0.4,-0.5 -0.4,-0.3 -0.1,0 -0.3,-0.1 z m -5.6,0.8 0.3,-0.2 0,-0.4 -0.3,0 -0.1,-0.2 -0.2,0 -0.3,0.2 -0.2,0.3 0.1,0.2 0.4,0 0.2,0.1 0.1,0 z m -8.4,-2.3 -0.1,-0.2 -0.3,-0.2 -0.2,0 -0.5,0.1 0.1,0.1 0.6,0.3 0.3,0.1 0.1,-0.2 z m 3.1,0.4 0.3,-0.2 -0.1,-0.2 -0.1,-0.5 -0.4,0.7 0.1,0.2 0.2,0 z m -0.5,-0.9 0,-0.2 0,-0.2 -0.2,-0.1 0.4,-0.3 -0.1,-0.1 -0.6,-0.2 -0.2,0.2 -0.2,0.1 -0.1,0.1 -0.1,0.1 -0.1,0.5 0.2,0.4 0.4,0.2 0.6,-0.5 z m -4,0.2 -0.3,-0.4 0.1,-0.5 0.2,-0.1 0.2,-0.5 -0.1,-0.4 -0.2,0.1 -0.7,0.6 -0.1,0.3 0.6,0.8 0.3,0.2 0,-0.1 z m 13,-1.3 -0.2,-0.4 0,-0.2 -0.3,-0.2 -0.2,0.1 -0.1,0.3 0.1,0.2 0.4,0.3 0.3,-0.1 z m 6,-1.2 -0.2,0 -0.1,0.1 -0.2,0 -0.3,0 -0.1,0.2 0.6,1.1 -0.3,0.5 0.4,2.2 0.4,1.2 0.8,0.8 0,0.2 0.8,0.5 0.6,1.3 0.2,0.1 0.1,-0.2 0,-0.6 -0.5,-1.1 0.1,-0.8 -0.2,-0.3 0,-0.3 -0.2,-0.8 -0.6,-0.7 -0.3,-0.1 -0.2,-0.3 0.2,-0.6 0.2,-0.2 0.1,-0.3 -1.3,-1.9 z m -16.6,-0.5 -0.6,-0.2 -0.2,-0.3 0,-1 -0.6,-0.3 -0.3,0.2 -0.6,0.7 -0.2,0.4 -0.5,0.3 -0.1,0.3 0,0.4 0.4,0.1 0.3,-0.4 0.9,-0.1 0.3,0.1 0,0.4 0.1,0.7 0.3,0.3 0.5,0.2 0.4,0.6 0.1,-0.3 0.2,0 0.2,-0.4 -0.3,-1.2 -0.3,-0.5 z m -6.5,-0.4 0.1,-0.5 -0.1,-0.9 -0.2,0.1 0,0.2 -0.1,0.4 0.2,0.8 0.1,-0.1 z m 3.2,-0.4 0.2,-0.2 0,-0.4 0,-0.5 -0.2,-0.4 -0.2,-0.2 -0.5,0.1 -0.4,0.5 0,0.5 0.4,0.6 0.6,0 0.1,0 z m -2.6,-1.2 0.2,-0.3 0.5,-0.7 0.1,-0.3 -0.5,-0.2 -0.4,-0.5 -0.4,-0.2 -0.3,0.4 0,0.4 0.5,0.6 -0.1,0.4 0.2,0.1 0.1,0.4 0.1,-0.1 z m 17.5,3.9 -0.1,-0.5 -0.3,-0.4 0.4,-0.5 -2.2,-1.9 -0.3,-0.2 -0.4,-0.1 -0.5,-0.4 -0.5,-0.1 -0.5,-0.4 -0.2,-0.3 -0.6,-0.4 -0.6,-0.8 -1.5,-0.3 0.1,0.2 0.4,0.4 0.1,0.7 0.5,0.4 0.5,0.6 0.2,0.1 0.2,0.2 0.4,0.5 0.8,0.4 0.8,0.6 0.3,0.1 0.3,0.3 1.5,0.7 0.5,0.7 0.7,0.5 0,-0.1 z m -21.8,-9.2 0.2,-0.3 -0.7,-0.5 -0.2,0.3 -0.2,0.5 0.4,0.2 0.5,-0.2 z m 9.1,1.5 -0.1,-0.1 -0.3,0 -0.4,-0.2 -0.7,-0.8 -0.2,-0.3 -0.2,-1 -0.4,-0.4 -1.4,-0.8 -0.8,-0.8 -0.7,-0.2 -0.2,0.2 0,0.5 0.2,0.3 1,0.9 1.1,1.7 1,1 0.8,0.1 0.4,0 0,0.1 0.1,0.2 0.5,0.2 0.5,-0.4 -0.2,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"ST\"\r\n              data-name=\"São Tomé and Principe\"\r\n              data-id=\"ST\"\r\n              d=\"m 1014.1,571.4 0.5,-0.8 0,-0.5 -0.3,-0.5 -0.4,0 -0.5,0.4 -0.3,0.4 0,0.3 0.1,0.7 0.1,0.3 0.3,0.2 0.5,-0.5 z m 4.3,-9.2 0.2,-0.4 0,-0.2 -0.1,-0.1 -0.1,-0.1 -0.2,0.1 -0.3,0.5 0.1,0.2 0.2,0.2 0.2,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SX\"\r\n              data-name=\"Sint Maarten\"\r\n              data-id=\"SX\"\r\n              d=\"m 627.1,457.2 0,0 0.2,0.2 0.3,0.1 0.1,-0.1 0,-0.2 -0.6,0 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"SC\"\r\n              data-name=\"Seychelles\"\r\n              data-id=\"SC\"\r\n              d=\"m 1288.5,602 -0.5,-0.8 -0.4,0.3 0.2,0.3 0.3,0.2 0.1,0.4 0.3,0.2 0,-0.6 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TC\"\r\n              data-name=\"Turks and Caicos Is.\"\r\n              data-id=\"TC\"\r\n              d=\"m 578.7,433.1 -0.1,0.4 0,0.2 0.2,0.1 0.6,-0.1 0.1,-0.1 0.2,-0.1 0,-0.1 -0.4,0.1 -0.6,-0.4 z m 3.6,0.6 0.2,-0.2 -0.2,-0.2 -0.7,-0.2 -0.2,0.1 0,0.3 0.6,0 0.3,0.3 0,-0.1 z m -1.1,-0.5 -0.1,-0.1 -0.1,-0.6 -0.5,0 0,0.2 0.1,0.2 0.1,0 0.1,0.2 0.3,0.2 0.1,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TO\"\r\n              data-name=\"Tonga\"\r\n              data-id=\"TO\"\r\n              d=\"m 13.3,707.7 0,0 -0.2,0.3 0,0.2 0.4,0.4 -0.2,-0.9 z m -1.6,-0.9 -0.2,0 0.2,-0.1 -0.4,-0.2 -0.4,0 -0.2,-0.1 0,-0.2 -0.2,0.3 0.2,0.3 0.9,0.4 0.3,0.2 0.2,-0.6 0,-0.2 -0.3,0.1 0,0.1 -0.1,0 z m 2.5,-16 0.1,-0.2 0,-0.2 -0.3,-0.1 -0.1,0 -0.3,0.5 0.1,0.1 0.3,0.2 0.1,0 0.1,-0.3 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"TT\"\r\n              data-name=\"Trinidad and Tobago\"\r\n              data-id=\"TT\"\r\n              d=\"m 635.4,507.7 0.1,-0.2 0,-0.6 0.2,-0.4 -0.2,-0.4 -0.1,-0.6 0.1,-0.5 0,-0.7 0.2,-0.3 0.5,-0.8 -0.9,0 -0.6,0.2 -1.1,0.1 -0.5,0.2 -0.7,0.1 -0.4,0.2 0.1,0.1 0.5,0.2 0.2,0.2 0.1,0.2 0.1,0.4 -0.3,1.7 -0.1,0.1 -0.6,0.1 -0.2,0.3 -1.4,0.8 0.8,-0.1 0.9,0.1 2.4,-0.1 0.9,-0.3 z m 1.8,-6.7 1.2,-0.5 0.1,-0.4 -0.2,0 -0.8,0.3 -0.6,0.5 0,0.2 0.3,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"VC\"\r\n              data-name=\"St. Vin. and Gren.\"\r\n              data-id=\"VC\"\r\n              d=\"m 634.5,491.4 0,0 0,-0.1 0.1,0 0,-0.1 0,0 0,-0.1 -0.1,0 0,0.1 0,0 0,0.1 -0.1,0 0,0.1 0,0 0,0 0.1,0 z m 0.7,-1.9 0.1,-0.2 0.1,-0.1 0,0 0,0 -0.1,-0.1 0,0 0,0.1 -0.2,0.1 0,0 0,0.1 0,0 0,0.1 -0.1,0 -0.1,0 0,0 0.1,0 0,0 0.1,0.1 0,0 0,0 0,0 0.1,-0.1 z m 0.3,-1.1 0.3,-0.2 0.1,-0.6 -0.1,-0.4 -0.2,0 -0.3,0.1 -0.2,0.3 -0.1,0.5 0.4,0.4 0.1,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"VG\"\r\n              data-name=\"British Virgin Is.\"\r\n              data-id=\"VG\"\r\n              d=\"m 619.2,455.1 0.3,-0.2 -0.2,-0.1 -0.4,0 -0.3,0.2 0.1,0.1 0.5,0 z m 1.1,-0.4 0.4,-0.4 -0.5,0.1 -0.2,0.2 0.1,0.1 0.1,0 0.1,0 z m 0.8,-1.8 -0.2,0 -0.5,0 0,0 0.1,0.1 0.3,0 0.3,0.1 0,0 0,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"VI\"\r\n              data-name=\"U.S. Virgin Is.\"\r\n              data-id=\"VI\"\r\n              d=\"m 617.9,458.9 -0.7,0.2 -0.1,0.4 1.1,0 0.7,-0.3 -0.6,0 -0.4,-0.3 z m 0.9,-3.5 -0.5,-0.1 -0.2,0.2 0,0 0.3,0.1 0.4,-0.2 z m -1.1,0.1 -0.2,-0.2 -0.3,-0.1 -0.4,0.1 0.5,0.3 0.4,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CY\"\r\n              data-name=\"Cyprus\"\r\n              data-id=\"CY\"\r\n              d=\"m 1149.9,348.4 -0.3,-0.1 -0.5,0.2 -0.4,0.4 -0.4,0.3 -0.5,-0.3 0.2,0.9 0.6,1.1 0.2,0.3 0.3,0.2 1.1,0.3 0.3,0 0.6,0 0.2,0.1 0.2,0.4 0.4,0 0,-0.1 0,-0.3 0.2,-0.2 0.3,-0.2 0.3,0 0.6,-0.1 0.6,-0.2 0.5,-0.4 0.9,-1 0.3,0 0.3,0 0.6,0 0.6,-0.1 -0.2,-0.4 -0.1,-0.1 -0.4,-0.5 -0.2,-0.4 0.1,-0.6 2.5,-1.9 0.5,-0.5 -0.8,0.2 -0.6,0.4 -0.4,0.2 -0.7,0.4 -2.3,0.8 -0.8,0.1 -0.8,0 -1,-0.1 -0.9,-0.2 0,0.7 -0.2,0.6 -0.6,0.2 -0.3,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"RE\"\r\n              data-name=\"Reunion\"\r\n              data-id=\"RE\"\r\n              d=\"m 1284,707.9 0.2,-0.4 0.1,-0.8 -0.4,-0.8 -0.4,-0.7 -0.4,-0.2 -0.8,-0.1 -0.7,0.3 -0.4,0.6 -0.2,0.3 0.4,1.1 0.2,0.3 1.1,0.6 0.5,0 0.8,-0.2 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"YT\"\r\n              data-name=\"Mayotte\"\r\n              data-id=\"YT\"\r\n              d=\"m 1228.7,654.7 0,-0.3 0.2,-0.5 0,-0.1 0.1,-0.5 -0.3,-0.3 -0.2,0 -0.2,-0.3 -0.3,0.3 0.3,0.5 -0.1,0.3 -0.1,0.4 0.1,0.4 0.2,0.2 0.3,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"MQ\"\r\n              data-name=\"Martinique\"\r\n              data-id=\"MQ\"\r\n              d=\"m 638,479.9 -0.2,-0.7 -0.1,-0.2 -0.2,-0.3 0.1,-0.3 0,-0.1 -0.2,0 -0.3,-0.5 -0.6,-0.3 -0.3,0 -0.2,0.2 0,0.3 0.3,0.9 0.2,0.2 0.5,0.2 -0.4,0.4 0,0.1 0.1,0.3 0.9,0 0.2,0.3 0.1,-0.1 0.1,-0.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"GP\"\r\n              data-name=\"Guadeloupe\"\r\n              data-id=\"GP\"\r\n              d=\"m 636.4,471.1 0.2,-0.2 0,-0.3 -0.2,-0.3 -0.2,0.1 -0.2,0.3 0,0.3 0.1,0.1 0.3,0 z m -1.9,-0.8 0.2,-0.2 0,-1.2 0.1,-0.3 -0.2,-0.1 -0.2,-0.2 -0.6,-0.2 -0.1,0.1 -0.2,0.3 0.1,1.5 0.2,0.5 0.2,0.1 0.5,-0.3 z m 1.6,-1.4 0.8,-0.2 -0.9,-0.6 -0.2,-0.4 0,-0.3 -0.4,-0.3 -0.2,0.2 -0.1,0.3 0.1,0.5 -0.3,0.4 0.1,0.4 0.4,0.1 0.7,-0.1 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"CW\"\r\n              data-name=\"Curaco\"\r\n              data-id=\"CW\"\r\n              d=\"m 595.9,494.9 0,-0.6 -0.9,-0.4 0,0.3 0.1,0.2 0.3,0.1 0.1,0.2 -0.1,0.6 0.2,0.3 0.3,-0.7 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <svg:path inkscape:connector-curvature=\"0\"\r\n              id=\"IC\"\r\n              data-name=\"Canary Islands\"\r\n              data-id=\"IC\"\r\n              d=\"m 879.6,395.2 -0.2,-0.2 -0.7,0.5 -0.6,0 0.1,0.2 0.1,0.2 0.7,0.4 0.6,-1.1 z m 13.5,-2.1 0,-0.1 -0.1,0 -0.1,0.1 -1.3,-0.1 -0.2,0.6 -0.5,0.4 0,0.7 0.5,0.7 0.3,0.1 0.5,0.1 0.7,-0.4 0.2,-0.4 0.1,-0.8 -0.1,-0.4 0,-0.5 z m -9.7,0.8 0.5,-0.4 0,-0.2 -0.1,-0.3 -0.5,-0.3 -0.2,0 -0.2,0.2 -0.2,0.4 0.3,0.5 0.2,0.1 0.2,0 z m 4.7,-2.3 1.2,-1 0,-0.3 -1,0.1 -1.1,1 -0.3,0.1 -1,0.1 -0.5,0 -0.4,0.2 0.2,0.3 0.4,1 0.7,0.9 0.6,-0.2 0.3,-0.2 0.4,-0.6 0.5,-1.4 z m 11.6,1.3 1.5,-0.5 0.3,-1 0.3,-1.1 0,-0.7 -0.2,-0.3 -0.1,0 -0.4,0 -0.3,0.2 -0.1,0.6 -0.7,1.3 -0.5,1.2 -0.7,0.6 -0.7,0.2 0.1,0.1 0.7,0.1 0.8,-0.7 z m -19.7,-2 0.5,-0.5 0.1,-0.3 -0.1,-0.5 0.2,-0.2 -0.1,-0.4 -0.3,-0.4 -0.7,0 -0.4,0.6 0.6,1.2 0.1,0.5 0.1,0 z m 22.4,-2.7 0.9,-0.3 0.5,-0.3 0.1,-0.9 0.2,-0.3 -0.2,-0.3 -0.2,0.2 -0.2,0.4 -0.6,0.2 -0.8,0.4 -0.2,0.3 -0.2,0.9 0.4,0.1 0.3,-0.4 z\"\r\n              style=\"fill-rule:evenodd\" />\r\n    <circle *ngFor=\"let loc of locations\" (click)=\"loc.click(loc)\" placement=\"top\" container=\"body\" [ngbTooltip]=\"loc.city\" [attr.cx]=\"loc.point.x\" [attr.cy]=\"loc.point.y\" [attr.r]=\"locationMarkerSize\" opacity=\"0.8\" stroke-width=\"6\" stroke-opacity=\"0\" [attr.fill]=\"loc.color\" class=\"cursor-pointer\"></circle>\r\n\r\n    <defs>\r\n      <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"3.5\" refX=\"5\" refY=\"1.75\" orient=\"auto\">\r\n        <polyline points=\"0 0, 5 1.75, 0 3.5\" />\r\n      </marker>\r\n    </defs>\r\n    <line *ngFor=\"let arrow of arrows\" (click)=\"arrow.click(arrow)\" [attr.x1]=\"arrow.from.x\" [attr.y1]=\"arrow.from.y\" [attr.x2]=\"arrow.to.x\" [attr.y2]=\"arrow.to.y\" stroke=\"#000\" stroke-width=\"2\" marker-end=\"url(#arrowhead)\" />\r\n\r\n  </svg>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  favouriteProductToggled: action('favouriteProductToggled'),\r\n  workItemNavigated: action('workItemNavigated'),\r\n }"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  chartClicked: action('chartClicked'),\r\n  chartHovered: action('chartHovered'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  featureOpenRequested: action('featureOpenRequested'),\r\n  //  filterChanged: action('filterChanged'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  featureMoved: action('featureMoved'),\r\n  optionMoved: action('optionMoved'),\r\n  featureDeleted: action('featureDeleted'),\r\n  optionDeleted: action('optionDeleted'),\r\n  optionsActivated: action('optionsActivated'),\r\n  optionsDeactivated: action('optionsDeactivated'),\r\n  optionsReleasedToFactory: action('optionsReleasedToFactory'),\r\n  optionsUnreleasedFromFactory: action('optionsUnreleasedFromFactory'),\r\n  featureAnalyzerOpened: action('featureAnalyzerOpened'),\r\n  featureImporterOpened: action('featureImporterOpened'),\r\n  optionImporterOpened: action('optionImporterOpened'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  ticketNavigated: action('ticketNavigated'),\r\n  productNavigated: action('productNavigated'),\r\n  documentOpened: action('documentOpened'),\r\n  ticketAdded: action('ticketAdded'),\r\n  // TODO\r\n}"
            },
            {
                "name": "ADMIN_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/admin/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  {\r\n    path: '', component: SkeletonComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ }, children: [\r\n      { path: 'products', component: ProductsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'factories', component: FactoriesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'dimensions', component: DimensionsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'currencies', component: CurrenciesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n\r\n      { path: 'groups', component: GroupsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'roles', component: RolesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'permissions', component: PermissionsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      //{ path: 'proxies', component: AssignmentMatrixComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'assignments', component: AssignmentMatrixComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n\r\n      { path: 'business-units', component: BusinessUnitsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'areas', component: AreasComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'user-types', component: UserTypesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'export-groups', component: ExportGroupsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'upload-regions', component: UploadRegionsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'price-reports', component: PriceReportsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'sr-types', component: SrTypesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n\r\n      { path: 'site-map', component: SiteMapComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n     ]\r\n  }\r\n]"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes, initialNavigation),\r\n    provideClientHydration(),\r\n    provideHttpClient(withFetch(), withInterceptorsFromDi()),\r\n    importProvidersFrom([\r\n      TranslateModule.forRoot({ loader: { provide: TranslateLoader, useClass: CustomTranslationLoader, deps: [TranslationService] } })\r\n    ]),\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: MsalInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory\r\n    },\r\n    {\r\n      provide: MSAL_GUARD_CONFIG,\r\n      useFactory: MSALGuardConfigFactory\r\n    },\r\n    {\r\n      provide: MSAL_INTERCEPTOR_CONFIG,\r\n      useFactory: MSALInterceptorConfigFactory,\r\n    },\r\n    MsalService,\r\n    MsalGuard,\r\n    MsalBroadcastService,\r\n    BrowserStorageService,\r\n    provideAnimations()\r\n  ]\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "BROWSER_STORAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/core/browser-storage/browser-storage.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<Storage>('Browser Storage', {\r\n  providedIn: 'root',\r\n  factory: () => localStorage,\r\n})"
            },
            {
                "name": "CHANGE_MANAGEMENT_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/change-management/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  { path: 'change-request-list', component: ChangeRequestListComponent, resolve: { changeRequests: ChangeRequestListResolverService } },\r\n  { path: 'work-item-list', component: WorkItemListComponent, resolve: { workItems: WorkItemListResolverService } },\r\n  \r\n  { path: '', redirectTo: 'change-request-list', pathMatch: 'full' }\r\n]"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Checkbox - Checkbox List',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'checkbox',\r\n                    label: 'CheckBox',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'checkbox',\r\n                    label: 'CheckBox with Prefilled Value',\r\n                    name: 'id2',\r\n                    value: true\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'checkboxList',\r\n                    label: 'CheckBox List',\r\n                    name: 'id3',\r\n                    checkboxes:[\r\n                        { name: '1', label: 'Box 1', type: 'checkbox' },\r\n                        { name: '2', label: 'Box 2', type: 'checkbox' },\r\n                        { name: '3', label: 'Box 3', type: 'checkbox' },\r\n                    ]\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/components/dynamic-field.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\r\n  input: FormInputComponent,\r\n  password: FormPasswordComponent,\r\n  number: FormNumberComponent,\r\n  select: FormSelectComponent,\r\n  multiSelect: FormMultiSelectComponent,\r\n  multiSelectList: FormMultiSelectListComponent,\r\n  checkbox: FormCheckboxComponent,\r\n  checkboxList: FormCheckboxListComponent,\r\n  file: FormFileComponent,\r\n  static: FormStaticComponent,\r\n  area: FormAreaComponent,\r\n  staticArea: FormStaticAreaComponent,\r\n  date: FormDateComponent,\r\n  datetime: FormDateTimeComponent,\r\n  button: FormButtonComponent,\r\n  image: FormImagePreviewComponent\r\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "constants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/constants/constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  emptyGuid: '00000000-0000-0000-0000-000000000000'\r\n}"
            },
            {
                "name": "continents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/world-map/model/world-map-continent.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['Europe', 'North America', 'Latin America', 'Africa', 'Middle East', 'Asia' , 'Oceania'] as const"
            },
            {
                "name": "COUNTRIES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/world-map/world-map.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\r\n  \"AF\": {\r\n    \"name\": \"Afghanistan\",\r\n    \"id\": \"AF\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"AO\": {\r\n    \"name\": \"Angola\",\r\n    \"id\": \"AO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"AL\": {\r\n    \"name\": \"Albania\",\r\n    \"id\": \"AL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AE\": {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"id\": \"AE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"AR\": {\r\n    \"name\": \"Argentina\",\r\n    \"id\": \"AR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AM\": {\r\n    \"name\": \"Armenia\",\r\n    \"id\": \"AM\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"AU\": {\r\n    \"name\": \"Australia\",\r\n    \"id\": \"AU\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"AT\": {\r\n    \"name\": \"Austria\",\r\n    \"id\": \"AT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AZ\": {\r\n    \"name\": \"Azerbaijan\",\r\n    \"id\": \"AZ\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"BI\": {\r\n    \"name\": \"Burundi\",\r\n    \"id\": \"BI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BE\": {\r\n    \"name\": \"Belgium\",\r\n    \"id\": \"BE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BJ\": {\r\n    \"name\": \"Benin\",\r\n    \"id\": \"BJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BF\": {\r\n    \"name\": \"Burkina Faso\",\r\n    \"id\": \"BF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BD\": {\r\n    \"name\": \"Bangladesh\",\r\n    \"id\": \"BD\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BG\": {\r\n    \"name\": \"Bulgaria\",\r\n    \"id\": \"BG\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BA\": {\r\n    \"name\": \"Bosnia and Herz.\",\r\n    \"id\": \"BA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BY\": {\r\n    \"name\": \"Belarus\",\r\n    \"id\": \"BY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BZ\": {\r\n    \"name\": \"Belize\",\r\n    \"id\": \"BZ\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BO\": {\r\n    \"name\": \"Bolivia\",\r\n    \"id\": \"BO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BR\": {\r\n    \"name\": \"Brazil\",\r\n    \"id\": \"BR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BN\": {\r\n    \"name\": \"Brunei\",\r\n    \"id\": \"BN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BT\": {\r\n    \"name\": \"Bhutan\",\r\n    \"id\": \"BT\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BW\": {\r\n    \"name\": \"Botswana\",\r\n    \"id\": \"BW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CF\": {\r\n    \"name\": \"Central African Rep.\",\r\n    \"id\": \"CF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CA\": {\r\n    \"name\": \"Canada\",\r\n    \"id\": \"CA\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  \"CH\": {\r\n    \"name\": \"Switzerland\",\r\n    \"id\": \"CH\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"CL\": {\r\n    \"name\": \"Chile\",\r\n    \"id\": \"CL\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CN\": {\r\n    \"name\": \"China\",\r\n    \"id\": \"CN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"CI\": {\r\n    \"name\": \"Côte d'Ivoire\",\r\n    \"id\": \"CI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CM\": {\r\n    \"name\": \"Cameroon\",\r\n    \"id\": \"CM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CD\": {\r\n    \"name\": \"Dem. Rep. Congo\",\r\n    \"id\": \"CD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CG\": {\r\n    \"name\": \"Congo\",\r\n    \"id\": \"CG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CO\": {\r\n    \"name\": \"Colombia\",\r\n    \"id\": \"CO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CR\": {\r\n    \"name\": \"Costa Rica\",\r\n    \"id\": \"CR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CU\": {\r\n    \"name\": \"Cuba\",\r\n    \"id\": \"CU\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CZ\": {\r\n    \"name\": \"Czech Rep.\",\r\n    \"id\": \"CZ\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DE\": {\r\n    \"name\": \"Germany\",\r\n    \"id\": \"DE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DJ\": {\r\n    \"name\": \"Djibouti\",\r\n    \"id\": \"DJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"DK\": {\r\n    \"name\": \"Denmark\",\r\n    \"id\": \"DK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DO\": {\r\n    \"name\": \"Dominican Rep.\",\r\n    \"id\": \"DO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"DZ\": {\r\n    \"name\": \"Algeria\",\r\n    \"id\": \"DZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EC\": {\r\n    \"name\": \"Ecuador\",\r\n    \"id\": \"EC\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"EG\": {\r\n    \"name\": \"Egypt\",\r\n    \"id\": \"EG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ER\": {\r\n    \"name\": \"Eritrea\",\r\n    \"id\": \"ER\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EE\": {\r\n    \"name\": \"Estonia\",\r\n    \"id\": \"EE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ET\": {\r\n    \"name\": \"Ethiopia\",\r\n    \"id\": \"ET\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"FI\": {\r\n    \"name\": \"Finland\",\r\n    \"id\": \"FI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"FJ\": {\r\n    \"name\": \"Fiji\",\r\n    \"id\": \"FJ\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"GA\": {\r\n    \"name\": \"Gabon\",\r\n    \"id\": \"GA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GB\": {\r\n    \"name\": \"United Kingdom\",\r\n    \"id\": \"GB\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GE\": {\r\n    \"name\": \"Georgia\",\r\n    \"id\": \"GE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"GH\": {\r\n    \"name\": \"Ghana\",\r\n    \"id\": \"GH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GN\": {\r\n    \"name\": \"Guinea\",\r\n    \"id\": \"GN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GM\": {\r\n    \"name\": \"Gambia\",\r\n    \"id\": \"GM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GW\": {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"id\": \"GW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GQ\": {\r\n    \"name\": \"Eq. Guinea\",\r\n    \"id\": \"GQ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GR\": {\r\n    \"name\": \"Greece\",\r\n    \"id\": \"GR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GL\": {\r\n    \"name\": \"Greenland\",\r\n    \"id\": \"GL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GT\": {\r\n    \"name\": \"Guatemala\",\r\n    \"id\": \"GT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GY\": {\r\n    \"name\": \"Guyana\",\r\n    \"id\": \"GY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HN\": {\r\n    \"name\": \"Honduras\",\r\n    \"id\": \"HN\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HR\": {\r\n    \"name\": \"Croatia\",\r\n    \"id\": \"HR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"HT\": {\r\n    \"name\": \"Haiti\",\r\n    \"id\": \"HT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HU\": {\r\n    \"name\": \"Hungary\",\r\n    \"id\": \"HU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ID\": {\r\n    \"name\": \"Indonesia\",\r\n    \"id\": \"ID\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"IN\": {\r\n    \"name\": \"India\",\r\n    \"id\": \"IN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"IE\": {\r\n    \"name\": \"Ireland\",\r\n    \"id\": \"IE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"IR\": {\r\n    \"name\": \"Iran\",\r\n    \"id\": \"IR\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IQ\": {\r\n    \"name\": \"Iraq\",\r\n    \"id\": \"IQ\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IS\": {\r\n    \"name\": \"Iceland\",\r\n    \"id\": \"IS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"IL\": {\r\n    \"name\": \"Israel\",\r\n    \"id\": \"IL\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IT\": {\r\n    \"name\": \"Italy\",\r\n    \"id\": \"IT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"JM\": {\r\n    \"name\": \"Jamaica\",\r\n    \"id\": \"JM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"JO\": {\r\n    \"name\": \"Jordan\",\r\n    \"id\": \"JO\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"JP\": {\r\n    \"name\": \"Japan\",\r\n    \"id\": \"JP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KZ\": {\r\n    \"name\": \"Kazakhstan\",\r\n    \"id\": \"KZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KE\": {\r\n    \"name\": \"Kenya\",\r\n    \"id\": \"KE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"KG\": {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"id\": \"KG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KH\": {\r\n    \"name\": \"Cambodia\",\r\n    \"id\": \"KH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KR\": {\r\n    \"name\": \"Korea\",\r\n    \"id\": \"KR\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KW\": {\r\n    \"name\": \"Kuwait\",\r\n    \"id\": \"KW\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"LA\": {\r\n    \"name\": \"Lao PDR\",\r\n    \"id\": \"LA\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"LB\": {\r\n    \"name\": \"Lebanon\",\r\n    \"id\": \"LB\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"LR\": {\r\n    \"name\": \"Liberia\",\r\n    \"id\": \"LR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LY\": {\r\n    \"name\": \"Libya\",\r\n    \"id\": \"LY\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LK\": {\r\n    \"name\": \"Sri Lanka\",\r\n    \"id\": \"LK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"LS\": {\r\n    \"name\": \"Lesotho\",\r\n    \"id\": \"LS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LT\": {\r\n    \"name\": \"Lithuania\",\r\n    \"id\": \"LT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"LU\": {\r\n    \"name\": \"Luxembourg\",\r\n    \"id\": \"LU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"LV\": {\r\n    \"name\": \"Latvia\",\r\n    \"id\": \"LV\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MA\": {\r\n    \"name\": \"Morocco\",\r\n    \"id\": \"MA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MD\": {\r\n    \"name\": \"Moldova\",\r\n    \"id\": \"MD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MG\": {\r\n    \"name\": \"Madagascar\",\r\n    \"id\": \"MG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MX\": {\r\n    \"name\": \"Mexico\",\r\n    \"id\": \"MX\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"MK\": {\r\n    \"name\": \"Macedonia\",\r\n    \"id\": \"MK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ML\": {\r\n    \"name\": \"Mali\",\r\n    \"id\": \"ML\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MM\": {\r\n    \"name\": \"Myanmar\",\r\n    \"id\": \"MM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"ME\": {\r\n    \"name\": \"Montenegro\",\r\n    \"id\": \"ME\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MN\": {\r\n    \"name\": \"Mongolia\",\r\n    \"id\": \"MN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"MZ\": {\r\n    \"name\": \"Mozambique\",\r\n    \"id\": \"MZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MR\": {\r\n    \"name\": \"Mauritania\",\r\n    \"id\": \"MR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MW\": {\r\n    \"name\": \"Malawi\",\r\n    \"id\": \"MW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MY\": {\r\n    \"name\": \"Malaysia\",\r\n    \"id\": \"MY\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"NA\": {\r\n    \"name\": \"Namibia\",\r\n    \"id\": \"NA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NE\": {\r\n    \"name\": \"Niger\",\r\n    \"id\": \"NE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NG\": {\r\n    \"name\": \"Nigeria\",\r\n    \"id\": \"NG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NI\": {\r\n    \"name\": \"Nicaragua\",\r\n    \"id\": \"NI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"NL\": {\r\n    \"name\": \"Netherlands\",\r\n    \"id\": \"NL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"NO\": {\r\n    \"name\": \"Norway\",\r\n    \"id\": \"NO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"NP\": {\r\n    \"name\": \"Nepal\",\r\n    \"id\": \"NP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"NZ\": {\r\n    \"name\": \"New Zealand\",\r\n    \"id\": \"NZ\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"OM\": {\r\n    \"name\": \"Oman\",\r\n    \"id\": \"OM\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"PK\": {\r\n    \"name\": \"Pakistan\",\r\n    \"id\": \"PK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PA\": {\r\n    \"name\": \"Panama\",\r\n    \"id\": \"PA\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PE\": {\r\n    \"name\": \"Peru\",\r\n    \"id\": \"PE\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PH\": {\r\n    \"name\": \"Philippines\",\r\n    \"id\": \"PH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PG\": {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"id\": \"PG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PL\": {\r\n    \"name\": \"Poland\",\r\n    \"id\": \"PL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"KP\": {\r\n    \"name\": \"Dem. Rep. Korea\",\r\n    \"id\": \"KP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PT\": {\r\n    \"name\": \"Portugal\",\r\n    \"id\": \"PT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"PY\": {\r\n    \"name\": \"Paraguay\",\r\n    \"id\": \"PY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PS\": {\r\n    \"name\": \"Palestine\",\r\n    \"id\": \"PS\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"QA\": {\r\n    \"name\": \"Qatar\",\r\n    \"id\": \"QA\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"RO\": {\r\n    \"name\": \"Romania\",\r\n    \"id\": \"RO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RU\": {\r\n    \"name\": \"Russia\",\r\n    \"id\": \"RU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RW\": {\r\n    \"name\": \"Rwanda\",\r\n    \"id\": \"RW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EH\": {\r\n    \"name\": \"W. Sahara\",\r\n    \"id\": \"EH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SA\": {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"id\": \"SA\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"SD\": {\r\n    \"name\": \"Sudan\",\r\n    \"id\": \"SD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SS\": {\r\n    \"name\": \"S. Sudan\",\r\n    \"id\": \"SS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SN\": {\r\n    \"name\": \"Senegal\",\r\n    \"id\": \"SN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SL\": {\r\n    \"name\": \"Sierra Leone\",\r\n    \"id\": \"SL\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SV\": {\r\n    \"name\": \"El Salvador\",\r\n    \"id\": \"SV\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"RS\": {\r\n    \"name\": \"Serbia\",\r\n    \"id\": \"RS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SR\": {\r\n    \"name\": \"Suriname\",\r\n    \"id\": \"SR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SK\": {\r\n    \"name\": \"Slovakia\",\r\n    \"id\": \"SK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SI\": {\r\n    \"name\": \"Slovenia\",\r\n    \"id\": \"SI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SE\": {\r\n    \"name\": \"Sweden\",\r\n    \"id\": \"SE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SZ\": {\r\n    \"name\": \"Swaziland\",\r\n    \"id\": \"SZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SY\": {\r\n    \"name\": \"Syria\",\r\n    \"id\": \"SY\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"TD\": {\r\n    \"name\": \"Chad\",\r\n    \"id\": \"TD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TG\": {\r\n    \"name\": \"Togo\",\r\n    \"id\": \"TG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TH\": {\r\n    \"name\": \"Thailand\",\r\n    \"id\": \"TH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TJ\": {\r\n    \"name\": \"Tajikistan\",\r\n    \"id\": \"TJ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TM\": {\r\n    \"name\": \"Turkmenistan\",\r\n    \"id\": \"TM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TL\": {\r\n    \"name\": \"Timor-Leste\",\r\n    \"id\": \"TL\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TN\": {\r\n    \"name\": \"Tunisia\",\r\n    \"id\": \"TN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TR\": {\r\n    \"name\": \"Turkey\",\r\n    \"id\": \"TR\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"TW\": {\r\n    \"name\": \"Taiwan\",\r\n    \"id\": \"TW\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TZ\": {\r\n    \"name\": \"Tanzania\",\r\n    \"id\": \"TZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"UG\": {\r\n    \"name\": \"Uganda\",\r\n    \"id\": \"UG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"UA\": {\r\n    \"name\": \"Ukraine\",\r\n    \"id\": \"UA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"UY\": {\r\n    \"name\": \"Uruguay\",\r\n    \"id\": \"UY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"US\": {\r\n    \"name\": \"United States\",\r\n    \"id\": \"US\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  \"UZ\": {\r\n    \"name\": \"Uzbekistan\",\r\n    \"id\": \"UZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"VE\": {\r\n    \"name\": \"Venezuela\",\r\n    \"id\": \"VE\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VN\": {\r\n    \"name\": \"Vietnam\",\r\n    \"id\": \"VN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"VU\": {\r\n    \"name\": \"Vanuatu\",\r\n    \"id\": \"VU\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"YE\": {\r\n    \"name\": \"Yemen\",\r\n    \"id\": \"YE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"ZA\": {\r\n    \"name\": \"South Africa\",\r\n    \"id\": \"ZA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ZM\": {\r\n    \"name\": \"Zambia\",\r\n    \"id\": \"ZM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ZW\": {\r\n    \"name\": \"Zimbabwe\",\r\n    \"id\": \"ZW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SO\": {\r\n    \"name\": \"Somalia\",\r\n    \"id\": \"SO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GF\": {\r\n    \"name\": \"French Guiana\",\r\n    \"id\": \"GF\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FR\": {\r\n    \"name\": \"France\",\r\n    \"id\": \"FR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ES\": {\r\n    \"name\": \"Spain\",\r\n    \"id\": \"ES\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AW\": {\r\n    \"name\": \"Aruba\",\r\n    \"id\": \"AW\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AI\": {\r\n    \"name\": \"Anguilla\",\r\n    \"id\": \"AI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AD\": {\r\n    \"name\": \"Andorra\",\r\n    \"id\": \"AD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AG\": {\r\n    \"name\": \"Antigua and Barb.\",\r\n    \"id\": \"AG\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BS\": {\r\n    \"name\": \"Bahamas\",\r\n    \"id\": \"BS\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BM\": {\r\n    \"name\": \"Bermuda\",\r\n    \"id\": \"BM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BB\": {\r\n    \"name\": \"Barbados\",\r\n    \"id\": \"BB\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"KM\": {\r\n    \"name\": \"Comoros\",\r\n    \"id\": \"KM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CV\": {\r\n    \"name\": \"Cape Verde\",\r\n    \"id\": \"CV\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"KY\": {\r\n    \"name\": \"Cayman Is.\",\r\n    \"id\": \"KY\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"DM\": {\r\n    \"name\": \"Dominica\",\r\n    \"id\": \"DM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FK\": {\r\n    \"name\": \"Falkland Is.\",\r\n    \"id\": \"FK\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FO\": {\r\n    \"name\": \"Faeroe Is.\",\r\n    \"id\": \"FO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GD\": {\r\n    \"name\": \"Grenada\",\r\n    \"id\": \"GD\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HK\": {\r\n    \"name\": \"Hong Kong\",\r\n    \"id\": \"HK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KN\": {\r\n    \"name\": \"St. Kitts and Nevis\",\r\n    \"id\": \"KN\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"LC\": {\r\n    \"name\": \"Saint Lucia\",\r\n    \"id\": \"LC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"LI\": {\r\n    \"name\": \"Liechtenstein\",\r\n    \"id\": \"LI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MV\": {\r\n    \"name\": \"Maldives\",\r\n    \"id\": \"MV\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"MT\": {\r\n    \"name\": \"Malta\",\r\n    \"id\": \"MT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MS\": {\r\n    \"name\": \"Montserrat\",\r\n    \"id\": \"MS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MU\": {\r\n    \"name\": \"Mauritius\",\r\n    \"id\": \"MU\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NC\": {\r\n    \"name\": \"New Caledonia\",\r\n    \"id\": \"NC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"NR\": {\r\n    \"name\": \"Nauru\",\r\n    \"id\": \"NR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PN\": {\r\n    \"name\": \"Pitcairn Is.\",\r\n    \"id\": \"PN\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PR\": {\r\n    \"name\": \"Puerto Rico\",\r\n    \"id\": \"PR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PF\": {\r\n    \"name\": \"Fr. Polynesia\",\r\n    \"id\": \"PF\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"SG\": {\r\n    \"name\": \"Singapore\",\r\n    \"id\": \"SG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"SB\": {\r\n    \"name\": \"Solomon Is.\",\r\n    \"id\": \"SB\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"ST\": {\r\n    \"name\": \"São Tomé and Principe\",\r\n    \"id\": \"ST\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SX\": {\r\n    \"name\": \"Sint Maarten\",\r\n    \"id\": \"SX\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SC\": {\r\n    \"name\": \"Seychelles\",\r\n    \"id\": \"SC\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TC\": {\r\n    \"name\": \"Turks and Caicos Is.\",\r\n    \"id\": \"TC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"TO\": {\r\n    \"name\": \"Tonga\",\r\n    \"id\": \"TO\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"TT\": {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"id\": \"TT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VC\": {\r\n    \"name\": \"St. Vin. and Gren.\",\r\n    \"id\": \"VC\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VG\": {\r\n    \"name\": \"British Virgin Is.\",\r\n    \"id\": \"VG\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VI\": {\r\n    \"name\": \"U.S. Virgin Is.\",\r\n    \"id\": \"VI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CY\": {\r\n    \"name\": \"Cyprus\",\r\n    \"id\": \"CY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RE\": {\r\n    \"name\": \"Reunion\",\r\n    \"id\": \"RE\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"YT\": {\r\n    \"name\": \"Mayotte\",\r\n    \"id\": \"YT\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"MQ\": {\r\n    \"name\": \"Martinique\",\r\n    \"id\": \"MQ\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GP\": {\r\n    \"name\": \"Guadeloupe\",\r\n    \"id\": \"GP\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CW\": {\r\n    \"name\": \"Curaco\",\r\n    \"id\": \"CW\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"IC\": {\r\n    \"name\": \"Canary Islands\",\r\n    \"id\": \"IC\",\r\n    \"continent\": \"Africa\"\r\n  }\r\n}"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Static - Static Area',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'date',\r\n                    label: 'Date',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'date',\r\n                    label: 'Date Prefilled',\r\n                    name: 'id2',\r\n                    value:'2024-08-02'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'datetime',\r\n                    label: 'Date Time',\r\n                    name: 'id3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'datetime',\r\n                    label: 'Date Time Prefilled',\r\n                    name: 'id4',\r\n                    value:'2024-08-02T16:48'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    workItems: [\r\n      { id: '1', name: 'Task 1', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n      { id: '2', name: 'Task 2', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '3', name: '12 Fan' } },\r\n      { id: '3', name: 'Task 3', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '8', name: 'Evaporator' } },\r\n      { id: '4', name: 'Task 4', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '2', name: 'ECN24-0001E - EOM Structure' } },\r\n      { id: '5', name: 'Task 5', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '4', name: '14 Fan' } },\r\n      { id: '6', name: 'Task 6', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '9', name: 'Condenser' } },\r\n      { id: '7', name: 'Task 7', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '5', name: '0041 System Piping' } },\r\n      { id: '8', name: 'Task 8', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '6', name: '0048 System Piping' } },\r\n      { id: '9', name: 'Task 9', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '4', name: 'University of Texas CYK' }, feature: { id: '6', name: 'System' }, story: { id: '10', name: 'System Layout' } },\r\n      { id: '10', name: 'Task 10', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'Compressor Subs' }, story: { id: '7', name: 'Phase 1' } },\r\n      { id: '11', name: 'Task 11', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n      { id: '12', name: 'Task 12', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n\r\n    ]\r\n  },\r\n}",
                "rawdescription": "Default usage of the burn down chart",
                "description": "<p>Default usage of the burn down chart</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tasks: [\r\n      { id: '1', name: 'Task 1', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-09').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n      { id: '2', name: 'Task 2', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-05').toDateString()), actualCompletionDate: new Date(new Date('2024-02-07').toDateString()) },\r\n      { id: '3', name: 'Task 3', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-06').toDateString()), actualCompletionDate: new Date(new Date('2024-02-05').toDateString()) },\r\n      { id: '4', name: 'Task 4', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-08').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n      { id: '5', name: 'Task 5', effort: 21, plannedCompletionDate: new Date(new Date('2024-02-07').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n      { id: '6', name: 'Task 6', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-12').toDateString()), actualCompletionDate: new Date(new Date('2024-02-14').toDateString()) },\r\n      { id: '7', name: 'Task 7', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-16').toDateString()), actualCompletionDate: null },\r\n      { id: '8', name: 'Task 8', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-15').toDateString()), actualCompletionDate: null },\r\n      { id: '9', name: 'Task 9', effort: 2, plannedCompletionDate: new Date(new Date('2024-02-13').toDateString()), actualCompletionDate: new Date(new Date('2024-02-11').toDateString()) },\r\n      { id: '10', name: 'Task 10', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-14').toDateString()), actualCompletionDate: null }\r\n    ]     \r\n  },\r\n}",
                "rawdescription": "Default usage of the burn down chart",
                "description": "<p>Default usage of the burn down chart</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1), icon:faUser })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '5', label: 'Icon', name: 'icon', type: 'icon', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      groupBy: []\r\n    }\r\n  },\r\n}",
                "rawdescription": "Default usage of the data table",
                "description": "<p>Default usage of the data table</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    epics: [\r\n      { id: '1', name: 'Prototype #1', features: [{ id: '1', name: 'Feature 1' }] },\r\n      { id: '2', name: 'Prototype #2', features: [{ id: '2', name: 'Feature 2' }, { id: '4', name: 'Feature 4' }] },\r\n      { id: '3', name: 'Epic3', features: [{ id: '3', name: 'Feature 3' }] },\r\n    ],\r\n    programIncrements: [\r\n      { id: '25', name: 'PI 25' },\r\n      { id: '26', name: 'PI 26' },\r\n      { id: '27', name: 'PI 27' },\r\n      { id: '28', name: 'PI 28' }\r\n    ]\r\n  }\r\n}",
                "rawdescription": "Default usage of the feature map",
                "description": "<p>Default usage of the feature map</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    coordinates: [\r\n      { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#123456', click: () => { alert('You selected Paris'); } },\r\n      { id: '2', city: 'New York', lat: 40.730610, long: - 73.935242, color: '#ca2339', click: () => { alert('You selected New York'); } },\r\n    ],\r\n    flows: [],\r\n    selectedContinents: new Map([\r\n      ['Europe', { color: '#ff0000' }],\r\n      ['North America', { color: '#0000ff' }],\r\n      ['Africa', { color: '#f000ff' }],\r\n      ['Middle East', { color: '#000fff' }],\r\n      ['Latin America', { color: '#00ff00' }],\r\n      ['Asia', { color: '#a2f2a2' }],\r\n      ['Oceania', { color: '#aa88aa' }],\r\n    ])\r\n  },\r\n}",
                "rawdescription": "Default usage of the world map",
                "description": "<p>Default usage of the world map</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    \r\n  },\r\n}",
                "rawdescription": "Default usage of the data table",
                "description": "<p>Default usage of the data table</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    config:{\r\n        headerText: 'Add a new area',\r\n        submitText: 'Add',\r\n        closeText: 'Cancel',\r\n        labelSize: 3,\r\n        onSubmit: (e: any) => { alert(e); },\r\n        onDismiss: (e: any) => { },\r\n        fields: [\r\n          {\r\n            type: 'input',\r\n            label: 'Id',\r\n            name: 'id',\r\n            validation: [\r\n              CustomValidators.required('Area id is required')\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n  },\r\n}",
                "rawdescription": "Default usage of the data table",
                "description": "<p>Default usage of the data table</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    features: [\r\n      {\r\n        id: '1', category: { name: 'A' }, name: 'Feat 1', description: 'F1', rank: 'fdsf', notes: 'ABC', options: [\r\n          { id: '11', name: 'option11', description: 'desc11', rank: 'sdf', isActive: true, releases: [], isAutoGenerated: false },\r\n          { id: '12', name: 'option12', description: 'desc12', rank: 'aaa', isActive: true, releases: [], isAutoGenerated: false },\r\n        ]\r\n      },\r\n      {\r\n        id: '2', category: { name: 'B' }, name: 'Feat 2', description: 'F2', rank: 'dsf', notes: 'ABC', options: [\r\n          { id: '21', name: 'option21', description: 'desc21', rank: 'edc', isActive: true, releases: [], isAutoGenerated: false },\r\n          { id: '22', name: 'option22', description: 'desc22', rank: 'sqs', isActive: true, releases: [], isAutoGenerated: false }\r\n        ]\r\n      },\r\n      {\r\n        id: '3', category: { name: 'A' }, name: 'Feat 3', description: 'F3', rank: 'edc', notes: 'ABC', options: [\r\n          { id: '31', name: 'option31', description: 'desc31', rank: 'lkj', isActive: true, releases: [], isAutoGenerated: false },\r\n          { id: '32', name: 'option32', description: 'desc32', rank: 'ert', isActive: true, releases: [], isAutoGenerated: false }\r\n        ]\r\n      },\r\n    ],\r\n    dimensions: [],\r\n    factories: [\r\n      { id: '1', name: 'San Antonio', abbreviation: 'SAT' },\r\n      { id: '2', name: 'Nantes', abbreviation: 'NAN' },\r\n      { id: '3', name: 'Wuxi', abbreviation: 'WXF' }\r\n    ],\r\n    styles: [\r\n      { id: '1', name: 'A' },\r\n      { id: '2', name: 'B' },\r\n    ]\r\n  },\r\n}",
                "rawdescription": "Default usage of the burn down chart",
                "description": "<p>Default usage of the burn down chart</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tickets: [\r\n      { id: '1', name: 'Ticket 1', productLine: { id: '1', name: 'YLAA' }, ecn: 'ECN24-1234' },\r\n      { id: '2', name: 'Ticket 2', productLine: { id: '1', name: 'YLAA' }, },\r\n      { id: '3', name: 'Ticket 3', productLine: { id: '2', name: 'YMC2' }, },\r\n      { id: '4', name: 'Ticket 4', productLine: { id: '3', name: 'YK' }, },\r\n      { id: '5', name: 'Ticket 5', productLine: { id: '2', name: 'YMC2' }, },\r\n      { id: '6', name: 'Ticket 6', productLine: { id: '1', name: 'YLAA' }, },\r\n    ],\r\n    options: {} \r\n  },\r\n}",
                "rawdescription": "Default usage of the ticket dashboard",
                "description": "<p>Default usage of the ticket dashboard</p>\n"
            },
            {
                "name": "DEMOPROJECT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/projects/project/project.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Project",
                "defaultValue": "{\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n}"
            },
            {
                "name": "DEMOPROJECT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Project",
                "defaultValue": "{\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n}"
            },
            {
                "name": "DOCUMENTATION_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/documentation/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n//  { path: 'project-list', component: ProjectListComponent },\r\n//  { path: 'project', component: ProjectComponent },\r\n//  { path: '', redirectTo: 'project', pathMatch: 'full' }\r\n]"
            },
            {
                "name": "DraggableRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                "rawdescription": "TODO",
                "description": "<p>TODO</p>\n"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n\r\n  baseUrl: 'https://localhost:44321/api/v1/',\r\n\r\n  basePLMUrl: 'https://plm-train.johnsoncontrols.com/Windchill/servlet/odata/',\r\n\r\n  memoizeTimeOut: 50000,\r\n\r\n  msalConfig: {\r\n    auth: {\r\n      clientId: '828c8b82-d42b-4d36-ac70-58b85274d4d5', // This is the Id of the application registration on Azure Portal\r\n      authority: 'https://login.microsoftonline.com/a1f1e214-7ded-45b6-81a1-9e8ae3459641', // This is the Id of the Azure directory\r\n      redirectUri: 'http://localhost:4200',// This is your redirect URI\r\n      postLogoutRedirectUri: 'http://localhost:4200'// This is your redirect URI after log out\r\n    }\r\n  },\r\n\r\n  apiConfig: {\r\n    scopes: ['api://828c8b82-d42b-4d36-ac70-58b85274d4d5/access_as_user'],\r\n    uri: 'https://localhost:44321/'\r\n  },\r\n\r\n  graphConfig: {\r\n    scopes: ['user.read'],\r\n    uri: 'https://graph.microsoft.com/'\r\n  }\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n\r\n  baseUrl: 'https://localhost:44321/api/v1/',\r\n\r\n  basePLMUrl:'https://plm-train.johnsoncontrols.com/Windchill/servlet/odata/',\r\n\r\n  memoizeTimeOut: 50000,\r\n\r\n  msalConfig: {\r\n    auth: {\r\n      clientId: '828c8b82-d42b-4d36-ac70-58b85274d4d5', // This is the Id of the application registration on Azure Portal\r\n      authority: 'https://login.microsoftonline.com/a1f1e214-7ded-45b6-81a1-9e8ae3459641', // This is the Id of the Azure directory\r\n      redirectUri: 'http://localhost:4200',// This is your redirect URI\r\n      postLogoutRedirectUri: 'http://localhost:4200'// This is your redirect URI after log out\r\n    }\r\n  },\r\n\r\n  apiConfig:  {\r\n    scopes: ['api://828c8b82-d42b-4d36-ac70-58b85274d4d5/access_as_user'],\r\n    uri: 'https://localhost:44321/'\r\n  },\r\n  graphConfig: {\r\n    scopes: ['user.read'],\r\n    uri: 'https://graph.microsoft.com/'\r\n  }\r\n}"
            },
            {
                "name": "File",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'File',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'file',\r\n                    label: 'File',\r\n                    placeholder: 'Upload file',\r\n                    name: 'id',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "FilterableRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'numeric' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'select' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'filter' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                "rawdescription": "TODO",
                "description": "<p>TODO</p>\n"
            },
            {
                "name": "FormButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Form Button',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'button',\r\n                    label: 'Button1',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "HOME_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/home/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  { path: '', component: HomeComponent },\r\n]"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/shared/dimension.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/shared/factory.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/shared/product.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/features/shared/feature-list.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/change-management/shared/plm.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Basic Y3NlaWduYzpKY2lmcmFuY2VAMjAyMyE=' })\r\n}"
            },
            {
                "name": "httpOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/shared/components/version-page-template/services/version-page.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
            },
            {
                "name": "ImagePreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Image Preview',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'image',\r\n                    label: 'Image Preview',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "initialNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "withEnabledBlockingInitialNavigation()"
            },
            {
                "name": "InputAndNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Input',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input',\r\n                    placeholder: 'Enter Input Value',\r\n                    name: 'id',\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input with Prefilled data',\r\n                    name: 'id1',\r\n                    value: 'Test Data',\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input with TypeAhead (Auto Suggestion)',\r\n                    name: 'id2',\r\n                    // While using the type ahead verify the filter you want to have and update accordingly\r\n                    // Update the data as per your requirement\r\n                    // Specify the property you want to use to filter out the data in formatter & typeAhead\r\n                    typeAhead: (text$: Observable<string>) =>\r\n                        text$.pipe(\r\n                          debounceTime(300),\r\n                          distinctUntilChanged(),\r\n                            switchMap(term => of([{ id: 1, name: 'Test 1' }, { id: 2, name: 'Test ABC' }, { id: 3, name: 'input' }].filter(z => z.name.startsWith(term))).pipe(    \r\n                            tap(() => { }),\r\n                            catchError(() => {\r\n                              return of([]);\r\n                            }))\r\n                          ),\r\n                        ),   \r\n                    formatter: (x) => x.name != undefined ? x.name : x,\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'number',\r\n                    label: 'Numeric',\r\n                    name: 'number',\r\n                    validation: [\r\n                        CustomValidators.required('Field Name required')\r\n                    ]\r\n                }\r\n            ]\r\n\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'large',\r\n    label: 'Button',\r\n  },\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    user: {\r\n      name: 'Jane Doe',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\r\n    await expect(loginButton).toBeInTheDocument();\r\n    await userEvent.click(loginButton);\r\n    await expect(loginButton).not.toBeInTheDocument();\r\n\r\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\r\n    await expect(logoutButton).toBeInTheDocument();\r\n  },\r\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "MAX_DATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Date",
                "defaultValue": "new Date('9999-12-31')"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  title: 'Example/Button',\r\n  component: ButtonComponent,\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    backgroundColor: {\r\n      control: 'color',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\r\n  title: 'Example/Header',\r\n  component: HeaderComponent,\r\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\r\n  title: 'Example/Page',\r\n  component: PageComponent,\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BacklogTableComponent>",
                "defaultValue": "{\r\n  title: 'Backlog Table ',\r\n  component: BacklogTableComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Backlog table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: BacklogTableComponent) => ({\r\n    props: {\r\n      ...args,\r\n      favouriteProductToggled: actionsData.favouriteProductToggled,\r\n      workItemNavigated: actionsData.workItemNavigated\r\n    },\r\n    template: `<csps-backlog-table ${argsToTemplate(args)}></csps-backlog-table>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BurnDownChartComponent>",
                "defaultValue": "{\r\n  title: 'Burn Down Chart ',\r\n  component: BurnDownChartComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Burn down chart',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: BurnDownChartComponent) => ({\r\n    props: {\r\n      ...args,\r\n      chartClicked: actionsData.chartClicked,\r\n      chartHovered: actionsData.chartHovered,\r\n    },\r\n    template: `<csps-burn-down-chart ${argsToTemplate(args)}></csps-burn-down-chart>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DataTableComponent<TestData>>",
                "defaultValue": "{\r\n  title: 'DataTable',\r\n  component: DataTableComponent<TestData>,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Rich data table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: DataTableComponent<TestData>) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-data-table ${argsToTemplate(args)}></csps-data-table>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FeatureMapComponent>",
                "defaultValue": "{\r\n  title: 'FeatureMap',\r\n  component: FeatureMapComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Agile Feature Map',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: FeatureMapComponent) => ({\r\n    props: {\r\n      ...args,\r\n      featureOpenRequested: actionsData.featureOpenRequested,\r\n      //  filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-feature-map ${argsToTemplate(args)}></csps-feature-map>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<WorldMapComponent>",
                "defaultValue": "{\r\n  title: 'World Map',\r\n  component: WorldMapComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'An interactive world map',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`),\r\n  ],\r\n  render: (args: WorldMapComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n    template: `<csps-world-map ${argsToTemplate(args)}></csps-world-map>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProjectBudgetComponent>",
                "defaultValue": "{\r\n  title: 'Project Budget ',\r\n  component: ProjectBudgetComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Rich data table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: ProjectBudgetComponent) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-project-budget ${argsToTemplate(args)}></csps-project-budget>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DynamicFormModalComponent>",
                "defaultValue": "{\r\n  title: 'Dynamic Form Modal',\r\n  component: DynamicFormModalComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Dynamic Form Modal',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: DynamicFormModalComponent) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-dynamic-form-modal ${argsToTemplate(args)}></csps-dynamic-form-modal>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductFeatureListTableComponent>",
                "defaultValue": "{\r\n  title: 'Product Feature List Table',\r\n  component: ProductFeatureListTableComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Product Feature List Table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: ProductFeatureListTableComponent) => ({\r\n    props: {\r\n      ...args,\r\n      featureMoved: actionsData.featureMoved,\r\n      optionMoved: actionsData.optionMoved,\r\n      featureDeleted: actionsData.featureDeleted,\r\n      optionDeleted: actionsData.optionDeleted,\r\n      optionsActivated: actionsData.optionsActivated,\r\n      optionsDeactivated: actionsData.optionsDeactivated,\r\n      optionsReleasedToFactory: actionsData.optionsReleasedToFactory,\r\n      optionsUnreleasedFromFactory: actionsData.optionsUnreleasedFromFactory,\r\n      featureAnalyzerOpened: actionsData.featureAnalyzerOpened,\r\n      featureImporterOpened: actionsData.featureImporterOpened,\r\n      optionImporterOpened: actionsData.optionImporterOpened\r\n    },\r\n    template: `<csps-product-feature-list-table ${argsToTemplate(args)}></csps-product-feature-list-table>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TicketDashboardComponent>",
                "defaultValue": "{\r\n  title: 'Ticket Dashboard',\r\n  component: TicketDashboardComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Ticket Dashboard',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: TicketDashboardComponent) => ({\r\n    props: {\r\n      ...args,\r\n      ticketNavigated: actionsData.ticketNavigated,\r\n      productNavigated: actionsData.productNavigated,\r\n      documentOpened: actionsData.documentOpened,\r\n      ticketAdded: actionsData.ticketAdded\r\n    },\r\n    template: `<csps-ticket-dashboard ${argsToTemplate(args)}></csps-ticket-dashboard>`,\r\n  }),\r\n}"
            },
            {
                "name": "MIN_DATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Date",
                "defaultValue": "new Date(0)"
            },
            {
                "name": "MultiLevelGrouping",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i % 2), prop2: 'prop2 - ' + (i % 3) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: [\r\n        {\r\n          property: 'prop1', orderBy: ['prop1'], columns: [\r\n            { name: 'prop1', type: 'text', alignment: 'left', class: 'red-background', colspan: 4 }\r\n          ]\r\n        },\r\n        {\r\n          property: 'prop2', orderBy: ['prop2'], columns: [\r\n            { name: '', type: 'text', alignment: 'left', class: 'blue-50-background', colspan: 1 },\r\n            { name: 'prop2', type: 'text', alignment: 'left', class: 'blue-50-background', colspan: 3 }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}",
                "rawdescription": "TODO",
                "description": "<p>TODO</p>\n"
            },
            {
                "name": "Password",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Password',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'password',\r\n                    label: 'Password',\r\n                    placeholder: 'Enter Password',\r\n                    name: 'id',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "PLANNING_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/planning/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  {\r\n    path: '', component: SkeletonComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ }, children: [\r\n      { path: 'backlog', component: BacklogComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'priorities', component: PrioritiesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'efforts', component: EffortsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'scenarios', component: ScenariosComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'capacity', component: CapacityComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'commitment', component: CommitmentComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'retrospective', component: RetrospectiveComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'stats', component: StatsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: '', redirectTo: 'backlog', pathMatch: 'full' }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    primary: true,\r\n    label: 'Button',\r\n  },\r\n}"
            },
            {
                "name": "PRODUCTFEATURELIST_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/features/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  {\r\n    path: '', resolve: { document: FeatureListDocumentResolverService }, children: [\r\n      { path: 'versions/:versionId', component: ProductFeatureListComponent, resolve: { version: FeatureListVersionResolverService, factories: FactoriesResolverService, rules: FeatureListRuleSetResolverService } },\r\n      { path: '', redirectTo: 'versions/default', pathMatch: 'full' }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "PRODUCTRULELIST_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/rules/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  {\r\n    path: '', resolve: { /*document: FeatureListDocumentResolverService*/ }, children: [\r\n      { path: 'versions/:versionId', component: ProductRuleListComponent, resolve: { /*version: FeatureListVersionResolverService, factories: FactoriesResolverService, rules: FeatureListRuleSetResolverService*/ } },//\r\n      { path: '', redirectTo: 'versions/default', pathMatch: 'full' }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "PRODUCTS_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  {\r\n    path: '', resolve: { productList: ProductListResolverService, factoryList: FactoryListResolverService, dimensionList: DimensionListResolverService }, children: [\r\n      { path: '', component: ProductsComponent },\r\n      {\r\n        path: ':id', component: ProductComponent, resolve: { product: ProductResolverService, menu: MenuResolverService }, children: [\r\n          { path: 'features', loadChildren: () => import('./features/routes').then(mod => mod.PRODUCTFEATURELIST_ROUTES) },\r\n          { path: 'rules', loadChildren: () => import('./rules/routes').then(mod => mod.PRODUCTRULELIST_ROUTES) },\r\n          { path: 'settings', loadChildren: () => import('./settings/routes').then(mod => mod.PRODUCTSETTINGS_ROUTES) },\r\n          { path: 'test', component: TestComponent },\r\n          { path: '', redirectTo: 'test', pathMatch: 'full' }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "PRODUCTSETTINGS_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/settings/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  {\r\n    path: '', component: SettingsComponent, children: [\r\n      { path: 'overview', component: OverviewComponent },\r\n      { path: 'documents', component: DocumentsComponent, resolve: { /*documentList: ProductDocumentListResolverService*/ } },\r\n      { path: 'roles', component: RolesComponent, resolve: { /*roleDefinition: ProductRoleDefinitionResolverService, groupList: UserGroupListResolverService, factories: FactoriesResolverService, versions: ManufacturingFootprintVersionsResolverService*/ } },\r\n      { path: 'tickets', component: TicketsComponent, resolve: { /*ticketList: TicketListResolverService*/ } },\r\n      //  {\r\n      //    path: 'manufacturing', resolve: { document: ManufacturingFootprintDocumentResolverService }, children: [\r\n      //      { path: 'versions/:versionId', component: ManufacturingFootprintComponent, resolve: { version: ManufacturingFootprintVersionResolverService } },\r\n      //      { path: '', redirectTo: 'versions/default' }\r\n      //    ]\r\n      //  },\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "PROJECTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/projects/project-list/project-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Project[]",
                "defaultValue": "[\r\n  {\r\n    id: '1',\r\n    name: 'YKJ',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'YE',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'YMC2 M7',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'TBA',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n]"
            },
            {
                "name": "PROJECTS_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/projects/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  //{\r\n  //  path: '', component: SkeletonComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ }, children: [\r\n  //    //{ path: 'backlog', component: BacklogComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'priorities', component: PrioritiesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'efforts', component: EffortsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'scenarios', component: ScenariosComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'capacity', component: CapacityComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'commitment', component: CommitmentComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'retrospective', component: RetrospectiveComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'stats', component: StatsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    { path: '', redirectTo: 'backlog', pathMatch: 'full' }\r\n  //  ]\r\n  //}\r\n\r\n  { path: 'project-list', component: ProjectListComponent },\r\n  {\r\n    path: 'projects/:id', component: ProjectComponent, children: [\r\n      { path: 'preview', component: ProjectPreviewComponent },\r\n      { path: 'budget', component: ProjectBudgetComponent },\r\n      { path: 'design', component: ProjetDesignComponent },\r\n      { path: '', redirectTo: 'preview', pathMatch: 'full' }\r\n    ]\r\n  },\r\n\r\n  { path: '', redirectTo: 'project-list', pathMatch: 'full' }\r\n]"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Button',\r\n  },\r\n}"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Select - MultiSelect - MultiSelect List',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'select',\r\n                    label: 'Select Field',\r\n                    name: 'id1',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'select',\r\n                    label: 'Select Field With Pre Selected',\r\n                    name: 'id2',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value:'3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelect',\r\n                    label: 'MultiSelect',\r\n                    name: 'id3',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelect',\r\n                    label: 'MultiSelect with Prefilled Data',\r\n                    name: 'id4',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value: '3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelectList',\r\n                    label: 'MultiSelect List',\r\n                    name: 'id5',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelectList',\r\n                    label: 'MultiSelect List with Prefilled data',\r\n                    name: 'id6',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value: [['2', '3'], ['4']] || [[]]\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "SelectableAndDraggableRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                "rawdescription": "TODO",
                "description": "<p>TODO</p>\n"
            },
            {
                "name": "SelectableRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                "rawdescription": "TODO",
                "description": "<p>TODO</p>\n"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering(),\r\n    {\r\n      provide: BrowserStorageService,\r\n      useClass: BrowserStorageServerService,\r\n    },\r\n  ]\r\n}"
            },
            {
                "name": "SingleLevelGrouping",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i % 2), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: [\r\n        {\r\n          property: 'prop1', orderBy: ['prop1'], columns: [\r\n            { name: 'prop1', type: 'text', alignment: 'left', class: 'red-background', colspan: 4 }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}",
                "rawdescription": "TODO",
                "description": "<p>TODO</p>\n"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'small',\r\n    label: 'Button',\r\n  },\r\n}"
            },
            {
                "name": "StaticArea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Static - Static Area',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'static',\r\n                    label: 'Static',\r\n                    name: 'id1',\r\n                    value:'Static Data'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'staticArea',\r\n                    label: 'Static Area',\r\n                    name: 'id2',\r\n                    value:'Static Area'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'area',\r\n                    label: 'Area',\r\n                    name: 'id3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
            },
            {
                "name": "ThingView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/products/test/test.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "VirtualScrolling",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 1000 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                "rawdescription": "TODO",
                "description": "<p>TODO</p>\n"
            },
            {
                "name": "WORK_ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/app/features/work/routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  { path: 'home', component: HomeComponent },\r\n  \r\n  { path: 'change', loadChildren: () => import('./change-management/routes').then(mod => mod.CHANGE_MANAGEMENT_ROUTES) },\r\n  { path: 'planning', loadChildren: () => import('./planning/routes').then(mod => mod.PLANNING_ROUTES) },\r\n  { path: 'projects', loadChildren: () => import('./projects/routes').then(mod => mod.PROJECTS_ROUTES) },\r\n\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n]"
            }
        ],
        "functions": [
            {
                "name": "isEmptyInputValue",
                "file": "projects/main/src/app/shared/dynamic-form/custom-validators/custom-validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "loggerCallback",
                "file": "projects/main/src/app/app.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "logLevel",
                        "type": "LogLevel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "logLevel",
                        "type": "LogLevel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "memoize",
                "file": "projects/main/src/app/shared/memoize/memoize.decorator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "extractUniqueId",
                        "type": "MemoizePayload",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                        "destructuredParameter": true
                    },
                    {
                        "name": "clearCacheTimeout",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                        "destructuredParameter": true
                    },
                    {
                        "name": "debugReporter",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                        "destructuredParameter": true
                    }
                ],
                "returnType": "MemoizeDecorator",
                "jsdoctags": [
                    {
                        "name": "extractUniqueId",
                        "type": "MemoizePayload",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "clearCacheTimeout",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "debugReporter",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "MSALGuardConfigFactory",
                "file": "projects/main/src/app/app.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "MsalGuardConfiguration"
            },
            {
                "name": "MSALInstanceFactory",
                "file": "projects/main/src/app/app.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "IPublicClientApplication"
            },
            {
                "name": "MSALInterceptorConfigFactory",
                "file": "projects/main/src/app/app.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "MsalInterceptorConfiguration"
            }
        ],
        "typealiases": [
            {
                "name": "DataTableBaseData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/main/src/app/shared/data-table/model/data-table-base-data.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "DataTableRow",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/main/src/app/shared/data-table/model/data-table-row.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "MemoizeDecorator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "projects/main/src/app/shared/memoize/memoize-decorator.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/main/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "projects/main/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "projects/main/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BacklogTableComponent>",
                "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BurnDownChartComponent>",
                "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DataTableComponent<TestData>>",
                "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FeatureMapComponent>",
                "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<WorldMapComponent>",
                "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProjectBudgetComponent>",
                "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DynamicFormModalComponent>",
                "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductFeatureListTableComponent>",
                "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TicketDashboardComponent>",
                "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "WorldMapContinent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/main/src/app/shared/world-map/model/world-map-continent.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 199
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  favouriteProductToggled: action('favouriteProductToggled'),\r\n  workItemNavigated: action('workItemNavigated'),\r\n }"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    workItems: [\r\n      { id: '1', name: 'Task 1', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n      { id: '2', name: 'Task 2', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '3', name: '12 Fan' } },\r\n      { id: '3', name: 'Task 3', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '8', name: 'Evaporator' } },\r\n      { id: '4', name: 'Task 4', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '2', name: 'ECN24-0001E - EOM Structure' } },\r\n      { id: '5', name: 'Task 5', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '2', name: 'Unit assembly' }, story: { id: '4', name: '14 Fan' } },\r\n      { id: '6', name: 'Task 6', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '3', name: 'PDX Tcore CYK' }, feature: { id: '4', name: 'PV Vessels' }, story: { id: '9', name: 'Condenser' } },\r\n      { id: '7', name: 'Task 7', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '5', name: '0041 System Piping' } },\r\n      { id: '8', name: 'Task 8', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'System piping' }, story: { id: '6', name: '0048 System Piping' } },\r\n      { id: '9', name: 'Task 9', productLine: { id: '2', name: 'Sales Orders' }, epic: { id: '4', name: 'University of Texas CYK' }, feature: { id: '6', name: 'System' }, story: { id: '10', name: 'System Layout' } },\r\n      { id: '10', name: 'Task 10', productLine: { id: '1', name: 'YLAA' }, epic: { id: '2', name: 'YLAA Redesign' }, feature: { id: '3', name: 'Compressor Subs' }, story: { id: '7', name: 'Phase 1' } },\r\n      { id: '11', name: 'Task 11', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n      { id: '12', name: 'Task 12', productLine: { id: '1', name: 'YLAA' }, epic: { id: '1', name: 'YLAA Sustaining FY24' }, feature: { id: '1', name: 'Changes to drawings & EOM' }, story: { id: '1', name: 'ECN24-0002 - Update drawings' } },\r\n\r\n    ]\r\n  },\r\n}",
                    "rawdescription": "Default usage of the burn down chart",
                    "description": "<p>Default usage of the burn down chart</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BacklogTableComponent>",
                    "defaultValue": "{\r\n  title: 'Backlog Table ',\r\n  component: BacklogTableComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Backlog table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: BacklogTableComponent) => ({\r\n    props: {\r\n      ...args,\r\n      favouriteProductToggled: actionsData.favouriteProductToggled,\r\n      workItemNavigated: actionsData.workItemNavigated\r\n    },\r\n    template: `<csps-backlog-table ${argsToTemplate(args)}></csps-backlog-table>`,\r\n  }),\r\n}"
                }
            ],
            "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  chartClicked: action('chartClicked'),\r\n  chartHovered: action('chartHovered'),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tasks: [\r\n      { id: '1', name: 'Task 1', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-09').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n      { id: '2', name: 'Task 2', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-05').toDateString()), actualCompletionDate: new Date(new Date('2024-02-07').toDateString()) },\r\n      { id: '3', name: 'Task 3', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-06').toDateString()), actualCompletionDate: new Date(new Date('2024-02-05').toDateString()) },\r\n      { id: '4', name: 'Task 4', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-08').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n      { id: '5', name: 'Task 5', effort: 21, plannedCompletionDate: new Date(new Date('2024-02-07').toDateString()), actualCompletionDate: new Date(new Date('2024-02-09').toDateString()) },\r\n      { id: '6', name: 'Task 6', effort: 13, plannedCompletionDate: new Date(new Date('2024-02-12').toDateString()), actualCompletionDate: new Date(new Date('2024-02-14').toDateString()) },\r\n      { id: '7', name: 'Task 7', effort: 8, plannedCompletionDate: new Date(new Date('2024-02-16').toDateString()), actualCompletionDate: null },\r\n      { id: '8', name: 'Task 8', effort: 5, plannedCompletionDate: new Date(new Date('2024-02-15').toDateString()), actualCompletionDate: null },\r\n      { id: '9', name: 'Task 9', effort: 2, plannedCompletionDate: new Date(new Date('2024-02-13').toDateString()), actualCompletionDate: new Date(new Date('2024-02-11').toDateString()) },\r\n      { id: '10', name: 'Task 10', effort: 3, plannedCompletionDate: new Date(new Date('2024-02-14').toDateString()), actualCompletionDate: null }\r\n    ]     \r\n  },\r\n}",
                    "rawdescription": "Default usage of the burn down chart",
                    "description": "<p>Default usage of the burn down chart</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BurnDownChartComponent>",
                    "defaultValue": "{\r\n  title: 'Burn Down Chart ',\r\n  component: BurnDownChartComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Burn down chart',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: BurnDownChartComponent) => ({\r\n    props: {\r\n      ...args,\r\n      chartClicked: actionsData.chartClicked,\r\n      chartHovered: actionsData.chartHovered,\r\n    },\r\n    template: `<csps-burn-down-chart ${argsToTemplate(args)}></csps-burn-down-chart>`,\r\n  }),\r\n}"
                }
            ],
            "projects/main/src/app/shared/data-table/data-table.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1), icon:faUser })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '5', label: 'Icon', name: 'icon', type: 'icon', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      groupBy: []\r\n    }\r\n  },\r\n}",
                    "rawdescription": "Default usage of the data table",
                    "description": "<p>Default usage of the data table</p>\n"
                },
                {
                    "name": "DraggableRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                    "rawdescription": "TODO",
                    "description": "<p>TODO</p>\n"
                },
                {
                    "name": "FilterableRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'numeric' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'select' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'text' },\r\n      ],\r\n      selectableRows: false,\r\n      toolBar: {\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'filter' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                    "rawdescription": "TODO",
                    "description": "<p>TODO</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DataTableComponent<TestData>>",
                    "defaultValue": "{\r\n  title: 'DataTable',\r\n  component: DataTableComponent<TestData>,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Rich data table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: DataTableComponent<TestData>) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-data-table ${argsToTemplate(args)}></csps-data-table>`,\r\n  }),\r\n}"
                },
                {
                    "name": "MultiLevelGrouping",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i % 2), prop2: 'prop2 - ' + (i % 3) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: [\r\n        {\r\n          property: 'prop1', orderBy: ['prop1'], columns: [\r\n            { name: 'prop1', type: 'text', alignment: 'left', class: 'red-background', colspan: 4 }\r\n          ]\r\n        },\r\n        {\r\n          property: 'prop2', orderBy: ['prop2'], columns: [\r\n            { name: '', type: 'text', alignment: 'left', class: 'blue-50-background', colspan: 1 },\r\n            { name: 'prop2', type: 'text', alignment: 'left', class: 'blue-50-background', colspan: 3 }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}",
                    "rawdescription": "TODO",
                    "description": "<p>TODO</p>\n"
                },
                {
                    "name": "SelectableAndDraggableRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                    "rawdescription": "TODO",
                    "description": "<p>TODO</p>\n"
                },
                {
                    "name": "SelectableRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                    "rawdescription": "TODO",
                    "description": "<p>TODO</p>\n"
                },
                {
                    "name": "SingleLevelGrouping",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 25 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i % 2), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      cascadeParentSelectionToChildren: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: [\r\n        {\r\n          property: 'prop1', orderBy: ['prop1'], columns: [\r\n            { name: 'prop1', type: 'text', alignment: 'left', class: 'red-background', colspan: 4 }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}",
                    "rawdescription": "TODO",
                    "description": "<p>TODO</p>\n"
                },
                {
                    "name": "VirtualScrolling",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    settings: {\r\n      data: Array.from({ length: 1000 }).map((_, i) => ({ id: i + 1, name: 'test' + (i + 1), prop1: 'prop1 - ' + (i + 1), prop2: 'prop2 - ' + (i + 1) })),\r\n      columnDefinitions: [\r\n        { id: '1', label: 'Id Label', name: 'id', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '2', label: 'Name Label', name: 'name', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '3', label: 'Property1 Label', name: 'prop1', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n        { id: '4', label: 'Property2 Label', name: 'prop2', type: 'text', visible: true, searchable: false, filterMode: 'none' },\r\n      ],\r\n      selectableRows: true,\r\n      toolBar: {\r\n        left: [\r\n          { name: 'Action 1', type: 'button', icon: faGear, preserveSelection: false, callback: (rows) => alert(`${rows.length} rows selected. No preserve selection`) },\r\n          { name: 'Action 2', type: 'button', icon: faGear, preserveSelection: true, callback: (rows) => alert(`${rows.length} rows selected. Preserve selection`) }\r\n        ],\r\n        right: [\r\n          { type: 'search' } as DataTableToolbarControl,\r\n          { type: 'button', name: 'Right Action 1', callback: () => alert('Perform Action') },\r\n        ]\r\n      },\r\n      draggableRows: true,\r\n      groupBy: []\r\n    }\r\n  }\r\n}",
                    "rawdescription": "TODO",
                    "description": "<p>TODO</p>\n"
                }
            ],
            "projects/main/src/app/shared/feature-map/feature-map.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  featureOpenRequested: action('featureOpenRequested'),\r\n  //  filterChanged: action('filterChanged'),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    epics: [\r\n      { id: '1', name: 'Prototype #1', features: [{ id: '1', name: 'Feature 1' }] },\r\n      { id: '2', name: 'Prototype #2', features: [{ id: '2', name: 'Feature 2' }, { id: '4', name: 'Feature 4' }] },\r\n      { id: '3', name: 'Epic3', features: [{ id: '3', name: 'Feature 3' }] },\r\n    ],\r\n    programIncrements: [\r\n      { id: '25', name: 'PI 25' },\r\n      { id: '26', name: 'PI 26' },\r\n      { id: '27', name: 'PI 27' },\r\n      { id: '28', name: 'PI 28' }\r\n    ]\r\n  }\r\n}",
                    "rawdescription": "Default usage of the feature map",
                    "description": "<p>Default usage of the feature map</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FeatureMapComponent>",
                    "defaultValue": "{\r\n  title: 'FeatureMap',\r\n  component: FeatureMapComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Agile Feature Map',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: FeatureMapComponent) => ({\r\n    props: {\r\n      ...args,\r\n      featureOpenRequested: actionsData.featureOpenRequested,\r\n      //  filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-feature-map ${argsToTemplate(args)}></csps-feature-map>`,\r\n  }),\r\n}"
                }
            ],
            "projects/main/src/app/shared/world-map/world-map.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    coordinates: [\r\n      { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#123456', click: () => { alert('You selected Paris'); } },\r\n      { id: '2', city: 'New York', lat: 40.730610, long: - 73.935242, color: '#ca2339', click: () => { alert('You selected New York'); } },\r\n    ],\r\n    flows: [],\r\n    selectedContinents: new Map([\r\n      ['Europe', { color: '#ff0000' }],\r\n      ['North America', { color: '#0000ff' }],\r\n      ['Africa', { color: '#f000ff' }],\r\n      ['Middle East', { color: '#000fff' }],\r\n      ['Latin America', { color: '#00ff00' }],\r\n      ['Asia', { color: '#a2f2a2' }],\r\n      ['Oceania', { color: '#aa88aa' }],\r\n    ])\r\n  },\r\n}",
                    "rawdescription": "Default usage of the world map",
                    "description": "<p>Default usage of the world map</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<WorldMapComponent>",
                    "defaultValue": "{\r\n  title: 'World Map',\r\n  component: WorldMapComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'An interactive world map',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`),\r\n  ],\r\n  render: (args: WorldMapComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n    template: `<csps-world-map ${argsToTemplate(args)}></csps-world-map>`,\r\n  }),\r\n}"
                }
            ],
            "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    \r\n  },\r\n}",
                    "rawdescription": "Default usage of the data table",
                    "description": "<p>Default usage of the data table</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProjectBudgetComponent>",
                    "defaultValue": "{\r\n  title: 'Project Budget ',\r\n  component: ProjectBudgetComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Rich data table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: ProjectBudgetComponent) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-project-budget ${argsToTemplate(args)}></csps-project-budget>`,\r\n  }),\r\n}"
                }
            ],
            "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  itemMoved: action('itemMoved'),\r\n  filterChanged: action('filterChanged'),\r\n}"
                },
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Checkbox - Checkbox List',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'checkbox',\r\n                    label: 'CheckBox',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'checkbox',\r\n                    label: 'CheckBox with Prefilled Value',\r\n                    name: 'id2',\r\n                    value: true\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'checkboxList',\r\n                    label: 'CheckBox List',\r\n                    name: 'id3',\r\n                    checkboxes:[\r\n                        { name: '1', label: 'Box 1', type: 'checkbox' },\r\n                        { name: '2', label: 'Box 2', type: 'checkbox' },\r\n                        { name: '3', label: 'Box 3', type: 'checkbox' },\r\n                    ]\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Static - Static Area',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'date',\r\n                    label: 'Date',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'date',\r\n                    label: 'Date Prefilled',\r\n                    name: 'id2',\r\n                    value:'2024-08-02'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'datetime',\r\n                    label: 'Date Time',\r\n                    name: 'id3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'datetime',\r\n                    label: 'Date Time Prefilled',\r\n                    name: 'id4',\r\n                    value:'2024-08-02T16:48'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    config:{\r\n        headerText: 'Add a new area',\r\n        submitText: 'Add',\r\n        closeText: 'Cancel',\r\n        labelSize: 3,\r\n        onSubmit: (e: any) => { alert(e); },\r\n        onDismiss: (e: any) => { },\r\n        fields: [\r\n          {\r\n            type: 'input',\r\n            label: 'Id',\r\n            name: 'id',\r\n            validation: [\r\n              CustomValidators.required('Area id is required')\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n  },\r\n}",
                    "rawdescription": "Default usage of the data table",
                    "description": "<p>Default usage of the data table</p>\n"
                },
                {
                    "name": "File",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'File',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'file',\r\n                    label: 'File',\r\n                    placeholder: 'Upload file',\r\n                    name: 'id',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "FormButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Form Button',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'button',\r\n                    label: 'Button1',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "ImagePreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Image Preview',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'image',\r\n                    label: 'Image Preview',\r\n                    name: 'id1',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "InputAndNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Input',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input',\r\n                    placeholder: 'Enter Input Value',\r\n                    name: 'id',\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input with Prefilled data',\r\n                    name: 'id1',\r\n                    value: 'Test Data',\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'input',\r\n                    label: 'Input with TypeAhead (Auto Suggestion)',\r\n                    name: 'id2',\r\n                    // While using the type ahead verify the filter you want to have and update accordingly\r\n                    // Update the data as per your requirement\r\n                    // Specify the property you want to use to filter out the data in formatter & typeAhead\r\n                    typeAhead: (text$: Observable<string>) =>\r\n                        text$.pipe(\r\n                          debounceTime(300),\r\n                          distinctUntilChanged(),\r\n                            switchMap(term => of([{ id: 1, name: 'Test 1' }, { id: 2, name: 'Test ABC' }, { id: 3, name: 'input' }].filter(z => z.name.startsWith(term))).pipe(    \r\n                            tap(() => { }),\r\n                            catchError(() => {\r\n                              return of([]);\r\n                            }))\r\n                          ),\r\n                        ),   \r\n                    formatter: (x) => x.name != undefined ? x.name : x,\r\n                    validation: [\r\n                        CustomValidators.required('Field is required')\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'number',\r\n                    label: 'Numeric',\r\n                    name: 'number',\r\n                    validation: [\r\n                        CustomValidators.required('Field Name required')\r\n                    ]\r\n                }\r\n            ]\r\n\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DynamicFormModalComponent>",
                    "defaultValue": "{\r\n  title: 'Dynamic Form Modal',\r\n  component: DynamicFormModalComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Dynamic Form Modal',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%\">${story}</div>`)\r\n  ],\r\n  render: (args: DynamicFormModalComponent) => ({\r\n    props: {\r\n      ...args,\r\n      itemMoved: actionsData.itemMoved,\r\n      filterChanged: actionsData.filterChanged,\r\n    },\r\n    template: `<csps-dynamic-form-modal ${argsToTemplate(args)}></csps-dynamic-form-modal>`,\r\n  }),\r\n}"
                },
                {
                    "name": "Password",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Password',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'password',\r\n                    label: 'Password',\r\n                    placeholder: 'Enter Password',\r\n                    name: 'id',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Select - MultiSelect - MultiSelect List',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'select',\r\n                    label: 'Select Field',\r\n                    name: 'id1',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'select',\r\n                    label: 'Select Field With Pre Selected',\r\n                    name: 'id2',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value:'3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelect',\r\n                    label: 'MultiSelect',\r\n                    name: 'id3',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelect',\r\n                    label: 'MultiSelect with Prefilled Data',\r\n                    name: 'id4',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value: '3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelectList',\r\n                    label: 'MultiSelect List',\r\n                    name: 'id5',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'multiSelectList',\r\n                    label: 'MultiSelect List with Prefilled data',\r\n                    name: 'id6',\r\n                    options: [\r\n                        { key: '1', value: 'Op1' },\r\n                        { key: '2', value: 'Op2' },\r\n                        { key: '3', value: 'Op3' },\r\n                        { key: '4', value: 'Op4' },\r\n                    ],\r\n                    value: [['2', '3'], ['4']] || [[]]\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                },
                {
                    "name": "StaticArea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        config: {\r\n            headerText: 'Static - Static Area',\r\n            submitText: 'Add',\r\n            closeText: 'Cancel',\r\n            labelSize: 3,\r\n            onSubmit: (e: any) => { alert(e); },\r\n            onDismiss: (e: any) => { },\r\n            fields: [\r\n                {\r\n                    type: 'static',\r\n                    label: 'Static',\r\n                    name: 'id1',\r\n                    value:'Static Data'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'staticArea',\r\n                    label: 'Static Area',\r\n                    name: 'id2',\r\n                    value:'Static Area'\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                },\r\n                {\r\n                    type: 'area',\r\n                    label: 'Area',\r\n                    name: 'id3',\r\n                    // validation: [\r\n                    //     CustomValidators.required('Field is required')\r\n                    // ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n}"
                }
            ],
            "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  featureMoved: action('featureMoved'),\r\n  optionMoved: action('optionMoved'),\r\n  featureDeleted: action('featureDeleted'),\r\n  optionDeleted: action('optionDeleted'),\r\n  optionsActivated: action('optionsActivated'),\r\n  optionsDeactivated: action('optionsDeactivated'),\r\n  optionsReleasedToFactory: action('optionsReleasedToFactory'),\r\n  optionsUnreleasedFromFactory: action('optionsUnreleasedFromFactory'),\r\n  featureAnalyzerOpened: action('featureAnalyzerOpened'),\r\n  featureImporterOpened: action('featureImporterOpened'),\r\n  optionImporterOpened: action('optionImporterOpened'),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    features: [\r\n      {\r\n        id: '1', category: { name: 'A' }, name: 'Feat 1', description: 'F1', rank: 'fdsf', notes: 'ABC', options: [\r\n          { id: '11', name: 'option11', description: 'desc11', rank: 'sdf', isActive: true, releases: [], isAutoGenerated: false },\r\n          { id: '12', name: 'option12', description: 'desc12', rank: 'aaa', isActive: true, releases: [], isAutoGenerated: false },\r\n        ]\r\n      },\r\n      {\r\n        id: '2', category: { name: 'B' }, name: 'Feat 2', description: 'F2', rank: 'dsf', notes: 'ABC', options: [\r\n          { id: '21', name: 'option21', description: 'desc21', rank: 'edc', isActive: true, releases: [], isAutoGenerated: false },\r\n          { id: '22', name: 'option22', description: 'desc22', rank: 'sqs', isActive: true, releases: [], isAutoGenerated: false }\r\n        ]\r\n      },\r\n      {\r\n        id: '3', category: { name: 'A' }, name: 'Feat 3', description: 'F3', rank: 'edc', notes: 'ABC', options: [\r\n          { id: '31', name: 'option31', description: 'desc31', rank: 'lkj', isActive: true, releases: [], isAutoGenerated: false },\r\n          { id: '32', name: 'option32', description: 'desc32', rank: 'ert', isActive: true, releases: [], isAutoGenerated: false }\r\n        ]\r\n      },\r\n    ],\r\n    dimensions: [],\r\n    factories: [\r\n      { id: '1', name: 'San Antonio', abbreviation: 'SAT' },\r\n      { id: '2', name: 'Nantes', abbreviation: 'NAN' },\r\n      { id: '3', name: 'Wuxi', abbreviation: 'WXF' }\r\n    ],\r\n    styles: [\r\n      { id: '1', name: 'A' },\r\n      { id: '2', name: 'B' },\r\n    ]\r\n  },\r\n}",
                    "rawdescription": "Default usage of the burn down chart",
                    "description": "<p>Default usage of the burn down chart</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductFeatureListTableComponent>",
                    "defaultValue": "{\r\n  title: 'Product Feature List Table',\r\n  component: ProductFeatureListTableComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Product Feature List Table',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: ProductFeatureListTableComponent) => ({\r\n    props: {\r\n      ...args,\r\n      featureMoved: actionsData.featureMoved,\r\n      optionMoved: actionsData.optionMoved,\r\n      featureDeleted: actionsData.featureDeleted,\r\n      optionDeleted: actionsData.optionDeleted,\r\n      optionsActivated: actionsData.optionsActivated,\r\n      optionsDeactivated: actionsData.optionsDeactivated,\r\n      optionsReleasedToFactory: actionsData.optionsReleasedToFactory,\r\n      optionsUnreleasedFromFactory: actionsData.optionsUnreleasedFromFactory,\r\n      featureAnalyzerOpened: actionsData.featureAnalyzerOpened,\r\n      featureImporterOpened: actionsData.featureImporterOpened,\r\n      optionImporterOpened: actionsData.optionImporterOpened\r\n    },\r\n    template: `<csps-product-feature-list-table ${argsToTemplate(args)}></csps-product-feature-list-table>`,\r\n  }),\r\n}"
                }
            ],
            "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  ticketNavigated: action('ticketNavigated'),\r\n  productNavigated: action('productNavigated'),\r\n  documentOpened: action('documentOpened'),\r\n  ticketAdded: action('ticketAdded'),\r\n  // TODO\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tickets: [\r\n      { id: '1', name: 'Ticket 1', productLine: { id: '1', name: 'YLAA' }, ecn: 'ECN24-1234' },\r\n      { id: '2', name: 'Ticket 2', productLine: { id: '1', name: 'YLAA' }, },\r\n      { id: '3', name: 'Ticket 3', productLine: { id: '2', name: 'YMC2' }, },\r\n      { id: '4', name: 'Ticket 4', productLine: { id: '3', name: 'YK' }, },\r\n      { id: '5', name: 'Ticket 5', productLine: { id: '2', name: 'YMC2' }, },\r\n      { id: '6', name: 'Ticket 6', productLine: { id: '1', name: 'YLAA' }, },\r\n    ],\r\n    options: {} \r\n  },\r\n}",
                    "rawdescription": "Default usage of the ticket dashboard",
                    "description": "<p>Default usage of the ticket dashboard</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TicketDashboardComponent>",
                    "defaultValue": "{\r\n  title: 'Ticket Dashboard',\r\n  component: TicketDashboardComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    componentSubtitle:\r\n      'Ticket Dashboard',\r\n  },\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"height: 500px; width: 100%; display:flex\">${story}</div>`)\r\n  ],\r\n  render: (args: TicketDashboardComponent) => ({\r\n    props: {\r\n      ...args,\r\n      ticketNavigated: actionsData.ticketNavigated,\r\n      productNavigated: actionsData.productNavigated,\r\n      documentOpened: actionsData.documentOpened,\r\n      ticketAdded: actionsData.ticketAdded\r\n    },\r\n    template: `<csps-ticket-dashboard ${argsToTemplate(args)}></csps-ticket-dashboard>`,\r\n  }),\r\n}"
                }
            ],
            "projects/main/src/app/features/admin/routes.ts": [
                {
                    "name": "ADMIN_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/admin/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  {\r\n    path: '', component: SkeletonComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ }, children: [\r\n      { path: 'products', component: ProductsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'factories', component: FactoriesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'dimensions', component: DimensionsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'currencies', component: CurrenciesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n\r\n      { path: 'groups', component: GroupsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'roles', component: RolesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'permissions', component: PermissionsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      //{ path: 'proxies', component: AssignmentMatrixComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'assignments', component: AssignmentMatrixComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n\r\n      { path: 'business-units', component: BusinessUnitsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'areas', component: AreasComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'user-types', component: UserTypesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'export-groups', component: ExportGroupsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'upload-regions', component: UploadRegionsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'price-reports', component: PriceReportsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'sr-types', component: SrTypesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n\r\n      { path: 'site-map', component: SiteMapComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n     ]\r\n  }\r\n]"
                }
            ],
            "projects/main/src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes, initialNavigation),\r\n    provideClientHydration(),\r\n    provideHttpClient(withFetch(), withInterceptorsFromDi()),\r\n    importProvidersFrom([\r\n      TranslateModule.forRoot({ loader: { provide: TranslateLoader, useClass: CustomTranslationLoader, deps: [TranslationService] } })\r\n    ]),\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: MsalInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory\r\n    },\r\n    {\r\n      provide: MSAL_GUARD_CONFIG,\r\n      useFactory: MSALGuardConfigFactory\r\n    },\r\n    {\r\n      provide: MSAL_INTERCEPTOR_CONFIG,\r\n      useFactory: MSALInterceptorConfigFactory,\r\n    },\r\n    MsalService,\r\n    MsalGuard,\r\n    MsalBroadcastService,\r\n    BrowserStorageService,\r\n    provideAnimations()\r\n  ]\r\n}"
                },
                {
                    "name": "initialNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "withEnabledBlockingInitialNavigation()"
                }
            ],
            "projects/main/src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "projects/main/src/app/core/browser-storage/browser-storage.service.ts": [
                {
                    "name": "BROWSER_STORAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/core/browser-storage/browser-storage.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<Storage>('Browser Storage', {\r\n  providedIn: 'root',\r\n  factory: () => localStorage,\r\n})"
                }
            ],
            "projects/main/src/app/features/work/change-management/routes.ts": [
                {
                    "name": "CHANGE_MANAGEMENT_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/change-management/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  { path: 'change-request-list', component: ChangeRequestListComponent, resolve: { changeRequests: ChangeRequestListResolverService } },\r\n  { path: 'work-item-list', component: WorkItemListComponent, resolve: { workItems: WorkItemListResolverService } },\r\n  \r\n  { path: '', redirectTo: 'change-request-list', pathMatch: 'full' }\r\n]"
                }
            ],
            "projects/main/src/app/shared/dynamic-form/components/dynamic-field.directive.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/dynamic-form/components/dynamic-field.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\r\n  input: FormInputComponent,\r\n  password: FormPasswordComponent,\r\n  number: FormNumberComponent,\r\n  select: FormSelectComponent,\r\n  multiSelect: FormMultiSelectComponent,\r\n  multiSelectList: FormMultiSelectListComponent,\r\n  checkbox: FormCheckboxComponent,\r\n  checkboxList: FormCheckboxListComponent,\r\n  file: FormFileComponent,\r\n  static: FormStaticComponent,\r\n  area: FormAreaComponent,\r\n  staticArea: FormStaticAreaComponent,\r\n  date: FormDateComponent,\r\n  datetime: FormDateTimeComponent,\r\n  button: FormButtonComponent,\r\n  image: FormImagePreviewComponent\r\n}"
                }
            ],
            "projects/main/src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering(),\r\n    {\r\n      provide: BrowserStorageService,\r\n      useClass: BrowserStorageServerService,\r\n    },\r\n  ]\r\n}"
                }
            ],
            "projects/main/src/app/shared/constants/constants.ts": [
                {
                    "name": "constants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/constants/constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  emptyGuid: '00000000-0000-0000-0000-000000000000'\r\n}"
                }
            ],
            "projects/main/src/app/shared/world-map/model/world-map-continent.model.ts": [
                {
                    "name": "continents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/world-map/model/world-map-continent.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['Europe', 'North America', 'Latin America', 'Africa', 'Middle East', 'Asia' , 'Oceania'] as const"
                }
            ],
            "projects/main/src/app/shared/world-map/world-map.component.ts": [
                {
                    "name": "COUNTRIES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/world-map/world-map.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\r\n  \"AF\": {\r\n    \"name\": \"Afghanistan\",\r\n    \"id\": \"AF\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"AO\": {\r\n    \"name\": \"Angola\",\r\n    \"id\": \"AO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"AL\": {\r\n    \"name\": \"Albania\",\r\n    \"id\": \"AL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AE\": {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"id\": \"AE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"AR\": {\r\n    \"name\": \"Argentina\",\r\n    \"id\": \"AR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AM\": {\r\n    \"name\": \"Armenia\",\r\n    \"id\": \"AM\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"AU\": {\r\n    \"name\": \"Australia\",\r\n    \"id\": \"AU\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"AT\": {\r\n    \"name\": \"Austria\",\r\n    \"id\": \"AT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AZ\": {\r\n    \"name\": \"Azerbaijan\",\r\n    \"id\": \"AZ\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"BI\": {\r\n    \"name\": \"Burundi\",\r\n    \"id\": \"BI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BE\": {\r\n    \"name\": \"Belgium\",\r\n    \"id\": \"BE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BJ\": {\r\n    \"name\": \"Benin\",\r\n    \"id\": \"BJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BF\": {\r\n    \"name\": \"Burkina Faso\",\r\n    \"id\": \"BF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"BD\": {\r\n    \"name\": \"Bangladesh\",\r\n    \"id\": \"BD\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BG\": {\r\n    \"name\": \"Bulgaria\",\r\n    \"id\": \"BG\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BA\": {\r\n    \"name\": \"Bosnia and Herz.\",\r\n    \"id\": \"BA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BY\": {\r\n    \"name\": \"Belarus\",\r\n    \"id\": \"BY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"BZ\": {\r\n    \"name\": \"Belize\",\r\n    \"id\": \"BZ\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BO\": {\r\n    \"name\": \"Bolivia\",\r\n    \"id\": \"BO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BR\": {\r\n    \"name\": \"Brazil\",\r\n    \"id\": \"BR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BN\": {\r\n    \"name\": \"Brunei\",\r\n    \"id\": \"BN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BT\": {\r\n    \"name\": \"Bhutan\",\r\n    \"id\": \"BT\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"BW\": {\r\n    \"name\": \"Botswana\",\r\n    \"id\": \"BW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CF\": {\r\n    \"name\": \"Central African Rep.\",\r\n    \"id\": \"CF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CA\": {\r\n    \"name\": \"Canada\",\r\n    \"id\": \"CA\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  \"CH\": {\r\n    \"name\": \"Switzerland\",\r\n    \"id\": \"CH\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"CL\": {\r\n    \"name\": \"Chile\",\r\n    \"id\": \"CL\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CN\": {\r\n    \"name\": \"China\",\r\n    \"id\": \"CN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"CI\": {\r\n    \"name\": \"Côte d'Ivoire\",\r\n    \"id\": \"CI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CM\": {\r\n    \"name\": \"Cameroon\",\r\n    \"id\": \"CM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CD\": {\r\n    \"name\": \"Dem. Rep. Congo\",\r\n    \"id\": \"CD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CG\": {\r\n    \"name\": \"Congo\",\r\n    \"id\": \"CG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CO\": {\r\n    \"name\": \"Colombia\",\r\n    \"id\": \"CO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CR\": {\r\n    \"name\": \"Costa Rica\",\r\n    \"id\": \"CR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CU\": {\r\n    \"name\": \"Cuba\",\r\n    \"id\": \"CU\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CZ\": {\r\n    \"name\": \"Czech Rep.\",\r\n    \"id\": \"CZ\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DE\": {\r\n    \"name\": \"Germany\",\r\n    \"id\": \"DE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DJ\": {\r\n    \"name\": \"Djibouti\",\r\n    \"id\": \"DJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"DK\": {\r\n    \"name\": \"Denmark\",\r\n    \"id\": \"DK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"DO\": {\r\n    \"name\": \"Dominican Rep.\",\r\n    \"id\": \"DO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"DZ\": {\r\n    \"name\": \"Algeria\",\r\n    \"id\": \"DZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EC\": {\r\n    \"name\": \"Ecuador\",\r\n    \"id\": \"EC\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"EG\": {\r\n    \"name\": \"Egypt\",\r\n    \"id\": \"EG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ER\": {\r\n    \"name\": \"Eritrea\",\r\n    \"id\": \"ER\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EE\": {\r\n    \"name\": \"Estonia\",\r\n    \"id\": \"EE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ET\": {\r\n    \"name\": \"Ethiopia\",\r\n    \"id\": \"ET\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"FI\": {\r\n    \"name\": \"Finland\",\r\n    \"id\": \"FI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"FJ\": {\r\n    \"name\": \"Fiji\",\r\n    \"id\": \"FJ\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"GA\": {\r\n    \"name\": \"Gabon\",\r\n    \"id\": \"GA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GB\": {\r\n    \"name\": \"United Kingdom\",\r\n    \"id\": \"GB\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GE\": {\r\n    \"name\": \"Georgia\",\r\n    \"id\": \"GE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"GH\": {\r\n    \"name\": \"Ghana\",\r\n    \"id\": \"GH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GN\": {\r\n    \"name\": \"Guinea\",\r\n    \"id\": \"GN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GM\": {\r\n    \"name\": \"Gambia\",\r\n    \"id\": \"GM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GW\": {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"id\": \"GW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GQ\": {\r\n    \"name\": \"Eq. Guinea\",\r\n    \"id\": \"GQ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GR\": {\r\n    \"name\": \"Greece\",\r\n    \"id\": \"GR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GL\": {\r\n    \"name\": \"Greenland\",\r\n    \"id\": \"GL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"GT\": {\r\n    \"name\": \"Guatemala\",\r\n    \"id\": \"GT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GY\": {\r\n    \"name\": \"Guyana\",\r\n    \"id\": \"GY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HN\": {\r\n    \"name\": \"Honduras\",\r\n    \"id\": \"HN\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HR\": {\r\n    \"name\": \"Croatia\",\r\n    \"id\": \"HR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"HT\": {\r\n    \"name\": \"Haiti\",\r\n    \"id\": \"HT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HU\": {\r\n    \"name\": \"Hungary\",\r\n    \"id\": \"HU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ID\": {\r\n    \"name\": \"Indonesia\",\r\n    \"id\": \"ID\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"IN\": {\r\n    \"name\": \"India\",\r\n    \"id\": \"IN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"IE\": {\r\n    \"name\": \"Ireland\",\r\n    \"id\": \"IE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"IR\": {\r\n    \"name\": \"Iran\",\r\n    \"id\": \"IR\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IQ\": {\r\n    \"name\": \"Iraq\",\r\n    \"id\": \"IQ\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IS\": {\r\n    \"name\": \"Iceland\",\r\n    \"id\": \"IS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"IL\": {\r\n    \"name\": \"Israel\",\r\n    \"id\": \"IL\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"IT\": {\r\n    \"name\": \"Italy\",\r\n    \"id\": \"IT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"JM\": {\r\n    \"name\": \"Jamaica\",\r\n    \"id\": \"JM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"JO\": {\r\n    \"name\": \"Jordan\",\r\n    \"id\": \"JO\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"JP\": {\r\n    \"name\": \"Japan\",\r\n    \"id\": \"JP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KZ\": {\r\n    \"name\": \"Kazakhstan\",\r\n    \"id\": \"KZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KE\": {\r\n    \"name\": \"Kenya\",\r\n    \"id\": \"KE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"KG\": {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"id\": \"KG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KH\": {\r\n    \"name\": \"Cambodia\",\r\n    \"id\": \"KH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KR\": {\r\n    \"name\": \"Korea\",\r\n    \"id\": \"KR\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KW\": {\r\n    \"name\": \"Kuwait\",\r\n    \"id\": \"KW\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"LA\": {\r\n    \"name\": \"Lao PDR\",\r\n    \"id\": \"LA\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"LB\": {\r\n    \"name\": \"Lebanon\",\r\n    \"id\": \"LB\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"LR\": {\r\n    \"name\": \"Liberia\",\r\n    \"id\": \"LR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LY\": {\r\n    \"name\": \"Libya\",\r\n    \"id\": \"LY\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LK\": {\r\n    \"name\": \"Sri Lanka\",\r\n    \"id\": \"LK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"LS\": {\r\n    \"name\": \"Lesotho\",\r\n    \"id\": \"LS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"LT\": {\r\n    \"name\": \"Lithuania\",\r\n    \"id\": \"LT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"LU\": {\r\n    \"name\": \"Luxembourg\",\r\n    \"id\": \"LU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"LV\": {\r\n    \"name\": \"Latvia\",\r\n    \"id\": \"LV\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MA\": {\r\n    \"name\": \"Morocco\",\r\n    \"id\": \"MA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MD\": {\r\n    \"name\": \"Moldova\",\r\n    \"id\": \"MD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MG\": {\r\n    \"name\": \"Madagascar\",\r\n    \"id\": \"MG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MX\": {\r\n    \"name\": \"Mexico\",\r\n    \"id\": \"MX\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"MK\": {\r\n    \"name\": \"Macedonia\",\r\n    \"id\": \"MK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ML\": {\r\n    \"name\": \"Mali\",\r\n    \"id\": \"ML\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MM\": {\r\n    \"name\": \"Myanmar\",\r\n    \"id\": \"MM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"ME\": {\r\n    \"name\": \"Montenegro\",\r\n    \"id\": \"ME\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MN\": {\r\n    \"name\": \"Mongolia\",\r\n    \"id\": \"MN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"MZ\": {\r\n    \"name\": \"Mozambique\",\r\n    \"id\": \"MZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MR\": {\r\n    \"name\": \"Mauritania\",\r\n    \"id\": \"MR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MW\": {\r\n    \"name\": \"Malawi\",\r\n    \"id\": \"MW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"MY\": {\r\n    \"name\": \"Malaysia\",\r\n    \"id\": \"MY\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"NA\": {\r\n    \"name\": \"Namibia\",\r\n    \"id\": \"NA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NE\": {\r\n    \"name\": \"Niger\",\r\n    \"id\": \"NE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NG\": {\r\n    \"name\": \"Nigeria\",\r\n    \"id\": \"NG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NI\": {\r\n    \"name\": \"Nicaragua\",\r\n    \"id\": \"NI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"NL\": {\r\n    \"name\": \"Netherlands\",\r\n    \"id\": \"NL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"NO\": {\r\n    \"name\": \"Norway\",\r\n    \"id\": \"NO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"NP\": {\r\n    \"name\": \"Nepal\",\r\n    \"id\": \"NP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"NZ\": {\r\n    \"name\": \"New Zealand\",\r\n    \"id\": \"NZ\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"OM\": {\r\n    \"name\": \"Oman\",\r\n    \"id\": \"OM\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"PK\": {\r\n    \"name\": \"Pakistan\",\r\n    \"id\": \"PK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PA\": {\r\n    \"name\": \"Panama\",\r\n    \"id\": \"PA\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PE\": {\r\n    \"name\": \"Peru\",\r\n    \"id\": \"PE\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PH\": {\r\n    \"name\": \"Philippines\",\r\n    \"id\": \"PH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PG\": {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"id\": \"PG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PL\": {\r\n    \"name\": \"Poland\",\r\n    \"id\": \"PL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"KP\": {\r\n    \"name\": \"Dem. Rep. Korea\",\r\n    \"id\": \"KP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"PT\": {\r\n    \"name\": \"Portugal\",\r\n    \"id\": \"PT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"PY\": {\r\n    \"name\": \"Paraguay\",\r\n    \"id\": \"PY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PS\": {\r\n    \"name\": \"Palestine\",\r\n    \"id\": \"PS\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"QA\": {\r\n    \"name\": \"Qatar\",\r\n    \"id\": \"QA\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"RO\": {\r\n    \"name\": \"Romania\",\r\n    \"id\": \"RO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RU\": {\r\n    \"name\": \"Russia\",\r\n    \"id\": \"RU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RW\": {\r\n    \"name\": \"Rwanda\",\r\n    \"id\": \"RW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"EH\": {\r\n    \"name\": \"W. Sahara\",\r\n    \"id\": \"EH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SA\": {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"id\": \"SA\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"SD\": {\r\n    \"name\": \"Sudan\",\r\n    \"id\": \"SD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SS\": {\r\n    \"name\": \"S. Sudan\",\r\n    \"id\": \"SS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SN\": {\r\n    \"name\": \"Senegal\",\r\n    \"id\": \"SN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SL\": {\r\n    \"name\": \"Sierra Leone\",\r\n    \"id\": \"SL\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SV\": {\r\n    \"name\": \"El Salvador\",\r\n    \"id\": \"SV\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"RS\": {\r\n    \"name\": \"Serbia\",\r\n    \"id\": \"RS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SR\": {\r\n    \"name\": \"Suriname\",\r\n    \"id\": \"SR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SK\": {\r\n    \"name\": \"Slovakia\",\r\n    \"id\": \"SK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SI\": {\r\n    \"name\": \"Slovenia\",\r\n    \"id\": \"SI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SE\": {\r\n    \"name\": \"Sweden\",\r\n    \"id\": \"SE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"SZ\": {\r\n    \"name\": \"Swaziland\",\r\n    \"id\": \"SZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SY\": {\r\n    \"name\": \"Syria\",\r\n    \"id\": \"SY\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"TD\": {\r\n    \"name\": \"Chad\",\r\n    \"id\": \"TD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TG\": {\r\n    \"name\": \"Togo\",\r\n    \"id\": \"TG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TH\": {\r\n    \"name\": \"Thailand\",\r\n    \"id\": \"TH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TJ\": {\r\n    \"name\": \"Tajikistan\",\r\n    \"id\": \"TJ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TM\": {\r\n    \"name\": \"Turkmenistan\",\r\n    \"id\": \"TM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TL\": {\r\n    \"name\": \"Timor-Leste\",\r\n    \"id\": \"TL\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TN\": {\r\n    \"name\": \"Tunisia\",\r\n    \"id\": \"TN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"TR\": {\r\n    \"name\": \"Turkey\",\r\n    \"id\": \"TR\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"TW\": {\r\n    \"name\": \"Taiwan\",\r\n    \"id\": \"TW\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TZ\": {\r\n    \"name\": \"Tanzania\",\r\n    \"id\": \"TZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"UG\": {\r\n    \"name\": \"Uganda\",\r\n    \"id\": \"UG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"UA\": {\r\n    \"name\": \"Ukraine\",\r\n    \"id\": \"UA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"UY\": {\r\n    \"name\": \"Uruguay\",\r\n    \"id\": \"UY\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"US\": {\r\n    \"name\": \"United States\",\r\n    \"id\": \"US\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  \"UZ\": {\r\n    \"name\": \"Uzbekistan\",\r\n    \"id\": \"UZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"VE\": {\r\n    \"name\": \"Venezuela\",\r\n    \"id\": \"VE\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VN\": {\r\n    \"name\": \"Vietnam\",\r\n    \"id\": \"VN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"VU\": {\r\n    \"name\": \"Vanuatu\",\r\n    \"id\": \"VU\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"YE\": {\r\n    \"name\": \"Yemen\",\r\n    \"id\": \"YE\",\r\n    \"continent\": \"Middle East\"\r\n  },\r\n  \"ZA\": {\r\n    \"name\": \"South Africa\",\r\n    \"id\": \"ZA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ZM\": {\r\n    \"name\": \"Zambia\",\r\n    \"id\": \"ZM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"ZW\": {\r\n    \"name\": \"Zimbabwe\",\r\n    \"id\": \"ZW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"SO\": {\r\n    \"name\": \"Somalia\",\r\n    \"id\": \"SO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"GF\": {\r\n    \"name\": \"French Guiana\",\r\n    \"id\": \"GF\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FR\": {\r\n    \"name\": \"France\",\r\n    \"id\": \"FR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"ES\": {\r\n    \"name\": \"Spain\",\r\n    \"id\": \"ES\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AW\": {\r\n    \"name\": \"Aruba\",\r\n    \"id\": \"AW\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AI\": {\r\n    \"name\": \"Anguilla\",\r\n    \"id\": \"AI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"AD\": {\r\n    \"name\": \"Andorra\",\r\n    \"id\": \"AD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"AG\": {\r\n    \"name\": \"Antigua and Barb.\",\r\n    \"id\": \"AG\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BS\": {\r\n    \"name\": \"Bahamas\",\r\n    \"id\": \"BS\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BM\": {\r\n    \"name\": \"Bermuda\",\r\n    \"id\": \"BM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"BB\": {\r\n    \"name\": \"Barbados\",\r\n    \"id\": \"BB\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"KM\": {\r\n    \"name\": \"Comoros\",\r\n    \"id\": \"KM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"CV\": {\r\n    \"name\": \"Cape Verde\",\r\n    \"id\": \"CV\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"KY\": {\r\n    \"name\": \"Cayman Is.\",\r\n    \"id\": \"KY\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"DM\": {\r\n    \"name\": \"Dominica\",\r\n    \"id\": \"DM\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FK\": {\r\n    \"name\": \"Falkland Is.\",\r\n    \"id\": \"FK\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"FO\": {\r\n    \"name\": \"Faeroe Is.\",\r\n    \"id\": \"FO\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GD\": {\r\n    \"name\": \"Grenada\",\r\n    \"id\": \"GD\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"HK\": {\r\n    \"name\": \"Hong Kong\",\r\n    \"id\": \"HK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"KN\": {\r\n    \"name\": \"St. Kitts and Nevis\",\r\n    \"id\": \"KN\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"LC\": {\r\n    \"name\": \"Saint Lucia\",\r\n    \"id\": \"LC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"LI\": {\r\n    \"name\": \"Liechtenstein\",\r\n    \"id\": \"LI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MV\": {\r\n    \"name\": \"Maldives\",\r\n    \"id\": \"MV\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"MT\": {\r\n    \"name\": \"Malta\",\r\n    \"id\": \"MT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MS\": {\r\n    \"name\": \"Montserrat\",\r\n    \"id\": \"MS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"MU\": {\r\n    \"name\": \"Mauritius\",\r\n    \"id\": \"MU\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  \"NC\": {\r\n    \"name\": \"New Caledonia\",\r\n    \"id\": \"NC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"NR\": {\r\n    \"name\": \"Nauru\",\r\n    \"id\": \"NR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PN\": {\r\n    \"name\": \"Pitcairn Is.\",\r\n    \"id\": \"PN\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PR\": {\r\n    \"name\": \"Puerto Rico\",\r\n    \"id\": \"PR\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"PF\": {\r\n    \"name\": \"Fr. Polynesia\",\r\n    \"id\": \"PF\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"SG\": {\r\n    \"name\": \"Singapore\",\r\n    \"id\": \"SG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"SB\": {\r\n    \"name\": \"Solomon Is.\",\r\n    \"id\": \"SB\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"ST\": {\r\n    \"name\": \"São Tomé and Principe\",\r\n    \"id\": \"ST\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SX\": {\r\n    \"name\": \"Sint Maarten\",\r\n    \"id\": \"SX\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"SC\": {\r\n    \"name\": \"Seychelles\",\r\n    \"id\": \"SC\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"TC\": {\r\n    \"name\": \"Turks and Caicos Is.\",\r\n    \"id\": \"TC\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"TO\": {\r\n    \"name\": \"Tonga\",\r\n    \"id\": \"TO\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"TT\": {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"id\": \"TT\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VC\": {\r\n    \"name\": \"St. Vin. and Gren.\",\r\n    \"id\": \"VC\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VG\": {\r\n    \"name\": \"British Virgin Is.\",\r\n    \"id\": \"VG\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"VI\": {\r\n    \"name\": \"U.S. Virgin Is.\",\r\n    \"id\": \"VI\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CY\": {\r\n    \"name\": \"Cyprus\",\r\n    \"id\": \"CY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  \"RE\": {\r\n    \"name\": \"Reunion\",\r\n    \"id\": \"RE\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  \"YT\": {\r\n    \"name\": \"Mayotte\",\r\n    \"id\": \"YT\",\r\n    \"continent\": \"Oceania\"\r\n  },\r\n  \"MQ\": {\r\n    \"name\": \"Martinique\",\r\n    \"id\": \"MQ\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"GP\": {\r\n    \"name\": \"Guadeloupe\",\r\n    \"id\": \"GP\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"CW\": {\r\n    \"name\": \"Curaco\",\r\n    \"id\": \"CW\",\r\n    \"continent\": \"Latin America\"\r\n  },\r\n  \"IC\": {\r\n    \"name\": \"Canary Islands\",\r\n    \"id\": \"IC\",\r\n    \"continent\": \"Africa\"\r\n  }\r\n}"
                }
            ],
            "projects/main/src/app/features/work/projects/project/project.component.ts": [
                {
                    "name": "DEMOPROJECT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/projects/project/project.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project",
                    "defaultValue": "{\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n}"
                }
            ],
            "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts": [
                {
                    "name": "DEMOPROJECT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project",
                    "defaultValue": "{\r\n  name: 'YLAA (Style A & B) & YLUA (Style B) 60 Hz R-454B',\r\n  impactedContinents: ['Europe', 'Asia', 'North America'],\r\n  impactedFactories: [\r\n    { id: '1', city: 'Paris', lat: 48.864716, long: 2.349014, color: '#ff0000', click: () => { } },\r\n    { id: '2', city: 'New York', lat: 40.73061, long: -73.935242, color: '#ff0000', click: () => { } },\r\n    { id: '3', city: 'Test', lat: 50.73061, long: -73.935242, color: '#ff0000', click: () => { } }\r\n  ]\r\n}"
                }
            ],
            "projects/main/src/app/features/documentation/routes.ts": [
                {
                    "name": "DOCUMENTATION_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/documentation/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n//  { path: 'project-list', component: ProjectListComponent },\r\n//  { path: 'project', component: ProjectComponent },\r\n//  { path: '', redirectTo: 'project', pathMatch: 'full' }\r\n]"
                }
            ],
            "projects/main/src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n\r\n  baseUrl: 'https://localhost:44321/api/v1/',\r\n\r\n  basePLMUrl: 'https://plm-train.johnsoncontrols.com/Windchill/servlet/odata/',\r\n\r\n  memoizeTimeOut: 50000,\r\n\r\n  msalConfig: {\r\n    auth: {\r\n      clientId: '828c8b82-d42b-4d36-ac70-58b85274d4d5', // This is the Id of the application registration on Azure Portal\r\n      authority: 'https://login.microsoftonline.com/a1f1e214-7ded-45b6-81a1-9e8ae3459641', // This is the Id of the Azure directory\r\n      redirectUri: 'http://localhost:4200',// This is your redirect URI\r\n      postLogoutRedirectUri: 'http://localhost:4200'// This is your redirect URI after log out\r\n    }\r\n  },\r\n\r\n  apiConfig: {\r\n    scopes: ['api://828c8b82-d42b-4d36-ac70-58b85274d4d5/access_as_user'],\r\n    uri: 'https://localhost:44321/'\r\n  },\r\n\r\n  graphConfig: {\r\n    scopes: ['user.read'],\r\n    uri: 'https://graph.microsoft.com/'\r\n  }\r\n}"
                }
            ],
            "projects/main/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n\r\n  baseUrl: 'https://localhost:44321/api/v1/',\r\n\r\n  basePLMUrl:'https://plm-train.johnsoncontrols.com/Windchill/servlet/odata/',\r\n\r\n  memoizeTimeOut: 50000,\r\n\r\n  msalConfig: {\r\n    auth: {\r\n      clientId: '828c8b82-d42b-4d36-ac70-58b85274d4d5', // This is the Id of the application registration on Azure Portal\r\n      authority: 'https://login.microsoftonline.com/a1f1e214-7ded-45b6-81a1-9e8ae3459641', // This is the Id of the Azure directory\r\n      redirectUri: 'http://localhost:4200',// This is your redirect URI\r\n      postLogoutRedirectUri: 'http://localhost:4200'// This is your redirect URI after log out\r\n    }\r\n  },\r\n\r\n  apiConfig:  {\r\n    scopes: ['api://828c8b82-d42b-4d36-ac70-58b85274d4d5/access_as_user'],\r\n    uri: 'https://localhost:44321/'\r\n  },\r\n  graphConfig: {\r\n    scopes: ['user.read'],\r\n    uri: 'https://graph.microsoft.com/'\r\n  }\r\n}"
                }
            ],
            "projects/main/src/app/features/home/routes.ts": [
                {
                    "name": "HOME_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/home/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  { path: '', component: HomeComponent },\r\n]"
                }
            ],
            "projects/main/src/app/features/products/shared/dimension.service.ts": [
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/shared/dimension.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
                }
            ],
            "projects/main/src/app/features/products/shared/factory.service.ts": [
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/shared/factory.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
                }
            ],
            "projects/main/src/app/features/products/shared/product.service.ts": [
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/shared/product.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
                }
            ],
            "projects/main/src/app/features/products/features/shared/feature-list.service.ts": [
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/features/shared/feature-list.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
                }
            ],
            "projects/main/src/app/features/work/change-management/shared/plm.service.ts": [
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/change-management/shared/plm.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Basic Y3NlaWduYzpKY2lmcmFuY2VAMjAyMyE=' })\r\n}"
                }
            ],
            "projects/main/src/app/features/products/shared/components/version-page-template/services/version-page.service.ts": [
                {
                    "name": "httpOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/shared/components/version-page-template/services/version-page.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n}"
                }
            ],
            "projects/main/src/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'large',\r\n    label: 'Button',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  title: 'Example/Button',\r\n  component: ButtonComponent,\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      backgroundColor: null,\r\n      ...args,\r\n    },\r\n  }),\r\n  argTypes: {\r\n    backgroundColor: {\r\n      control: 'color',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    primary: true,\r\n    label: 'Button',\r\n  },\r\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Button',\r\n  },\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'small',\r\n    label: 'Button',\r\n  },\r\n}"
                }
            ],
            "projects/main/src/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    user: {\r\n      name: 'Jane Doe',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\r\n  title: 'Example/Header',\r\n  component: HeaderComponent,\r\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
                }
            ],
            "projects/main/src/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\r\n    await expect(loginButton).toBeInTheDocument();\r\n    await userEvent.click(loginButton);\r\n    await expect(loginButton).not.toBeInTheDocument();\r\n\r\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\r\n    await expect(logoutButton).toBeInTheDocument();\r\n  },\r\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\r\n  title: 'Example/Page',\r\n  component: PageComponent,\r\n  parameters: {\r\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\r\n    layout: 'fullscreen',\r\n  },\r\n}"
                }
            ],
            "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts": [
                {
                    "name": "MAX_DATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "defaultValue": "new Date('9999-12-31')"
                },
                {
                    "name": "MIN_DATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "defaultValue": "new Date(0)"
                }
            ],
            "projects/main/src/app/features/work/planning/routes.ts": [
                {
                    "name": "PLANNING_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/planning/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  {\r\n    path: '', component: SkeletonComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ }, children: [\r\n      { path: 'backlog', component: BacklogComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'priorities', component: PrioritiesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'efforts', component: EffortsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'scenarios', component: ScenariosComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'capacity', component: CapacityComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'commitment', component: CommitmentComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'retrospective', component: RetrospectiveComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: 'stats', component: StatsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n      { path: '', redirectTo: 'backlog', pathMatch: 'full' }\r\n    ]\r\n  }\r\n]"
                }
            ],
            "projects/main/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/main/src/app/features/products/features/routes.ts": [
                {
                    "name": "PRODUCTFEATURELIST_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/features/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  {\r\n    path: '', resolve: { document: FeatureListDocumentResolverService }, children: [\r\n      { path: 'versions/:versionId', component: ProductFeatureListComponent, resolve: { version: FeatureListVersionResolverService, factories: FactoriesResolverService, rules: FeatureListRuleSetResolverService } },\r\n      { path: '', redirectTo: 'versions/default', pathMatch: 'full' }\r\n    ]\r\n  }\r\n]"
                }
            ],
            "projects/main/src/app/features/products/rules/routes.ts": [
                {
                    "name": "PRODUCTRULELIST_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/rules/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  {\r\n    path: '', resolve: { /*document: FeatureListDocumentResolverService*/ }, children: [\r\n      { path: 'versions/:versionId', component: ProductRuleListComponent, resolve: { /*version: FeatureListVersionResolverService, factories: FactoriesResolverService, rules: FeatureListRuleSetResolverService*/ } },//\r\n      { path: '', redirectTo: 'versions/default', pathMatch: 'full' }\r\n    ]\r\n  }\r\n]"
                }
            ],
            "projects/main/src/app/features/products/routes.ts": [
                {
                    "name": "PRODUCTS_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  {\r\n    path: '', resolve: { productList: ProductListResolverService, factoryList: FactoryListResolverService, dimensionList: DimensionListResolverService }, children: [\r\n      { path: '', component: ProductsComponent },\r\n      {\r\n        path: ':id', component: ProductComponent, resolve: { product: ProductResolverService, menu: MenuResolverService }, children: [\r\n          { path: 'features', loadChildren: () => import('./features/routes').then(mod => mod.PRODUCTFEATURELIST_ROUTES) },\r\n          { path: 'rules', loadChildren: () => import('./rules/routes').then(mod => mod.PRODUCTRULELIST_ROUTES) },\r\n          { path: 'settings', loadChildren: () => import('./settings/routes').then(mod => mod.PRODUCTSETTINGS_ROUTES) },\r\n          { path: 'test', component: TestComponent },\r\n          { path: '', redirectTo: 'test', pathMatch: 'full' }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]"
                }
            ],
            "projects/main/src/app/features/products/settings/routes.ts": [
                {
                    "name": "PRODUCTSETTINGS_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/settings/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  {\r\n    path: '', component: SettingsComponent, children: [\r\n      { path: 'overview', component: OverviewComponent },\r\n      { path: 'documents', component: DocumentsComponent, resolve: { /*documentList: ProductDocumentListResolverService*/ } },\r\n      { path: 'roles', component: RolesComponent, resolve: { /*roleDefinition: ProductRoleDefinitionResolverService, groupList: UserGroupListResolverService, factories: FactoriesResolverService, versions: ManufacturingFootprintVersionsResolverService*/ } },\r\n      { path: 'tickets', component: TicketsComponent, resolve: { /*ticketList: TicketListResolverService*/ } },\r\n      //  {\r\n      //    path: 'manufacturing', resolve: { document: ManufacturingFootprintDocumentResolverService }, children: [\r\n      //      { path: 'versions/:versionId', component: ManufacturingFootprintComponent, resolve: { version: ManufacturingFootprintVersionResolverService } },\r\n      //      { path: '', redirectTo: 'versions/default' }\r\n      //    ]\r\n      //  },\r\n    ]\r\n  }\r\n]"
                }
            ],
            "projects/main/src/app/features/work/projects/project-list/project-list.component.ts": [
                {
                    "name": "PROJECTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/projects/project-list/project-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project[]",
                    "defaultValue": "[\r\n  {\r\n    id: '1',\r\n    name: 'YKJ',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'YE',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'YMC2 M7',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'TBA',\r\n    prop1: 'fdsf',\r\n    prop2: 'ezeaze'\r\n  },\r\n]"
                }
            ],
            "projects/main/src/app/features/work/projects/routes.ts": [
                {
                    "name": "PROJECTS_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/projects/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  //{\r\n  //  path: '', component: SkeletonComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ }, children: [\r\n  //    //{ path: 'backlog', component: BacklogComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'priorities', component: PrioritiesComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'efforts', component: EffortsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'scenarios', component: ScenariosComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'capacity', component: CapacityComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'commitment', component: CommitmentComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'retrospective', component: RetrospectiveComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    //{ path: 'stats', component: StatsComponent, resolve: { /*changeRequests: ChangeRequestListResolverService*/ } },\r\n  //    { path: '', redirectTo: 'backlog', pathMatch: 'full' }\r\n  //  ]\r\n  //}\r\n\r\n  { path: 'project-list', component: ProjectListComponent },\r\n  {\r\n    path: 'projects/:id', component: ProjectComponent, children: [\r\n      { path: 'preview', component: ProjectPreviewComponent },\r\n      { path: 'budget', component: ProjectBudgetComponent },\r\n      { path: 'design', component: ProjetDesignComponent },\r\n      { path: '', redirectTo: 'preview', pathMatch: 'full' }\r\n    ]\r\n  },\r\n\r\n  { path: '', redirectTo: 'project-list', pathMatch: 'full' }\r\n]"
                }
            ],
            "projects/main/src/app/features/products/test/test.component.ts": [
                {
                    "name": "ThingView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/products/test/test.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/main/src/app/features/work/routes.ts": [
                {
                    "name": "WORK_ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/app/features/work/routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  { path: 'home', component: HomeComponent },\r\n  \r\n  { path: 'change', loadChildren: () => import('./change-management/routes').then(mod => mod.CHANGE_MANAGEMENT_ROUTES) },\r\n  { path: 'planning', loadChildren: () => import('./planning/routes').then(mod => mod.PLANNING_ROUTES) },\r\n  { path: 'projects', loadChildren: () => import('./projects/routes').then(mod => mod.PROJECTS_ROUTES) },\r\n\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n]"
                }
            ]
        },
        "groupedFunctions": {
            "projects/main/src/app/shared/dynamic-form/custom-validators/custom-validators.ts": [
                {
                    "name": "isEmptyInputValue",
                    "file": "projects/main/src/app/shared/dynamic-form/custom-validators/custom-validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/main/src/app/app.config.ts": [
                {
                    "name": "loggerCallback",
                    "file": "projects/main/src/app/app.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "logLevel",
                            "type": "LogLevel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "logLevel",
                            "type": "LogLevel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "MSALGuardConfigFactory",
                    "file": "projects/main/src/app/app.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "MsalGuardConfiguration"
                },
                {
                    "name": "MSALInstanceFactory",
                    "file": "projects/main/src/app/app.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "IPublicClientApplication"
                },
                {
                    "name": "MSALInterceptorConfigFactory",
                    "file": "projects/main/src/app/app.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "MsalInterceptorConfiguration"
                }
            ],
            "projects/main/src/app/shared/memoize/memoize.decorator.ts": [
                {
                    "name": "memoize",
                    "file": "projects/main/src/app/shared/memoize/memoize.decorator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "extractUniqueId",
                            "type": "MemoizePayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                            "destructuredParameter": true
                        },
                        {
                            "name": "clearCacheTimeout",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                            "destructuredParameter": true
                        },
                        {
                            "name": "debugReporter",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                            "destructuredParameter": true
                        }
                    ],
                    "returnType": "MemoizeDecorator",
                    "jsdoctags": [
                        {
                            "name": "extractUniqueId",
                            "type": "MemoizePayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "clearCacheTimeout",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "debugReporter",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9e54574f-afaa-41c5-be86-a193b4d89c33",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/main/src/app/shared/data-table/model/data-table-base-data.model.ts": [
                {
                    "name": "DataTableBaseData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/main/src/app/shared/data-table/model/data-table-base-data.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "projects/main/src/app/shared/data-table/model/data-table-row.model.ts": [
                {
                    "name": "DataTableRow",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/main/src/app/shared/data-table/model/data-table-row.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "projects/main/src/app/shared/memoize/memoize-decorator.model.ts": [
                {
                    "name": "MemoizeDecorator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "projects/main/src/app/shared/memoize/memoize-decorator.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/main/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/main/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "projects/main/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "projects/main/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BacklogTableComponent>",
                    "file": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BurnDownChartComponent>",
                    "file": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/shared/data-table/data-table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DataTableComponent<TestData>>",
                    "file": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/shared/feature-map/feature-map.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FeatureMapComponent>",
                    "file": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/shared/world-map/world-map.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<WorldMapComponent>",
                    "file": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProjectBudgetComponent>",
                    "file": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DynamicFormModalComponent>",
                    "file": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductFeatureListTableComponent>",
                    "file": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TicketDashboardComponent>",
                    "file": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/main/src/app/shared/world-map/model/world-map-continent.model.ts": [
                {
                    "name": "WorldMapContinent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/main/src/app/shared/world-map/model/world-map-continent.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 199
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "projects/main/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "loggerCallback",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MSALGuardConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MSALInstanceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MSALInterceptorConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/browser-storage/browser-storage-server.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BrowserStorageServerService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/browser-storage/browser-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BrowserStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/browser-storage/browser-storage.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BROWSER_STORAGE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/translation/custom-translation-loader.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomTranslationLoader",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/translation/language.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Language",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/translation/translation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TranslationService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/user/model/authenticated-user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthenticatedUser",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/core/user/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/areas/areas.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreasComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/assignment-matrix/assignment-matrix.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssignmentMatrixComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/business-units/business-units.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BusinessUnitsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/currencies/currencies.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CurrenciesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/dimensions/dimensions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DimensionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/export-groups/export-groups.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExportGroupsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/factories/factories.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FactoriesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/groups/groups.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/permissions/permissions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PermissionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/price-reports/price-reports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PriceReportsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/products/products.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/roles/roles.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RolesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADMIN_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/site-map/site-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/sr-types/sr-types.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SrTypesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/upload-regions/upload-regions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadRegionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/admin/user-types/user-types.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserTypesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/documentation/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DOCUMENTATION_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/home/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/home/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOME_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/product-feature-list/product-feature-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductFeatureListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/route-resolvers/factories-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "FactoriesResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/route-resolvers/feature-list-document-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "FeatureListDocumentResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/route-resolvers/feature-list-rule-set-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "FeatureListRuleSetResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/route-resolvers/feature-list-version-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "FeatureListVersionResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCTFEATURELIST_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/feature-analyzer/feature-analyzer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeatureAnalyzerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/feature-list.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeatureListService",
                "coveragePercent": 0,
                "coverageCount": "0/73",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/feature-list.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/models/feature-factory-list.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureFactoryList",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/models/feature-list-factory.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureListFactory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/models/feature-list-version.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureListVersion",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/models/feature-ruleset.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureRuleSet",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-array-size.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductFeatureListTableArraySize",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-category.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductFeatureListTableCategory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-factory.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductFeatureListTableFactory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-feature.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductFeatureListTableFeature",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-option.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductFeatureListTableOption",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-options.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductFeatureListTableOptions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/model/product-feature-list-table-style.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductFeatureListTableStyle",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductFeatureListTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/50",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "optionLookupMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/features/products/features/shared/product-feature-list-table/product-feature-list-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/product/product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/products/products.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/route-resolvers/dimension-list-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "DimensionListResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/route-resolvers/factory-list-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "FactoryListResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/route-resolvers/menu-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "MenuResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/route-resolvers/product-list-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ProductListResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/route-resolvers/product-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ProductResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCTS_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/rules/product-rule-list/product-rule-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductRuleListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/rules/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCTRULELIST_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/settings/documents/documents.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/settings/overview/overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/settings/roles/roles.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RolesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/settings/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCTSETTINGS_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/settings/settings/settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/settings/tickets/tickets.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TicketsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/anomalies/anomalies.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AnomaliesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/anomalies/model/anomaly.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Anomaly",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/feature-comparer/models/feature-comparison.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureComparison",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/feature-comparer/models/feature-list-version-comparison.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeatureListVersionComparison",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/ticket-dashboard/model/ticket-dashboard-options.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketDashboardOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/ticket-dashboard/model/ticket-dashboard-ticket.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketDashboardTicket",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TicketDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/ticket-dashboard/ticket-dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/models/base-version.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseVersion",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/models/behaviour-options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BehaviourOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/models/document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseDocument",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/models/version-change-history.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseVersionChangeHistory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/models/version-comparison.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseVersionComparison",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/models/version-lite.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseVersionLite",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/services/version-page.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "VersionPageService",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/services/version-page.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/components/version-page-template/version-page-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VersionPageTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/dimension.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DimensionService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/dimension.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/factory.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FactoryService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/factory.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/dimensions/dimension-list.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DimensionList",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/dimensions/dimension.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Dimension",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/dimensions/precision.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Precision",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/dimensions/uom.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Uom",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/factory/factory.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Factory",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/factory/mrp.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Mrp",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/menu/product-menu-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/product/product-mod-level.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductModLevel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/product/product-style.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductStyle",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/product/product.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/anomaly.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Anomaly",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/ticket-document-version.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketDocumentVersion",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/ticket-list.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketList",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/ticket-lite.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketLite",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/ticket-validation-report.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketValidationReport",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/ticket-validation-status.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketValidationStatus",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/ticket-validation.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TicketValidation",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/models/ticket/ticket.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Ticket",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/product-menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductMenuService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/product.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductService",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/product.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/shared/ticket.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TicketService",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/test/test.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/products/test/test.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThingView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/change-request-list/change-request-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChangeRequestListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/route-resolvers/change-request-list-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ChangeRequestListResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/route-resolvers/work-item-list-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "WorkItemListResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHANGE_MANAGEMENT_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/shared/models/change-request.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChangeRequest",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/shared/models/work-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WorkItem",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/shared/plm.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PLMService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/shared/plm.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/shared/plm.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/change-management/work-item-list/work-item-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkItemListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/backlog/backlog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BacklogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/capacity/capacity.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CapacityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/commitment/commitment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommitmentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/efforts/efforts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EffortsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/priorities/priorities.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrioritiesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/retrospective/retrospective.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RetrospectiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PLANNING_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/scenarios/scenarios.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScenariosComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/shared/planning-menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PlanningMenuService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/planning/stats/stats.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-budget/project-budget.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectBudgetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-budget/project-budget.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Budget",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-budget/project-budget.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-list/project-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-list/project-list.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROJECTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectPreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Project",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project-preview/project-preview.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEMOPROJECT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project/project.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project/project.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Project",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/project/project.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEMOPROJECT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/projet-design/projet-design.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjetDesignComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/projects/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROJECTS_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WORK_ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/features/work/shared/project.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Project",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/login-failed/login-failed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginFailedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/backlog-table/backlog-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BacklogTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/backlog-table/backlog-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/backlog-table/model/backlog-table-options.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BacklogTableOptions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/backlog-table/model/backlog-table-work-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BacklogTableWorkItem",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BurnDownChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MAX_DATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MIN_DATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/burn-down-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/model/burn-down-chart-options.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BurnDownChartOptions",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/burn-down-chart/model/burn-down-chart-task.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BurnDownChartTask",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/constants/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "constants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/81",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DraggableRows",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilterableRows",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiLevelGrouping",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectableAndDraggableRows",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectableRows",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleLevelGrouping",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/data-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VirtualScrolling",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/model/data-table-cell.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableCell",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/model/data-table-column-definition.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableColumnDefinition",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/model/data-table-column.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableColumn",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/model/data-table-group-by.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableGroupBy",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/model/data-table-settings.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableSettings",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/model/data-table-toolbar-control.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableToolbarControl",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/data-table/model/data-table-toolbar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableToolbar",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/default-image/default-image.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DefaultImageDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/double-click/double-click.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DoubleClickDirective",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/dynamic-field.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DynamicFieldDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/dynamic-field.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-area/form-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-button/form-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-checkbox-list/form-checkbox-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormCheckboxListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-checkbox/form-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-date-time/form-date-time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormDateTimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-date/form-date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormDateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-file/form-file.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-image-preview/form-image-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormImagePreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-image-preview/image-preview/image-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImagePreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-input/form-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-multi-select-list/form-multi-select-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormMultiSelectListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-multi-select-list/multi-select-item/multi-select-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-multi-select-list/multi-select-list/multi-select-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-multi-select/form-multi-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormMultiSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-multi-select/multi-select/multi-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-number/form-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-password/form-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-select/form-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-static-area/form-static-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormStaticAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/components/form-static/form-static.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormStaticComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "File",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImagePreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputAndNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Password",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-modal/dynamic-form-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StaticArea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-notification-modal/dynamic-form-notification-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormNotificationModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-table-modal/dynamic-form-table-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormTableModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form-table/dynamic-form-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/containers/dynamic-form/dynamic-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/custom-validators/custom-validators.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomValidators",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/custom-validators/custom-validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isEmptyInputValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/models/button.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/models/field-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FieldConfig",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/models/field.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Field",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/models/modal-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ModalConfig",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/models/notification-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NotificationConfig",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/dynamic-form/services/dynamic-form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DynamicFormService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/feature-map/feature-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeatureMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/feature-map/feature-map.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/feature-map/model/epic.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Epic",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/feature-map/model/feature.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Feature",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/feature-map/model/program-increment.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProgramIncrement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/highlight-pipe/highlight.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "HighlightPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/lexical-rank/lexical-rank.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LexicalRankService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/memoize/memoize-payload.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MemoizePayload",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/memoize/memoize.decorator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "memoize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/page-template/model/sub-menu-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/page-template/page-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/page-wrapper/page-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/secure-pipe/secure.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SecurePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/shorten-pipe/shorten.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ShortenPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/side-bar/model/menu-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/side-bar/model/quick-link.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "QuickLink",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/side-bar/side-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/side-bar/sticky-popover.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "StickyPopoverDirective",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/theme/model/colors.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/theme/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/tree-view/models/tree-view-node.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TreeviewNode",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/tree-view/models/tree-view-option.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TreeviewOptions",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/tree-view/tree-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/model/world-map-continent.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "continents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/model/world-map-coordinate.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WorldMapCoordinate",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/model/world-map-country.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WorldMapCountry",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/model/world-map-flow.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WorldMapFlow",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/world-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorldMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/world-map.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COUNTRIES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/app/shared/world-map/world-map.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/main/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}